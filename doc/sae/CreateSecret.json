{"summary":"调用CreateSecret接口创建命名空间中的Secret实例。","path":"/pop/v1/sam/secret/secret","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"write","deprecated":false,"systemTags":{"abilityTreeCode":"159985","abilityTreeNodes":["FEATUREsaeD9PL61"]},"parameters":[{"name":"NamespaceId","in":"query","schema":{"description":"Secret实例所在命名空间ID。默认同RegionId。","type":"string","required":true,"example":"cn-beijing:test"}},{"name":"SecretName","in":"query","schema":{"description":"Secret实例名称。允许数字、字母和下划线（_）组合，仅允许以字母开头。","type":"string","required":true,"example":"registry-auth-acree"}},{"name":"SecretType","in":"query","schema":{"description":"当前支持的Secret实例类型。取值说明如下：\n\n- **kubernetes.io/dockerconfigjson**：存储镜像仓库用户名和密码的保密字典，用于部署时拉取镜像鉴权。","type":"string","required":true,"example":"kubernetes.io/dockerconfigjson","enum":["Opaque","kubernetes.io/dockerconfigjson","kubernetes.io/tls"]}},{"name":"SecretData","in":"query","style":"json","schema":{"type":"object","properties":{"SecretData":{"type":"string","required":true}},"required":true}}],"responses":{"200":{"schema":{"description":"返回数据。","type":"object","properties":{"RequestId":{"description":"请求ID。","type":"string","example":"91F93257-7A4A-4BD3-9A7E-2F6EAE6D****"},"Message":{"description":"调用结果的附加信息。","type":"string","example":"success"},"TraceId":{"description":"调用链ID，用于精确查询调用信息。","type":"string","example":"0a98a02315955564772843261e****"},"Data":{"description":"返回结果。","type":"object","properties":{"SecretId":{"description":"创建成功的Secret实例ID。","type":"integer","format":"int64","example":"16"}}},"ErrorCode":{"description":"错误码。取值说明如下：\n\n- 请求成功：不返回**ErrorCode**字段。\n- 请求失败：返回**ErrorCode**字段。具体信息，请参见本文的**错误码**列表。","type":"string","example":"空"},"Code":{"description":"接口状态或POP错误码。取值说明如下：\n\n- **2xx**：成功。\n- **3xx**：重定向。\n- **4xx**：请求错误。\n- **5xx**：服务器错误。","type":"string","example":"200"},"Success":{"description":"创建Secret实例是否成功。取值说明如下：\n\n- **true**：创建成功。\n- **false**：创建失败。","type":"boolean","example":"true"}}}}},"errorCodes":{"400":[{"errorCode":"InvalidParameter.NotEmpty","errorMessage":"You must specify the parameter %s."},{"errorCode":"InvalidParameter.Obviously","errorMessage":"The specified parameter is invalid {%s}."},{"errorCode":"InvalidParameter.WithMessage","errorMessage":"The parameter is invalid {%s}: %s"},{"errorCode":"SecretNameConflict.AlreadyExist","errorMessage":"The specified SecretName [%s] already exist in this namespace."},{"errorCode":"QuotaExceeded.SecretInNamespace","errorMessage":"The specified secret exceeded quota [%s]."},{"errorCode":"QuotaExceeded.SecretDataKey","errorMessage":"The specified key in SecretData exceeded quota [%s]."},{"errorCode":"InvalidSecretType.NotAvailable","errorMessage":"The specified SecretType [%s] is not supported."},{"errorCode":"InvalidSecretDataKey.NotFound","errorMessage":"The specified Key [%s] does not exist in the specified Secret [%s]."}],"404":[{"errorCode":"InvalidNamespaceId.NotFound","errorMessage":"The specified NamespaceId does not exist."}],"500":[{"errorCode":"OperationFailed.RPCError","errorMessage":"Internal RPC request processing error."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"91F93257-7A4A-4BD3-9A7E-2F6EAE6D****\\\",\\n  \\\"Message\\\": \\\"success\\\",\\n  \\\"TraceId\\\": \\\"0a98a02315955564772843261e****\\\",\\n  \\\"Data\\\": {\\n    \\\"SecretId\\\": 16\\n  },\\n  \\\"ErrorCode\\\": \\\"空\\\",\\n  \\\"Code\\\": \\\"200\\\",\\n  \\\"Success\\\": true\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<CreateSecretResponse>\\n    <RequestId>91F93257-7A4A-4BD3-9A7E-2F6EAE6D****</RequestId>\\n    <Message>success</Message>\\n    <TraceId>0a98a02315955564772843261e****</TraceId>\\n    <Data>\\n        <SecretId>16</SecretId>\\n    </Data>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</CreateSecretResponse>\",\"errorExample\":\"\"}]","title":"CreateSecret","requestParamsDescription":"**示例1: 使用用户名密码，跨账号内网拉取容器镜像服务ACR的镜像** \n\n1. 请同时填写公网与内网域名。\n2. 请同时填写**username**、**password**与**auth**字段，避免鉴权失败。**auth**字段格式`base64Encode($username:$password)`。\n3. 字段值默认格式如下。\n\n```\nSecretData[\".dockerconfigjson\"]=base64Encode(\n{\n  \"auths\": {\n    \"registry-vpc.cn-beijing.aliyuncs.com\": {  // $内网域名\n      \"username\": \"username\",\n      \"password\": \"password\",\n      \"auth\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\"\n    },\n    \"registry.cn-beijing.aliyuncs.com\": {     // $公网域名\n      \"username\": \"username\",                 // $用户名\n      \"password\": \"password\",                 // $密码\n      \"auth\": \"dXNlcm5hbWU6cGFzc3dvcmQ=\"      // base64Encode($用户名:$密码)\n    }\n  }\n} )\n```"}