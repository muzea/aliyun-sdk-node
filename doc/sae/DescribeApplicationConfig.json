{"path":"/pop/v1/sam/app/describeApplicationConfig","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"6317","abilityTreeNodes":["FEATUREsaeD9PL61"]},"parameters":[{"name":"AppId","in":"query","schema":{"description":"应用ID。","type":"string","required":true,"example":"7171a6ca-d1cd-4928-8642-7d5cfe69****"}},{"name":"VersionId","in":"query","schema":{"description":"版本ID。","type":"string","required":false,"example":"0026ff7f-2b57-4127-bdd0-9bf202bb****"}}],"responses":{"200":{"schema":{"description":"返回数据。","type":"object","properties":{"RequestId":{"description":"请求ID。","type":"string","example":"01CF26C7-00A3-4AA6-BA76-7E95F2A3****"},"Message":{"description":"调用结果的附加信息。","type":"string","example":"success"},"TraceId":{"description":"调用链ID，用于精确查询调用信息。","type":"string","example":"ac1a0b2215622246421415014e****"},"Data":{"description":"应用信息。","type":"object","properties":{"VpcId":{"description":"VPC ID。","type":"string","example":"vpc-2ze0i263cnn311nvj****"},"Readiness":{"description":"应用启动状态检查，多次健康检查失败的容器将被关闭并重启。不通过健康检查的容器将不会有SLB流量进入。支持**exec**、**httpGet**和**tcpSocket**方式。具体示例，请参见**Liveness**参数。\n\n> 只能选择一种方式进行健康检查。","type":"string","example":"{\"exec\":{\"command\":[\"curl http://localhost:8080\"]},\"initialDelaySeconds\":20,\"timeoutSeconds\":5}"},"ConfigMapMountDesc":{"description":"ConfigMap信息。","type":"array","items":{"description":"ConfigMap信息。","type":"object","properties":{"Key":{"description":"ConfigMap键值对。","type":"string","example":"k1"},"ConfigMapName":{"description":"ConfigMap名称。","type":"string","example":"test"},"MountPath":{"description":"容器挂载路径。","type":"string","example":"/tmp"},"ConfigMapId":{"description":"ConfigMap ID。","type":"integer","format":"int64","example":"1"}}}},"SecurityGroupId":{"description":"安全组ID。","type":"string","example":"sg-wz969ngg2e49q5i4****"},"BatchWaitTime":{"description":"分批发布时批次间的等待时间，单位为秒。","type":"integer","format":"int32","example":"10"},"Jdk":{"description":"部署包依赖的JDK版本。支持版本如下：\n\n- **Open JDK 8**\n- **Open JDK 7**\n- **Dragonwell 11**\n- **Dragonwell 8**\n- **openjdk-8u191-jdk-alpine3.9**\n- **openjdk-7u201-jdk-alpine3.9**\n\n当**Package Type**为**Image**时不支持。","type":"string","example":"Open JDK 8"},"ImageUrl":{"description":"镜像地址。当**Package Type**为**Image**时必填。","type":"string","example":"docker.io/library/nginx:1.14.2"},"SlsConfigs":{"description":"日志采集到SLS的配置。\n\n- 使用SAE自动创建的SLS资源：`[{\"logDir\":\"\",\"logType\":\"stdout\"},{\"logDir\":\"/tmp/a.log\"}]`。\n- 使用自定义的SLS资源：`[{\"projectName\":\"test-sls\",\"logType\":\"stdout\",\"logDir\":\"\",\"logstoreName\":\"sae\",\"logtailName\":\"\"},{\"projectName\":\"test\",\"logDir\":\"/tmp/a.log\",\"logstoreName\":\"sae\",\"logtailName\":\"\"}]`。\n\n参数说明如下：\n\n- **projectName**：配置SLS上的Project名称。  \n- **logDir**：日志路径。\n- **logType**：日志类型。**stdout**表示容器标准输出日志，仅可设置1条；如果不设置，则表示收集文件日志。\n- **logstoreName**：配置SLS上的Logstore名称。\n- **logtailName**：配置SLS上的Logtail名称，如果不指定，则表示新建Logtail。\n\n多次部署时如果SLS采集配置没有变更，则不需要设置该参数（即请求中无需包含**SlsConfigs**字段）；如果不再需要使用SLS采集功能，您需要在请求中将该字段的值设置为空字符串（即请求中**SlsConfigs**字段的值为\"\"）。","type":"string","example":"[{\"logDir\":\"\",\"logType\":\"stdout\"},{\"logDir\":\"/tmp/a.log\"}]"},"Liveness":{"description":"容器健康检查，健康检查失败的容器将被关闭并恢复。支持方式如下：\n\n- **exec**：例如 `{\"exec\":{\"command\":\\[\"sh\",\"-c\",\"cat/home/admin/start.sh\"]},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":2}`\n- **httpGet**：例如`{\"httpGet\":{\"path\":\"/\",\"port\":18091,\"scheme\":\"HTTP\",\"isContainKeyWord\":true,\"keyWord\":\"SAE\"},\"initialDelaySeconds\":11,\"periodSeconds\":10,\"timeoutSeconds\":1}`\n- **tcpSocket**：例如`{\"tcpSocket\":{\"port\":18091},\"initialDelaySeconds\":11,\"periodSeconds\":10,\"timeoutSeconds\":1}`\n\n> 只能选择一种方式进行健康检查。\n\n参数说明如下：\n\n- **exec.command**：设置健康检查命令。\n- **httpGet.path**：访问路径。\n- **httpGet.scheme**：**HTTP**或**HTTPS**。\n- **httpGet.isContainKeyWord**：**true**表示包含关键字，**false**表示不包含关键字，缺失该字段表示不使用高级功能。\n- **httpGet.keyWord**：自定义的关键字，使用时不能缺失**isContainKeyWord**字段。\n- **tcpSocket.port**：tcp连接检测的端口 。\n- **initialDelaySeconds**：设置健康检查延迟检测时间，默认为10，单位为秒。\n- **periodSeconds**：设置健康检查周期，默认为30，单位为秒。\n- **timeoutSeconds**：设置健康检查超时等待时间，默认为1，单位为秒。如果设置为0或不设置，默认超时等待时间为1秒。","type":"string","example":"{\"exec\":{\"command\":[\"curl http://localhost:8080\"]},\"initialDelaySeconds\":20,\"timeoutSeconds\":3}"},"Tags":{"description":"标签信息。","type":"array","items":{"description":"标签信息。","type":"object","properties":{"Key":{"description":"标签键。","type":"string","example":"k1"},"Value":{"description":"标签值。","type":"string","example":"v1"}}}},"PackageUrl":{"description":"部署包地址，如果您的部署包是通过SAE上传的需要注意以下两点：\n\n- 该地址不能直接下载，需要您通过GetPackageVersionAccessableUrl接口来获取可下载的地址（有效期10分钟）。\n- 该包SAE侧最长时间会保留90天，超过90天后不会返回给地址也不提供下载。","type":"string","example":"https://edas-bj.oss-cn-beijing.aliyuncs.com/apps/K8s_APP_ID/d4c97c37-aba3-403e-ae1e-6f7d8742****/hello-sae.war"},"PackageType":{"description":"应用包类型。取值说明如下：\n\n- 当您选择用Java部署时，支持**FatJar**、**War**和**Image**。\n- 当您选择用PHP部署时，支持类型如下：\n    - **PhpZip**\n    - **IMAGE\\_PHP\\_5\\_4**\n    - **IMAGE\\_PHP\\_5\\_4\\_ALPINE**\n    - **IMAGE\\_PHP\\_5\\_5**\n    - **IMAGE\\_PHP\\_5\\_5\\_ALPINE**\n    - **IMAGE\\_PHP\\_5\\_6**\n    - **IMAGE\\_PHP\\_5\\_6\\_ALPINE**\n    - **IMAGE\\_PHP\\_7\\_0**\n    - **IMAGE\\_PHP\\_7\\_0\\_ALPINE**\n    - **IMAGE\\_PHP\\_7\\_1**\n    - **IMAGE\\_PHP\\_7\\_1\\_ALPINE**\n    - **IMAGE\\_PHP\\_7\\_2**\n    - **IMAGE\\_PHP\\_7\\_2\\_ALPINE**\n    - **IMAGE\\_PHP\\_7\\_3**\n    - **IMAGE\\_PHP\\_7\\_3\\_ALPINE**","type":"string","example":"War"},"PreStop":{"description":"容器停止前执行脚本。在容器被删除前触发执行一段脚本，格式如：`{\"exec\":{\"command\":\\[\"cat\",\"/etc/group\"\\]}}`","type":"string","example":"{\"exec\":{\"command\":[\"cat\",\"/etc/group\"]}}"},"PackageVersion":{"description":"部署包的版本号。当**Package Type**为**FatJar**或**War**时必填。","type":"string","example":"1.0"},"JarStartArgs":{"description":"JAR包启动应用参数。应用默认启动命令：`$JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS \"$package_path\" $JarStartArgs`","type":"string","example":"start"},"AppName":{"description":"应用名称。","type":"string","example":"demo-app"},"AppId":{"description":"应用ID。","type":"string","example":"7171a6ca-d1cd-4928-8642-7d5cfe69****"},"JarStartOptions":{"description":"JAR包启动应用选项。应用默认启动命令：`$JAVA_HOME/bin/java $JarStartOptions -jar $CATALINA_OPTS \"$package_path\" $JarStartArgs`","type":"string","example":"-Dtest=true"},"Replicas":{"description":"应用实例个数。","type":"integer","format":"int32","example":"2"},"UpdateStrategy":{"description":"部署策略。当最小存活实例数等于1时，**UpdateStrategy**字段的值为\"\"。当最小存活实例数大于1时，示例如下：\n\n- 灰度1台+后续分2批+自动分批+分批间隔1分钟：`{\"type\":\"GrayBatchUpdate\",\"batchUpdate\":{\"batch\":2,\"releaseType\":\"auto\",\"batchWaitTime\":1},\"grayUpdate\":{\"gray\":1}}`\n \n- 灰度1台+后续分2批+手动分批：`{\"type\":\"GrayBatchUpdate\",\"batchUpdate\":{\"batch\":2,\"releaseType\":\"manual\"},\"grayUpdate\":{\"gray\":1}}`\n\n- 分2批+自动分批+分批间隔0分钟：`{\"type\":\"BatchUpdate\",\"batchUpdate\":{\"batch\":2,\"releaseType\":\"auto\",\"batchWaitTime\":0}}`\n\n参数说明如下：\n\n- **type**：发布策略类型，可选灰度发布**GrayBatchUpdate**或分批发布**BatchUpdate**。\n- **batchUpdate**：分批发布策略。\n    - **batch**：发布批次。\n    - **releaseType**：分批间处理方式，可选自动**auto**或手动**manual**。\n    - **batchWaitTime**：批次内部署间隔时间，单位为秒。\n- **grayUpdate**：灰度后剩余批次，当**type**为**GrayBatchUpdate**时必填。\n\n","type":"string","example":"{\"type\":\"GrayBatchUpdate\",\"batchUpdate\":{\"batch\":2,\"releaseType\":\"auto\",\"batchWaitTime\":1},\"grayUpdate\":{\"gray\":1}}"},"MinReadyInstances":{"description":"最小存活实例数。取值说明如下：\n\n- 如果设置为**0**，应用在升级过程中将会中断业务。\n- 如果设置为**-1**，最小存活实例数将使用系统推荐值，即取现有实例数的25%。如果当前为5个实例，5×25%=1.25，向上取整后，最小存活实例数为2。\n\n> 每次滚动部署最小存活的实例数建议≥1，保证业务不中断。","type":"integer","format":"int32","example":"1"},"MinReadyInstanceRatio":{"description":"最小存活实例数百分比。取值说明如下：\n\n- **-1**：默认值，表示不采用百分比。如果不填写，系统默认为**-1**。\n- **0~100**：单位为百分比，向上取整。例如设置为**50**%，如果当前为5个实例，则最小存活实例数为3。\n\n> 当**MinReadyInstance**和**MinReadyInstanceRatio**同时传递，且**MinReadyInstanceRatio**的取值非**-1**时，以**MinReadyInstanceRatio**参数为准。假设**MinReadyInstances**取值为**5**，**MinReadyInstanceRatio**取值为**50**，则会用**MinReadyInstanceRatio**来计算最小存活实例数。","type":"integer","format":"int32","example":"-1"},"Memory":{"description":"每个实例所需的内存，单位为MB，不能为0。与CPU为一一对应关系，目前仅支持以下固定规格：\n- **1024**：对应CPU为500毫核和1000毫核。\n- **2048**：对应CPU为500、1000毫核和2000毫核。\n- **4096**：对应CPU为1000、2000毫核和4000毫核。\n- **8192**：对应CPU为2000、4000毫核和8000毫核。\n- **12288**：对应CPU为12000毫核。\n- **16384**：对应CPU为4000、8000毫核和16000毫核。\n- **24576**：对应CPU为12000毫核。\n- **32768**：对应CPU为16000毫核。\n- **65536**：对应CPU为8000、16000和32000毫核。\n- **131072**：对应CPU为32000毫核。","type":"integer","format":"int32","example":"2048"},"Php":{"description":"PHP部署包依赖的PHP版本。镜像不支持。","type":"string","example":"PHP-FPM 7.0"},"PhpConfig":{"description":"PHP配置文件内容。","type":"string","example":"k1=v1"},"PhpConfigLocation":{"description":"PHP应用启动配置挂载路径，需要您保证PHP服务器会使用这个配置文件启动。","type":"string","example":"/usr/local/etc/php/php.ini"},"PostStart":{"description":"容器启动后执行脚本。在容器被创建后立刻触发执行一段脚本，格式如：`{\"exec\":{\"command\":\\[\"cat\",\"/etc/group\"\\]}}`","type":"string","example":"{\"exec\":{\"command\":[\"cat\",\"/etc/group\"]}}"},"TerminationGracePeriodSeconds":{"description":"优雅下线超时时间，默认为30，单位为秒。取值范围为1~300。","type":"integer","format":"int32","example":"10"},"CommandArgs":{"description":"镜像启动命令参数。启动命令**Command**所需参数。格式如下：\n\n`[\"a\",\"b\"]`\n\n在**Command**参数的示例中，`CommandArgs=[\"abc\", \">\", \"file0\"]`，其中`[\"abc\", \">\", \"file0\"]`需要转成String类型，里面的格式为JSON数组。如果无此参数，则无需填写。","type":"string","example":"[\"a\",\"b\"]"},"NamespaceId":{"description":"命名空间ID。","type":"string","example":"cn-beijing:test"},"MountHost":{"description":"NAS在应用VPC内的挂载点。部署时如果配置没有变更，则不需要设置该参数（即请求中无需包含**MountHost**字段）；如果需要清除NAS配置，您需要在请求中将该字段的值设置为空字符串（即请求中**MountHost**字段的值为\"\"）。","type":"string","example":"example.com"},"TomcatConfig":{"description":"Tomcat文件配置，设置为\"\"或\"{}\"表示删除配置：\n\n- **port**：端口范围为1024~65535，小于1024的端口需要Root权限才能操作。因为容器配置的是Admin权限，所以请填写大于1024的端口。如果不配置，则默认为8080。\n- **contextPath**：访问路径，默认为根目录\"/\"。\n- **maxThreads**：配置连接池的连接数大小，默认大小为400。\n- **uriEncoding**：Tomcat的编码格式，包括**UTF-8**、**ISO-8859-1**、**GBK**和**GB2312**。如果不设置，则默认为**ISO-8859-1**。\n- **useBodyEncoding**：是否使用**BodyEncoding for URL**，默认为**true**。","type":"string","example":"{\"port\":8080,\"contextPath\":\"/\",\"maxThreads\":400,\"uriEncoding\":\"ISO-8859-1\",\"useBodyEncodingForUri\":true}"},"RegionId":{"description":"地域ID。","type":"string","example":"cn-beijing"},"VSwitchId":{"description":"vSwitch ID。","type":"string","example":"vsw-2ze559r1z1bpwqxwp****"},"Cpu":{"description":"每个实例所需的CPU，单位为毫核，不能为0。目前仅支持以下固定规格：\n\n- **500**\n- **1000**\n- **2000**\n- **4000**\n- **8000**\n- **16000**\n- **32000**","type":"integer","format":"int32","example":"1000"},"Envs":{"description":"容器环境变量参数。支持自定义或引用配置项。如需引用配置项，请先创建ConfigMap实例。更多信息，请参见[CreateConfigMap](~~176914~~)。取值说明如下：\n- 自定义配置\n    - **name**：环境变量名称。\n    - **value**：环境变量值。\n- 引用配置项\n    - **name**：环境变量名称。支持引用单个或全部键，如果引用全部键，需输入`sae-sys-configmap-all-<配置项名称>`，例如`sae-sys-configmap-all-test1`。\n    - **valueFrom**：环境变量引用。取值为`configMapRef`。\n    - **configMapId**：配置项ID。\n    - **key**：键。如果引用全部健值，则不设置该字段。","type":"string","example":"[{\"name\":\"TEST_ENV_KEY\",\"value\":\"TEST_ENV_VAR\"}]"},"MountDesc":{"description":"挂载描述信息。","type":"array","items":{"description":"挂载描述信息。","type":"object","properties":{"MountPath":{"description":"容器挂载路径。","type":"string","example":"/tmp"},"NasPath":{"description":"NAS相对文件目录。","type":"string","example":"/"}}}},"EnableAhas":{"description":"是否接入AHAS。取值说明如下：\n\n- **true**：接入AHAS。\n- **false**：不接入AHAS。","type":"string","example":"true"},"CustomHostAlias":{"description":"容器内自定义Host映射。取值说明如下：\n\n- **hostName**：域名或主机名。\n- **ip**：IP地址。","type":"string","example":"[{\"hostName\":\"test.host.name\",\"ip\":\"0.0.0.0\"}]"},"WebContainer":{"description":"部署包依赖的Tomcat版本。支持版本如下：\n\n- **apache-tomcat-7.0.91**\n- **apache-tomcat-8.5.42**\n\n当**Package Type**为**Image**时不支持。","type":"string","example":"apache-tomcat-7.0.91"},"Command":{"description":"镜像启动命令。该命令必须为容器内存在的可执行的对象。示例如下：\n\n```\ncommand:\n      - echo\n      - abc\n      - >\n      - file0\n```\n根据上述示例，则`Command=\"echo\", CommandArgs=[\"abc\", \">\", \"file0\"]`。","type":"string","example":"echo"},"WarStartOptions":{"description":"WAR包启动应用选项。应用默认启动命令：`java $JAVA_OPTS $CATALINA_OPTS -Options org.apache.catalina.startup.Bootstrap \"$@\" start`。","type":"string","example":"custom-option"},"PhpArmsConfigLocation":{"description":"PHP应用监控挂载路径，需要您保证PHP服务器一定会加载这个路径的配置文件。\n\n您无需关注配置内容，SAE会自动渲染正确的配置文件。","type":"string","example":"/usr/local/etc/php/conf.d/arms.ini"},"NasId":{"description":"NAS ID。","type":"string","example":"AKSN89**"},"OssAkId":{"title":"OSS读写的AK","description":"OSS读写的AccessKey ID。","type":"string","example":"xxxxxx"},"OssAkSecret":{"title":"OSS读写的secret","description":"OSS读写的AccessKey Secret。","type":"string","example":"xxxxxx"},"OssMountDescs":{"title":"OSS挂载描述信息","description":"OSS挂载描述信息。","type":"array","items":{"description":"OSS挂载描述信息。","type":"object","properties":{"bucketName":{"title":"Bucket名称","description":"Bucket名称。","type":"string","example":"oss-bucket"},"bucketPath":{"title":"Bucket中Oss Key名称","description":"您在OSS创建的目录或OSS对象，如果OSS挂载目录不存在，会触发异常。","type":"string","example":"data/user.data"},"mountPath":{"title":"挂载到容器的路径","description":"您在SAE的容器路径。如果路径已存在，为覆盖关系；如果路径不存在，会新建。","type":"string","example":"/usr/data/user.data"},"readOnly":{"title":"是否只读","description":"容器路径是否对挂载目录资源有可读权限，取值说明如下：\n\n- **true**：只读权限。\n- **false**：读写权限。","type":"boolean","example":"true"}}}},"EdasContainerVersion":{"description":"HSF框架中应用运行环境版本，例如Ali-Tomcat容器。","type":"string","example":"3.5.3"},"Timezone":{"description":"时区，默认为**Asia/Shanghai**。","type":"string","example":"Asia/Shanghai"},"AppDescription":{"description":"应用描述信息。","type":"string","example":"示例应用"},"EnableGreyTagRoute":{"title":"开启流量灰度","description":"是否启用流量灰度规则。该规则仅适用于Spring Cloud和Dubbo框架的应用。取值说明如下：\n\n- **true**：启用灰度规则。\n- **false**：禁用灰度规则。","type":"boolean","example":"false"},"MseApplicationId":{"title":"对应MSE产品侧应用ID","description":"对应MSE产品侧应用ID。","type":"string","example":"xxxxxxx@xxxxx"},"AcrInstanceId":{"title":"ACR 企业版实例 ID","description":"ACR企业版实例ID。","type":"string","example":"cri-xxxxxx"},"AcrAssumeRoleArn":{"description":"跨账号拉取镜像时所需的RAM角色的ARN。更多信息，请参见[跨账号拉取阿里云镜像](~~190675~~)和[通过RAM角色实现跨云账号授权](~~223585~~)。","type":"string","example":"acs:ram::123456789012****:role/adminrole"},"ImagePullSecrets":{"description":"对应保密字典ID。","type":"string","example":"10"},"AssociateEip":{"title":"是否绑定EIP","description":"是否绑定EIP。取值说明如下：\n\n- **true**：绑定。\n- **false**：不绑定。","type":"boolean","example":"true"},"KafkaConfigs":{"description":"日志采集到Kafka的配置汇总信息。取值说明如下：\n\n- **kafkaEndpoint**：Kafka API的服务接入地址。\n- **kafkaInstanceId**：Kafka实例ID。\n- **kafkaConfigs**：单条或多条日志的配置汇总信息。示例值与参数说明，请参见本文的请求参数**kafkaConfigs**。","type":"string","example":"{\"kafkaEndpoint\":\"10.0.X.XXX:XXXX,10.0.X.XXX:XXXX,10.0.X.XXX:XXXX\",\"kafkaInstanceId\":\"alikafka_pre-cn-7pp2l8kr****\",\"kafkaConfigs\":[{\"logType\":\"file_log\",\"logDir\":\"/tmp/a.log\",\"kafkaTopic\":\"test2\"},{\"logType\":\"stdout\",\"logDir\":\"\",\"kafkaTopic\":\"test\"}]}"},"ProgrammingLanguage":{"description":"创建应用的技术栈语言。取值说明如下：\n\n- **java**：Java语言。\n- **php**：PHP语言。\n- **other**：多语言，例如Python、C++、Go、.NET和Node.js等。","type":"string","example":"java"},"PvtzDiscovery":{"description":"开启K8s Service服务注册发现。","type":"string","example":"{     \"serviceName\": \"bwm-poc-sc-gateway-cn-beijing-front\",     \"namespaceId\": \"cn-beijing:front\",     \"portAndProtocol\": {         \"18012\": \"TCP\"     },     \"portProtocols\": [         {             \"port\": \"18012\",             \"protocol\": \"TCP\"         }     ],     \"enable\": true }"},"MicroRegistration":{"description":"选择Nacos注册中心，取值说明如下：\n- **0**：SAE内置Nacos。\n- **1**：用户自建Nacos。\n- **2**：MSE商业版Nacos。","type":"string","example":"\"0\""},"NasConfigs":{"description":"挂载NAS的配置。","type":"string","example":"[{\"mountPath\":\"/test1\",\"readOnly\":false,\"nasId\":\"nasId1\",\"mountDomain\":\"nasId1.cn-shenzhen.nas.aliyuncs.com\",\"nasPath\":\"/test1\"},{\"nasId\":\"nasId2\",\"mountDomain\":\"nasId2.cn-shenzhen.nas.aliyuncs.com\",\"readOnly\":false,\"nasPath\":\"/test2\",\"mountPath\":\"/test2\"}]"},"Python":{"description":"Python环境。支持PYTHON 3.9.15。","type":"string","example":"PYTHON 3.9.15"},"PythonModules":{"description":"自定义安装模块依赖。默认安装根目录下requirements.txt定义的依赖项。如果未配置或自定义软件包，可以指定安装的依赖。","type":"string","example":"Flask==2.0"},"MseApplicationName":{"description":"SAE服务注册到MSE后的应用名。","type":"string","example":"cn-shenzhen-alb-demo-5c****"},"AppSource":{"description":"SAE的应用类型","type":"string"},"ServiceTags":{"type":"object","additionalProperties":{"type":"string"}}}},"ErrorCode":{"description":"错误码。取值说明如下：\n\n- 请求成功：不返回**ErrorCode**字段。\n- 请求失败：返回**ErrorCode**字段。具体信息，请参见本文的**错误码**列表。","type":"string","example":"空"},"Code":{"description":"接口状态或POP错误码。取值说明如下：\n\n- **2xx**：成功。\n- **3xx**：重定向。\n- **4xx**：请求错误。\n- **5xx**：服务器错误。","type":"string","example":"200"},"Success":{"description":"获取应用配置信息是否成功。取值说明如下：\n\n- **true**：获取成功。\n- **false**：获取失败。","type":"boolean","example":"true"}}}}},"errorCodes":{"400":[{"errorCode":"InvalidApplication.NotFound","errorMessage":"The current application does not exist."}],"404":[{"errorCode":"InvalidAppId.NotFound","errorMessage":"The specified AppId does not exist."}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"01CF26C7-00A3-4AA6-BA76-7E95F2A3****\\\",\\n  \\\"Message\\\": \\\"success\\\",\\n  \\\"TraceId\\\": \\\"ac1a0b2215622246421415014e****\\\",\\n  \\\"Data\\\": {\\n    \\\"VpcId\\\": \\\"vpc-2ze0i263cnn311nvj****\\\",\\n    \\\"Readiness\\\": \\\"{\\\\\\\"exec\\\\\\\":{\\\\\\\"command\\\\\\\":[\\\\\\\"curl http://localhost:8080\\\\\\\"]},\\\\\\\"initialDelaySeconds\\\\\\\":20,\\\\\\\"timeoutSeconds\\\\\\\":5}\\\",\\n    \\\"ConfigMapMountDesc\\\": [\\n      {\\n        \\\"Key\\\": \\\"k1\\\",\\n        \\\"ConfigMapName\\\": \\\"test\\\",\\n        \\\"MountPath\\\": \\\"/tmp\\\",\\n        \\\"ConfigMapId\\\": 1\\n      }\\n    ],\\n    \\\"SecurityGroupId\\\": \\\"sg-wz969ngg2e49q5i4****\\\",\\n    \\\"BatchWaitTime\\\": 10,\\n    \\\"Jdk\\\": \\\"Open JDK 8\\\",\\n    \\\"ImageUrl\\\": \\\"docker.io/library/nginx:1.14.2\\\",\\n    \\\"SlsConfigs\\\": \\\"[{\\\\\\\"logDir\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"logType\\\\\\\":\\\\\\\"stdout\\\\\\\"},{\\\\\\\"logDir\\\\\\\":\\\\\\\"/tmp/a.log\\\\\\\"}]\\\",\\n    \\\"Liveness\\\": \\\"{\\\\\\\"exec\\\\\\\":{\\\\\\\"command\\\\\\\":[\\\\\\\"curl http://localhost:8080\\\\\\\"]},\\\\\\\"initialDelaySeconds\\\\\\\":20,\\\\\\\"timeoutSeconds\\\\\\\":3}\\\",\\n    \\\"Tags\\\": [\\n      {\\n        \\\"Key\\\": \\\"k1\\\",\\n        \\\"Value\\\": \\\"v1\\\"\\n      }\\n    ],\\n    \\\"PackageUrl\\\": \\\"https://edas-bj.oss-cn-beijing.aliyuncs.com/apps/K8s_APP_ID/d4c97c37-aba3-403e-ae1e-6f7d8742****/hello-sae.war\\\",\\n    \\\"PackageType\\\": \\\"War\\\",\\n    \\\"PreStop\\\": \\\"{\\\\\\\"exec\\\\\\\":{\\\\\\\"command\\\\\\\":[\\\\\\\"cat\\\\\\\",\\\\\\\"/etc/group\\\\\\\"]}}\\\",\\n    \\\"PackageVersion\\\": \\\"1.0\\\",\\n    \\\"JarStartArgs\\\": \\\"start\\\",\\n    \\\"AppName\\\": \\\"demo-app\\\",\\n    \\\"AppId\\\": \\\"7171a6ca-d1cd-4928-8642-7d5cfe69****\\\",\\n    \\\"JarStartOptions\\\": \\\"-Dtest=true\\\",\\n    \\\"Replicas\\\": 2,\\n    \\\"UpdateStrategy\\\": \\\"{\\\\\\\"type\\\\\\\":\\\\\\\"GrayBatchUpdate\\\\\\\",\\\\\\\"batchUpdate\\\\\\\":{\\\\\\\"batch\\\\\\\":2,\\\\\\\"releaseType\\\\\\\":\\\\\\\"auto\\\\\\\",\\\\\\\"batchWaitTime\\\\\\\":1},\\\\\\\"grayUpdate\\\\\\\":{\\\\\\\"gray\\\\\\\":1}}\\\",\\n    \\\"MinReadyInstances\\\": 1,\\n    \\\"MinReadyInstanceRatio\\\": -1,\\n    \\\"Memory\\\": 2048,\\n    \\\"Php\\\": \\\"PHP-FPM 7.0\\\",\\n    \\\"PhpConfig\\\": \\\"k1=v1\\\",\\n    \\\"PhpConfigLocation\\\": \\\"/usr/local/etc/php/php.ini\\\",\\n    \\\"PostStart\\\": \\\"{\\\\\\\"exec\\\\\\\":{\\\\\\\"command\\\\\\\":[\\\\\\\"cat\\\\\\\",\\\\\\\"/etc/group\\\\\\\"]}}\\\",\\n    \\\"TerminationGracePeriodSeconds\\\": 10,\\n    \\\"CommandArgs\\\": \\\"[\\\\\\\"a\\\\\\\",\\\\\\\"b\\\\\\\"]\\\",\\n    \\\"NamespaceId\\\": \\\"cn-beijing:test\\\",\\n    \\\"MountHost\\\": \\\"example.com\\\",\\n    \\\"TomcatConfig\\\": \\\"{\\\\\\\"port\\\\\\\":8080,\\\\\\\"contextPath\\\\\\\":\\\\\\\"/\\\\\\\",\\\\\\\"maxThreads\\\\\\\":400,\\\\\\\"uriEncoding\\\\\\\":\\\\\\\"ISO-8859-1\\\\\\\",\\\\\\\"useBodyEncodingForUri\\\\\\\":true}\\\",\\n    \\\"RegionId\\\": \\\"cn-beijing\\\",\\n    \\\"VSwitchId\\\": \\\"vsw-2ze559r1z1bpwqxwp****\\\",\\n    \\\"Cpu\\\": 1000,\\n    \\\"Envs\\\": \\\"[{\\\\\\\"name\\\\\\\":\\\\\\\"TEST_ENV_KEY\\\\\\\",\\\\\\\"value\\\\\\\":\\\\\\\"TEST_ENV_VAR\\\\\\\"}]\\\",\\n    \\\"MountDesc\\\": [\\n      {\\n        \\\"MountPath\\\": \\\"/tmp\\\",\\n        \\\"NasPath\\\": \\\"/\\\"\\n      }\\n    ],\\n    \\\"EnableAhas\\\": \\\"true\\\",\\n    \\\"CustomHostAlias\\\": \\\"[{\\\\\\\"hostName\\\\\\\":\\\\\\\"test.host.name\\\\\\\",\\\\\\\"ip\\\\\\\":\\\\\\\"0.0.0.0\\\\\\\"}]\\\",\\n    \\\"WebContainer\\\": \\\"apache-tomcat-7.0.91\\\",\\n    \\\"Command\\\": \\\"echo\\\",\\n    \\\"WarStartOptions\\\": \\\"custom-option\\\",\\n    \\\"PhpArmsConfigLocation\\\": \\\"/usr/local/etc/php/conf.d/arms.ini\\\",\\n    \\\"NasId\\\": \\\"AKSN89**\\\",\\n    \\\"OssAkId\\\": \\\"xxxxxx\\\",\\n    \\\"OssAkSecret\\\": \\\"xxxxxx\\\",\\n    \\\"OssMountDescs\\\": [\\n      {\\n        \\\"bucketName\\\": \\\"oss-bucket\\\",\\n        \\\"bucketPath\\\": \\\"data/user.data\\\",\\n        \\\"mountPath\\\": \\\"/usr/data/user.data\\\",\\n        \\\"readOnly\\\": true\\n      }\\n    ],\\n    \\\"EdasContainerVersion\\\": \\\"3.5.3\\\",\\n    \\\"Timezone\\\": \\\"Asia/Shanghai\\\",\\n    \\\"AppDescription\\\": \\\"示例应用\\\",\\n    \\\"EnableGreyTagRoute\\\": false,\\n    \\\"MseApplicationId\\\": \\\"xxxxxxx@xxxxx\\\",\\n    \\\"AcrInstanceId\\\": \\\"cri-xxxxxx\\\",\\n    \\\"AcrAssumeRoleArn\\\": \\\"acs:ram::123456789012****:role/adminrole\\\",\\n    \\\"ImagePullSecrets\\\": \\\"10\\\",\\n    \\\"AssociateEip\\\": true,\\n    \\\"KafkaConfigs\\\": \\\"{\\\\\\\"kafkaEndpoint\\\\\\\":\\\\\\\"10.0.X.XXX:XXXX,10.0.X.XXX:XXXX,10.0.X.XXX:XXXX\\\\\\\",\\\\\\\"kafkaInstanceId\\\\\\\":\\\\\\\"alikafka_pre-cn-7pp2l8kr****\\\\\\\",\\\\\\\"kafkaConfigs\\\\\\\":[{\\\\\\\"logType\\\\\\\":\\\\\\\"file_log\\\\\\\",\\\\\\\"logDir\\\\\\\":\\\\\\\"/tmp/a.log\\\\\\\",\\\\\\\"kafkaTopic\\\\\\\":\\\\\\\"test2\\\\\\\"},{\\\\\\\"logType\\\\\\\":\\\\\\\"stdout\\\\\\\",\\\\\\\"logDir\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"kafkaTopic\\\\\\\":\\\\\\\"test\\\\\\\"}]}\\\",\\n    \\\"ProgrammingLanguage\\\": \\\"java\\\",\\n    \\\"PvtzDiscovery\\\": \\\"{     \\\\\\\"serviceName\\\\\\\": \\\\\\\"bwm-poc-sc-gateway-cn-beijing-front\\\\\\\",     \\\\\\\"namespaceId\\\\\\\": \\\\\\\"cn-beijing:front\\\\\\\",     \\\\\\\"portAndProtocol\\\\\\\": {         \\\\\\\"18012\\\\\\\": \\\\\\\"TCP\\\\\\\"     },     \\\\\\\"portProtocols\\\\\\\": [         {             \\\\\\\"port\\\\\\\": \\\\\\\"18012\\\\\\\",             \\\\\\\"protocol\\\\\\\": \\\\\\\"TCP\\\\\\\"         }     ],     \\\\\\\"enable\\\\\\\": true }\\\",\\n    \\\"MicroRegistration\\\": \\\"\\\\\\\"0\\\\\\\"\\\",\\n    \\\"NasConfigs\\\": \\\"[{\\\\\\\"mountPath\\\\\\\":\\\\\\\"/test1\\\\\\\",\\\\\\\"readOnly\\\\\\\":false,\\\\\\\"nasId\\\\\\\":\\\\\\\"nasId1\\\\\\\",\\\\\\\"mountDomain\\\\\\\":\\\\\\\"nasId1.cn-shenzhen.nas.aliyuncs.com\\\\\\\",\\\\\\\"nasPath\\\\\\\":\\\\\\\"/test1\\\\\\\"},{\\\\\\\"nasId\\\\\\\":\\\\\\\"nasId2\\\\\\\",\\\\\\\"mountDomain\\\\\\\":\\\\\\\"nasId2.cn-shenzhen.nas.aliyuncs.com\\\\\\\",\\\\\\\"readOnly\\\\\\\":false,\\\\\\\"nasPath\\\\\\\":\\\\\\\"/test2\\\\\\\",\\\\\\\"mountPath\\\\\\\":\\\\\\\"/test2\\\\\\\"}]\\\",\\n    \\\"Python\\\": \\\"PYTHON 3.9.15\\\",\\n    \\\"PythonModules\\\": \\\"Flask==2.0\\\",\\n    \\\"MseApplicationName\\\": \\\"cn-shenzhen-alb-demo-5c****\\\",\\n    \\\"AppSource\\\": \\\"\\\",\\n    \\\"ServiceTags\\\": {\\n      \\\"key\\\": \\\"\\\"\\n    }\\n  },\\n  \\\"ErrorCode\\\": \\\"空\\\",\\n  \\\"Code\\\": \\\"200\\\",\\n  \\\"Success\\\": true\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeApplicationConfigResponse>\\n    <RequestId>01CF26C7-00A3-4AA6-BA76-7E95F2A3****</RequestId>\\n    <Message>success</Message>\\n    <TraceId>ac1a0b2215622246421415014e****</TraceId>\\n    <Data>\\n        <VpcId>vpc-2ze0i263cnn311nvj****</VpcId>\\n        <Readiness>{\\\"exec\\\":{\\\"command\\\":[\\\"curl http://localhost:8080\\\"]},\\\"initialDelaySeconds\\\":20,\\\"timeoutSeconds\\\":5}</Readiness>\\n        <ConfigMapMountDesc>\\n            <Key>k1</Key>\\n            <ConfigMapName>test</ConfigMapName>\\n            <MountPath>/tmp</MountPath>\\n            <ConfigMapId>1</ConfigMapId>\\n        </ConfigMapMountDesc>\\n        <SecurityGroupId>sg-wz969ngg2e49q5i4****</SecurityGroupId>\\n        <BatchWaitTime>10</BatchWaitTime>\\n        <Jdk>Open JDK 8</Jdk>\\n        <ImageUrl>docker.io/library/nginx:1.14.2</ImageUrl>\\n        <SlsConfigs>[{\\\"logDir\\\":\\\"\\\",\\\"logType\\\":\\\"stdout\\\"},{\\\"logDir\\\":\\\"/tmp/a.log\\\"}]</SlsConfigs>\\n        <Liveness>{\\\"exec\\\":{\\\"command\\\":[\\\"curl http://localhost:8080\\\"]},\\\"initialDelaySeconds\\\":20,\\\"timeoutSeconds\\\":3}</Liveness>\\n        <Tags>\\n            <Key>k1</Key>\\n            <Value>v1</Value>\\n        </Tags>\\n        <PackageUrl>https://edas-bj.oss-cn-beijing.aliyuncs.com/apps/K8s_APP_ID/d4c97c37-aba3-403e-ae1e-6f7d8742****/hello-sae.war</PackageUrl>\\n        <PackageType>War</PackageType>\\n        <PreStop>{\\\"exec\\\":{\\\"command\\\":[\\\"cat\\\",\\\"/etc/group\\\"]}}</PreStop>\\n        <PackageVersion>1.0</PackageVersion>\\n        <JarStartArgs>start</JarStartArgs>\\n        <AppName>demo-app</AppName>\\n        <AppId>7171a6ca-d1cd-4928-8642-7d5cfe69****</AppId>\\n        <JarStartOptions>-Dtest=true</JarStartOptions>\\n        <Replicas>2</Replicas>\\n        <UpdateStrategy>{\\\"type\\\":\\\"GrayBatchUpdate\\\",\\\"batchUpdate\\\":{\\\"batch\\\":2,\\\"releaseType\\\":\\\"auto\\\",\\\"batchWaitTime\\\":1},\\\"grayUpdate\\\":{\\\"gray\\\":1}}</UpdateStrategy>\\n        <MinReadyInstances>1</MinReadyInstances>\\n        <MinReadyInstanceRatio>-1</MinReadyInstanceRatio>\\n        <Memory>2048</Memory>\\n        <Php>PHP-FPM 7.0</Php>\\n        <PhpConfig>k1=v1</PhpConfig>\\n        <PhpConfigLocation>/usr/local/etc/php/php.ini</PhpConfigLocation>\\n        <PostStart>{\\\"exec\\\":{\\\"command\\\":[\\\"cat\\\",\\\"/etc/group\\\"]}}</PostStart>\\n        <TerminationGracePeriodSeconds>10</TerminationGracePeriodSeconds>\\n        <CommandArgs>[\\\"a\\\",\\\"b\\\"]</CommandArgs>\\n        <NamespaceId>cn-beijing:test</NamespaceId>\\n        <MountHost>example.com</MountHost>\\n        <TomcatConfig>{\\\"port\\\":8080,\\\"contextPath\\\":\\\"/\\\",\\\"maxThreads\\\":400,\\\"uriEncoding\\\":\\\"ISO-8859-1\\\",\\\"useBodyEncodingForUri\\\":true}</TomcatConfig>\\n        <RegionId>cn-beijing</RegionId>\\n        <VSwitchId>vsw-2ze559r1z1bpwqxwp****</VSwitchId>\\n        <Cpu>1000</Cpu>\\n        <Envs>[{\\\"name\\\":\\\"TEST_ENV_KEY\\\",\\\"value\\\":\\\"TEST_ENV_VAR\\\"}]</Envs>\\n        <MountDesc>\\n            <MountPath>/tmp</MountPath>\\n            <NasPath>/</NasPath>\\n        </MountDesc>\\n        <EnableAhas>true</EnableAhas>\\n        <CustomHostAlias>[{\\\"hostName\\\":\\\"test.host.name\\\",\\\"ip\\\":\\\"0.0.0.0\\\"}]</CustomHostAlias>\\n        <WebContainer>apache-tomcat-7.0.91</WebContainer>\\n        <Command>echo</Command>\\n        <WarStartOptions>custom-option</WarStartOptions>\\n        <PhpArmsConfigLocation>/usr/local/etc/php/conf.d/arms.ini</PhpArmsConfigLocation>\\n        <NasId>AKSN89**</NasId>\\n        <OssAkId>xxxxxx</OssAkId>\\n        <OssAkSecret>xxxxxx</OssAkSecret>\\n        <OssMountDescs>\\n            <bucketName>oss-bucket</bucketName>\\n            <bucketPath>data/user.data</bucketPath>\\n            <mountPath>/usr/data/user.data</mountPath>\\n            <readOnly>true</readOnly>\\n        </OssMountDescs>\\n        <EdasContainerVersion>3.5.3</EdasContainerVersion>\\n        <Timezone>Asia/Shanghai</Timezone>\\n        <AppDescription>示例应用</AppDescription>\\n        <EnableGreyTagRoute>false</EnableGreyTagRoute>\\n        <MseApplicationId>xxxxxxx@xxxxx</MseApplicationId>\\n        <AcrInstanceId>cri-xxxxxx</AcrInstanceId>\\n        <AcrAssumeRoleArn>acs:ram::123456789012****:role/adminrole</AcrAssumeRoleArn>\\n        <ImagePullSecrets>10</ImagePullSecrets>\\n        <AssociateEip>true</AssociateEip>\\n        <KafkaConfigs>{\\\"kafkaEndpoint\\\":\\\"10.0.X.XXX:XXXX,10.0.X.XXX:XXXX,10.0.X.XXX:XXXX\\\",\\\"kafkaInstanceId\\\":\\\"alikafka_pre-cn-7pp2l8kr****\\\",\\\"kafkaConfigs\\\":[{\\\"logType\\\":\\\"file_log\\\",\\\"logDir\\\":\\\"/tmp/a.log\\\",\\\"kafkaTopic\\\":\\\"test2\\\"},{\\\"logType\\\":\\\"stdout\\\",\\\"logDir\\\":\\\"\\\",\\\"kafkaTopic\\\":\\\"test\\\"}]}</KafkaConfigs>\\n        <ProgrammingLanguage>java</ProgrammingLanguage>\\n        <PvtzDiscovery>{     \\\"serviceName\\\": \\\"bwm-poc-sc-gateway-cn-beijing-front\\\",     \\\"namespaceId\\\": \\\"cn-beijing:front\\\",     \\\"portAndProtocol\\\": {         \\\"18012\\\": \\\"TCP\\\"     },     \\\"portProtocols\\\": [         {             \\\"port\\\": \\\"18012\\\",             \\\"protocol\\\": \\\"TCP\\\"         }     ],     \\\"enable\\\": true }</PvtzDiscovery>\\n        <MicroRegistration>\\\"0\\\"</MicroRegistration>\\n        <NasConfigs>[{\\\"mountPath\\\":\\\"/test1\\\",\\\"readOnly\\\":false,\\\"nasId\\\":\\\"nasId1\\\",\\\"mountDomain\\\":\\\"nasId1.cn-shenzhen.nas.aliyuncs.com\\\",\\\"nasPath\\\":\\\"/test1\\\"},{\\\"nasId\\\":\\\"nasId2\\\",\\\"mountDomain\\\":\\\"nasId2.cn-shenzhen.nas.aliyuncs.com\\\",\\\"readOnly\\\":false,\\\"nasPath\\\":\\\"/test2\\\",\\\"mountPath\\\":\\\"/test2\\\"}]</NasConfigs>\\n        <Python>PYTHON 3.9.15</Python>\\n        <PythonModules>Flask==2.0</PythonModules>\\n        <MseApplicationName>cn-shenzhen-alb-demo-5c****</MseApplicationName>\\n        <SaeVersion>v1</SaeVersion>\\n    </Data>\\n    <Code>200</Code>\\n    <Success>true</Success>\\n</DescribeApplicationConfigResponse>\",\"errorExample\":\"\"}]","title":"获取应用配置信息","summary":"调用DescribeApplicationConfig接口获取应用配置信息。","requestParamsDescription":" ","responseParamsDescription":" ","extraInfo":" "}