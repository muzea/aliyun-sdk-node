{"methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","systemTags":{"operationType":"get"},"parameters":[{"name":"ResourceType","in":"query","schema":{"description":"资源类型。  \n关于ROS支持的资源类型，请参见[资源类型索引](~~127039~~)。","type":"string","required":true,"docRequired":true,"example":"ALIYUN::ROS::WaitConditionHandle"}},{"name":"VersionId","in":"query","schema":{"description":"版本ID。如果要查询资源类型某个版本，请指定该参数。否则，查询资源类型。\n\n> 当前仅模块支持版本。","type":"string","required":false,"example":"v1"}}],"responses":{"200":{"schema":{"type":"object","properties":{"RequestId":{"description":"请求ID。","type":"string","example":"A28FBA2E-B6B3-5822-AA45-AB875EF23641"},"Attributes":{"description":"资源的返回值。","type":"object","example":"参见示例"},"ResourceType":{"description":"资源类型。","type":"string","example":"ALIYUN::ROS::WaitConditionHandle"},"Properties":{"description":"资源的属性。","type":"object","example":"参见示例"},"SupportDriftDetection":{"description":"该资源是否支持偏差检测。取值：\n\n- true：支持。\n\n- false：不支持。\n\n","type":"boolean","example":"false"},"SupportScratchDetection":{"description":"该资源是否支持资源场景。取值：\n\n- true：支持。\n\n- false：不支持。\n","type":"boolean","example":"false"},"EntityType":{"description":"实体类型。取值：\n\n\n- Resource：普通资源类型。更多信息，请参见[资源](~~28863~~)。\n\n- DataSource：数据源资源类型。更多信息，请参见[数据源资源](~~404753~~)。\n\n- Module：模块。","type":"string","enumValueTitles":{"Resource":"Resource","Module":"Module","DataSource":"DataSource"},"example":"Resource"},"Provider":{"description":"资源类型提供者。取值：\n- ROS：资源编排服务。\n- Self：用户自己。","type":"string","enumValueTitles":{"ROS":"ROS","Self":"Self"},"example":"ROS"},"Description":{"description":"资源类型描述。","type":"string","example":"It is a demo."},"DefaultVersionId":{"description":"默认版本ID。\n\n> 仅查询资源类型时返回。","type":"string","example":"v1"},"LatestVersionId":{"description":"最新版本ID。\n> 仅查询资源类型时返回。","type":"string","example":"v10"},"CreateTime":{"description":"创建时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ss。","type":"string","example":"2023-02-24T08:25:21\n"},"UpdateTime":{"description":"更新时间，按照ISO8601标准表示，并需要使用UTC时间。格式为：YYYY-MM-DDThh:mm:ss。","type":"string","example":"2023-02-24T08:25:21\n"},"TotalVersionCount":{"description":"版本总数。\n> 仅查询资源类型时返回。","type":"integer","format":"int32","example":"10"},"IsDefaultVersion":{"description":"是否默认版本。取值：\n- true：是默认版本。\n- false：不是默认版本。\n> 仅查询资源类型版本时返回。","type":"boolean","enumValueTitles":{"true":"true","false":"false"},"example":"true"},"TemplateBody":{"description":"模块的模板内容。\n> 仅查询资源类型版本时返回。","type":"string","example":"{\"ROSTemplateFormatVersion\":\"2015-09-01\"}"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"A28FBA2E-B6B3-5822-AA45-AB875EF23641\\\",\\n  \\\"Attributes\\\": {\\n    \\\"test\\\": \\\"test\\\",\\n    \\\"test2\\\": 1\\n  },\\n  \\\"ResourceType\\\": \\\"ALIYUN::ROS::WaitConditionHandle\\\",\\n  \\\"Properties\\\": {\\n    \\\"test\\\": \\\"test\\\",\\n    \\\"test2\\\": 1\\n  },\\n  \\\"SupportDriftDetection\\\": false,\\n  \\\"SupportScratchDetection\\\": false,\\n  \\\"EntityType\\\": \\\"Resource\\\",\\n  \\\"Provider\\\": \\\"ROS\\\",\\n  \\\"Description\\\": \\\"It is a demo.\\\",\\n  \\\"DefaultVersionId\\\": \\\"v1\\\",\\n  \\\"LatestVersionId\\\": \\\"v10\\\",\\n  \\\"CreateTime\\\": \\\"2023-02-24T08:25:21\\\\n\\\",\\n  \\\"UpdateTime\\\": \\\"2023-02-24T08:25:21\\\\n\\\",\\n  \\\"TotalVersionCount\\\": 10,\\n  \\\"IsDefaultVersion\\\": true,\\n  \\\"TemplateBody\\\": \\\"{\\\\\\\"ROSTemplateFormatVersion\\\\\\\":\\\\\\\"2015-09-01\\\\\\\"}\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<GetResourceTypeResponse>\\n    <SupportScratchDetection>false</SupportScratchDetection>\\n    <EntityType>Resource</EntityType>\\n    <RequestId>A28FBA2E-B6B3-5822-AA45-AB875EF23641</RequestId>\\n    <Attributes>\\n        <CurlCli>\\n            <Description>Convenience attribute, provides curl CLI command prefix, which can be used for signalling handle completion or failure.  You can signal success by adding --data-binary '{\\\"status\\\": \\\"SUCCESS\\\"}' , or signal failure by adding --data-binary '{\\\"status\\\": \\\"FAILURE\\\"}'</Description>\\n        </CurlCli>\\n        <WindowsCurlCli>\\n            <Description>Convenience attribute, provides curl CLI command prefix for Windows, which can be used for signalling handle completion or failure. As Windows does not support curl command, you need to install curl.exe and add it to PATH first. You can signal success by adding --data-binary \\\"{\\\\\\\"status\\\\\\\": \\\\\\\"SUCCESS\\\\\\\"}\\\" , or signal failure by adding --data-binary \\\"{\\\\\\\"status\\\\\\\": \\\\\\\"FAILURE\\\\\\\"}\\\" </Description>\\n        </WindowsCurlCli>\\n        <Headers>\\n            <Description>HTTP POST Headers used for signalling handle completion or failure.</Description>\\n        </Headers>\\n        <URL>\\n            <Description>HTTP POST URL used for signalling handle completion or failure.</Description>\\n        </URL>\\n        <PowerShellCurlCli>\\n            <Description>Convenience attribute, provides curl CLI command prefix for PowerShell, which can be used for signalling handle completion or failure. As this cmdlet was introduced in PowerShell 3.0, ensure the version of PowerShell satisfies the constraint. (Show the version via $PSVersionTable.PSVersion.) You can signal success by adding -Body '{\\\"status\\\": \\\"SUCCESS\\\"}' , or signal failure by adding -Body '{\\\"status\\\": \\\"FAILURE\\\"}' </Description>\\n        </PowerShellCurlCli>\\n    </Attributes>\\n    <ResourceType>ALIYUN::ROS::WaitConditionHandle</ResourceType>\\n    <Properties>\\n        <Mode>\\n            <SupportScratchDetection>false</SupportScratchDetection>\\n            <Immutable>false</Immutable>\\n            <Type>string</Type>\\n            <Description>If set to Increment, all old signals will be deleted before update. In this mode, WaitCondition.Count should reference an incremental value instead of a full value, such as ScalingGroupEnable.ScalingRuleArisExecuteResultNumberOfAddedInstances.\\n\\nIf set to Full, no old signal will be deleted unless Count is set. In this mode, WaitCondition.Count should reference a full value, such as the same value with InstanceGroup.MaxAmount. It is recommended to use this mode with Count.\\n\\nDefault to Full.</Description>\\n            <Constraints>\\n                <AllowedValues>Increment</AllowedValues>\\n                <AllowedValues>Full</AllowedValues>\\n            </Constraints>\\n            <Required>false</Required>\\n            <Default>Full</Default>\\n            <UpdateAllowed>true</UpdateAllowed>\\n        </Mode>\\n        <Count>\\n            <SupportScratchDetection>false</SupportScratchDetection>\\n            <Immutable>false</Immutable>\\n            <Type>integer</Type>\\n            <Description>There are 3 preconditions that make Count taking effect:\\n1.Mode is set to Full.\\n2.Count &gt;= 0.\\n3.The id of signal is not specified. If so, it will be a self-increasing integer started from 1. For example, the id of the first signal is 1, the id of the second signal is 2, and so on.\\n\\nIf Count takes effect, signals with id &gt; Count will be deleted before update.\\nThe default value is -1, which means no effect.\\nIt is recommended to quote the same value with WaitCondition.Count.</Description>\\n            <Required>false</Required>\\n            <Default>-1</Default>\\n            <UpdateAllowed>true</UpdateAllowed>\\n        </Count>\\n    </Properties>\\n    <SupportDriftDetection>false</SupportDriftDetection>\\n</GetResourceTypeResponse>\",\"errorExample\":\"\"}]","title":"查询资源类型的详细信息","summary":"通过指定资源类型查询详细信息。","description":"本文将提供一个示例，查询资源类型`ALIYUN::ROS::WaitConditionHandle`的详细信息。","requestParamsDescription":" 关于公共请求参数的详情，请参见[公共参数](~~131957~~)。","responseParamsDescription":" ","extraInfo":"| HttpCode | 错误码 | 错误信息 | 描述 |\n| ------------- | ------------- | ------------- | ------------- |\n|404 |ResourceTypeNotFound |The Resource Type ({name}) could not be found. |资源类型不存在。name为资源类型名。 |"}