{"summary":"设置Namespace的key-value对，支持最大25M的请求体","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"write","systemTags":{"operationType":"get"},"parameters":[{"name":"Namespace","in":"query","schema":{"description":"调用[PutDcdnKvNamespace](~~PutDcdnKvNamespace~~)时指定的名称。","type":"string","required":true,"example":"test_namesapce"}},{"name":"Key","in":"query","schema":{"description":"需要设置的键名称，最长不超过512个字符，不能包含空格、反斜杠（/）。","type":"string","required":true,"example":"test_key"}},{"name":"Url","in":"query","schema":{"description":"存储有需要设置的键值对的下载链接，此参数由调用SDK时自动生成，请使用SDK进行调用。","type":"string","required":true,"example":"https://xxxobject.oss-cn-reginon.aliyuncs.com/9d91_xxxxxxxxxxx_158bb6e0f97c477791209bb46bd599f7"}}],"responses":{"200":{"schema":{"type":"object","properties":{"Length":{"description":"键值对中的值的长度。","type":"integer","format":"int32","example":"4"},"Value":{"description":"键的内容， 超过256个字符长度，将取前100及后100字符并省略中间。","type":"string","example":"test"},"RequestId":{"description":"请求ID。","type":"string","example":"EEEBE525-F576-1196-8DAF-2D70CA3F4D2F"}}}}},"errorCodes":{"400":[{"errorCode":"Invalid.Parameter","errorMessage":"The specified parameter is invalid."},{"errorCode":"InvalidAccount.Malformed","errorMessage":"The specified account is invalid."},{"errorCode":"InvalidNameSpace.Malformed","errorMessage":"The specified namespace is invalid."},{"errorCode":"InvalidKey.Malformed","errorMessage":"The specified key is invalid."},{"errorCode":"InvalidKey.ExceedsMaximum","errorMessage":"The size of the key cannot exceed 512 bytes."},{"errorCode":"InvalidValue.ExceedsMaximum","errorMessage":"The size of the value cannot exceed 2,000,000 bytes."}],"403":[{"errorCode":"InvalidKey.ExceedsCapacity","errorMessage":"The maximum capacity of a single namespace cannot exceed 1 GB."},{"errorCode":"Unauthorized.InvalidParameters","errorMessage":"The specified authentication parameters are invalid."},{"errorCode":"Unauthorized.InvalidTime","errorMessage":"The specified authentication time is invalid."},{"errorCode":"Unauthorized.InvalidToken","errorMessage":"Token authentication failed."},{"errorCode":"Unauthorized.InvalidResource","errorMessage":"Resource authentication failed."}],"404":[{"errorCode":"InvalidAccount.NotFound","errorMessage":"The specified account does not exist."},{"errorCode":"InvalidNameSpace.NotFound","errorMessage":"The specified namespace does not exist."},{"errorCode":"InvalidKey.NotFound","errorMessage":"The specified key does not exist."}],"406":[{"errorCode":"InvalidNameSpace.Duplicate","errorMessage":"The specified namespace already exists."},{"errorCode":"InvalidNameSpace.QuotaFull","errorMessage":"The maximum number of namespaces is exceeded."},{"errorCode":"InvalidKey.QuotaFull","errorMessage":"The maximum number of keys is exceeded."}],"429":[{"errorCode":"TooManyRequests","errorMessage":"Too many requests are submitted."},{"errorCode":"TooQuickRequests","errorMessage":"Request for putting or deleting keys are frequently submitted."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"Length\\\": 4,\\n  \\\"Value\\\": \\\"test\\\",\\n  \\\"RequestId\\\": \\\"EEEBE525-F576-1196-8DAF-2D70CA3F4D2F\\\"\\n}\",\"type\":\"json\"}]","title":"设置KV存储空间的单个大容量键值对","description":"本接口与[PutDcdnKv](~~PutDcdnKv~~)的功能一样，只是允许上传更大请求体。当请求体较小时推荐直接使用[PutDcdnKv](~~PutDcdnKv~~)接口，从而减少服务端处理时间。本接口需要使用SDK进行调用。以golang SDK为例，需要使用PutDcdnKvWithHighCapacityAdvance函数进行调用。\n```\nfunc TestPutDcdnKvWithHighCapacity() {\n\t// 配置初始化\n\tcfg := new(openapi.Config)\n\tcfg.SetAccessKeyId(\"xxxxxxxxx\")\n\tcfg.SetAccessKeySecret(\"xxxxxxxxxx\")\n\tcli, err := NewClient(cfg)\n\tif err != nil {\n\t\treturn err\n\t}\n\truntime := &util.RuntimeOptions{}\n\n\t// 构造待上传的键值对请求\n\tnamespace := \"test-put-kv\"\n\tkey := \"test_PutDcdnKvWithHighCapacity_0\"\n\tvalue := strings.Repeat(\"t\", 10*1024*1024)\n\trawReq := &PutDcdnKvRequest{\n\t\tNamespace: &namespace,\n\t\tKey:       &key,\n\t\tValue:     &value,\n\t}\n\tpayload, err := json.Marshal(rawReq)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// 如果payload大于2M，则调用大容量接口进行上传\n\treqHighCapacity := &PutDcdnKvWithHighCapacityAdvanceRequest{\n\t\tNamespace: &namespace,\n\t\tKey:       &key,\n\t\tUrlObject: bytes.NewReader([]byte(payload)),\n\t}\n\n\tresp, err := cli.PutDcdnKvWithHighCapacityAdvance(reqHighCapacity, runtime)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}"}