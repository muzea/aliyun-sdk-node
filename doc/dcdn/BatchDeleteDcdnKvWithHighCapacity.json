{"summary":"根据指定的键名列表批量删除指定KV存储空间下的键值对，最大允许上传100M的请求体。","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"Namespace","in":"query","schema":{"title":"","description":"调用[PutDcdnKvNamespace](~~PutDcdnKvNamespace~~)时指定的名称。","type":"string","required":true,"example":"test_namespace\n"}},{"name":"Url","in":"query","schema":{"description":"存储有需要批量删除键值对的下载链接，此参数由调用SDK时自动生成，请使用SDK进行调用。","type":"string","required":true,"example":"https://xxxobject.oss-cn-reginon.aliyuncs.com/9d91_xxxxxxxxxxx_158bb6e0f97c477791209bb46bd599f7","isFileTransferUrl":true}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"RequestId":{"title":"Id of the request","description":"请求ID。","type":"string","example":"EEEBE525-F576-1196-8DAF-2D70CA3F4D2F"},"FailKeys":{"description":"删除失败的键列表。","type":"array","items":{"description":"删除失败的键名。","type":"string","example":"test_key1"}},"SuccessKeys":{"description":"删除成功的键列表。","type":"array","items":{"description":"删除成功的键名。","type":"string","example":"test_key1"}}}}}},"errorCodes":{"400":[{"errorCode":"Invalid.Parameter","errorMessage":"The specified parameter is invalid."},{"errorCode":"InvalidNameSpace.Malformed","errorMessage":"The specified namespace is invalid."},{"errorCode":"InvalidAccount.Malformed","errorMessage":"The specified account is invalid."},{"errorCode":"InvalidKey.Malformed","errorMessage":"The specified key is invalid."},{"errorCode":"InvalidKey.ExceedsMaximum","errorMessage":"The size of the key cannot exceed 512 bytes."},{"errorCode":"InvalidValue.ExceedsMaximum","errorMessage":"The size of the value cannot exceed 2,000,000 bytes."},{"errorCode":"InvalidKey.TooManyKeys","errorMessage":"request contains too many keys."}],"403":[{"errorCode":"InvalidKey.ExceedsCapacity","errorMessage":"The maximum capacity of a single namespace cannot exceed 1 GB."},{"errorCode":"Unauthorized.InvalidParameters","errorMessage":"The specified authentication parameters are invalid."},{"errorCode":"Unauthorized.InvalidTime","errorMessage":"The specified authentication time is invalid."},{"errorCode":"Unauthorized.InvalidToken","errorMessage":"Token authentication failed."}],"404":[{"errorCode":"InvalidNameSpace.NotFound","errorMessage":"The specified namespace does not exist."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"EEEBE525-F576-1196-8DAF-2D70CA3F4D2F\\\",\\n  \\\"FailKeys\\\": [\\n    \\\"test_key1\\\"\\n  ],\\n  \\\"SuccessKeys\\\": [\\n    \\\"test_key1\\\"\\n  ]\\n}\",\"type\":\"json\"}]","title":"批量删除KV存储空间的大容量的键值对","description":"本接口与[BatchDeleteDcdnKv](~~BatchDeleteDcdnKv~~)的功能一样，只是允许上传更大请求体。当请求体较小时推荐直接使用[BatchDeleteDcdnKv](~~BatchDeleteDcdnKv~~)接口，从而减少服务端处理时间。本接口需要使用SDK进行调用。以golang SDK为例，需要使用BatchDeleteDcdnKvWithHighCapacityAdvance函数进行调用。\n```\nfunc TestBatchDeleteWithHighCapacity() error {\n\t// 配置初始化\n\tcfg := new(openapi.Config)\n\tcfg.SetAccessKeyId(\"xxxxxxxxx\")\n\tcfg.SetAccessKeySecret(\"xxxxxxxxxx\")\n\tcli, err := NewClient(cfg)\n\tif err != nil {\n\t\treturn err\n\t}\n\truntime := &util.RuntimeOptions{}\n\n\t// 构造待批量删除的键值对请求\n\tnamespace := \"test_batch_put\"\n\trawReq := BatchDeleteDcdnKvRequest{\n\t\tNamespace: &namespace,\n\t}\n\tfor i := 0; i < 10000; i++ {\n\t\tkey := fmt.Sprintf(\"test_key_%d\", i)\n\t\trawReq.Keys = append(rawReq.Keys, &key)\n\t}\n\tpayload, err := json.Marshal(rawReq)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// 如果payload大于2M，则调用大容量接口进行删除\n\treqHighCapacity := BatchDeleteDcdnKvWithHighCapacityAdvanceRequest{\n\t\tNamespace: &namespace,\n\t\tUrlObject: bytes.NewReader(payload),\n\t}\n\tresp, err := cli.BatchDeleteDcdnKvWithHighCapacityAdvance(&reqHighCapacity, runtime)\n\tif err != nil {\n\t\treturn err\n\t}\n\treturn nil\n}"}