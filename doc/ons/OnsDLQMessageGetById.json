{"methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"MsgId","in":"query","schema":{"description":"需查询的消息的ID，即Message ID。","type":"string","required":true,"docRequired":true,"example":"0BC16699165C03B925DB8A404E2D****"}},{"name":"GroupId","in":"query","schema":{"description":"需查询的消费端Group ID。","type":"string","required":true,"docRequired":true,"example":"GID_test_group_id"}},{"name":"InstanceId","in":"query","schema":{"description":"需查询消息所对应的实例ID。","type":"string","required":false,"docRequired":true,"example":"MQ_INST_111111111111_DOxxxxxx"}}],"responses":{"200":{"schema":{"type":"object","properties":{"RequestId":{"description":"为公共参数，每个请求的ID都是唯一的。","type":"string","example":"A07E3902-B92E-44A6-B6C5-6AA111111****"},"Data":{"description":"查询结果。","type":"object","properties":{"StoreSize":{"description":"消息大小。单位：KB。","type":"integer","format":"int32","example":"407"},"ReconsumeTimes":{"description":"消息重试消费的次数。","type":"integer","format":"int32","example":"1"},"StoreTimestamp":{"description":"消息被服务端存储的时间戳。单位：毫秒。","type":"integer","format":"int64","example":"1570761026708"},"InstanceId":{"description":"实例ID。","type":"string","example":"MQ_INST_111111111111_DOxxxxxx"},"MsgId":{"description":"消息ID。","type":"string","example":"0BC16699165C03B925DB8A404E2D****"},"StoreHost":{"description":"存储该消息的服务器实例。","type":"string","example":"11.220.***.***:10911"},"Topic":{"description":"消息的Topic。","type":"string","example":"test-mq_topic"},"PropertyList":{"type":"object","properties":{"MessageProperty":{"description":"消息属性列表。","type":"array","items":{"type":"object","properties":{"Value":{"description":"消息属性的取值。","type":"string","example":"TagA"},"Name":{"description":"消息属性。取值说明如下：\n- **TRACE_ON**：是否有消息轨迹\n- **KEYS**：消息的Key属性\n- **TAGS**：消息的Tag属性\n- **INSTANCE_ID**：消息所在的实例的ID\n\n更多概念信息请参见[名词解释](~~29533~~)。","type":"string","example":"TAGS"}}}}}},"BornTimestamp":{"description":"消息生成的时间戳。单位：毫秒。","type":"integer","format":"int64","example":"1570761026630"},"BodyCRC":{"description":"消息体CRC校验值。","type":"integer","format":"int32","example":"914112295"},"BornHost":{"description":"生成该消息的生产者实例。","type":"string","example":"42.120.**.**:64646"}}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"A07E3902-B92E-44A6-B6C5-6AA111111****\\\",\\n  \\\"Data\\\": {\\n    \\\"StoreSize\\\": 407,\\n    \\\"ReconsumeTimes\\\": 1,\\n    \\\"StoreTimestamp\\\": 1570761026708,\\n    \\\"InstanceId\\\": \\\"MQ_INST_111111111111_DOxxxxxx\\\",\\n    \\\"MsgId\\\": \\\"0BC16699165C03B925DB8A404E2D****\\\",\\n    \\\"StoreHost\\\": \\\"11.220.***.***:10911\\\",\\n    \\\"Topic\\\": \\\"test-mq_topic\\\",\\n    \\\"PropertyList\\\": {\\n      \\\"MessageProperty\\\": [\\n        {\\n          \\\"Value\\\": \\\"TagA\\\",\\n          \\\"Name\\\": \\\"TAGS\\\"\\n        }\\n      ]\\n    },\\n    \\\"BornTimestamp\\\": 1570761026630,\\n    \\\"BodyCRC\\\": 914112295,\\n    \\\"BornHost\\\": \\\"42.120.**.**:64646\\\"\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<OnsDLQMessageGetByIdResponse>\\n<Data>\\n    <MsgId>1E0578FE110F18B4AAC235C0C8460BA2</MsgId>\\n    <InstanceId>MQ_INST_111111111111_DOxxxxxx</InstanceId>\\n    <ReconsumeTimes>1</ReconsumeTimes>\\n    <BornHost>42.120.**.**:64646</BornHost>\\n    <BodyCRC>914112295</BodyCRC>\\n    <StoreHost>11.220.***.***:10911</StoreHost>\\n    <StoreTimestamp>1570761026708</StoreTimestamp>\\n    <BornTimestamp>1570761026630</BornTimestamp>\\n    <Topic>test-mq_topic</Topic>\\n    <StoreSize>407</StoreSize>\\n    <PropertyList>\\n        <MessageProperty>\\n            <Name>TRACE_ON</Name>\\n            <Value>true</Value>\\n        </MessageProperty>\\n        <MessageProperty>\\n            <Name>RETRY_TOPIC</Name>\\n            <Value>MQ_INST_111111111111_DOxxxxxx%test-mq_topic</Value>\\n        </MessageProperty>\\n        <MessageProperty>\\n            <Name>KEYS</Name>\\n            <Value>ORDERID_993</Value>\\n        </MessageProperty>\\n        <MessageProperty>\\n            <Name>UNIQ_KEY</Name>\\n            <Value>1E0578FE110F18B4AAC235C0C84*****</Value>\\n        </MessageProperty>\\n        <MessageProperty>\\n            <Name>WAIT</Name>\\n            <Value>false</Value>\\n        </MessageProperty>\\n        <MessageProperty>\\n            <Name>TAGS</Name>\\n            <Value>TagA</Value>\\n        </MessageProperty>\\n        <MessageProperty>\\n            <Name>INSTANCE_ID</Name>\\n            <Value>MQ_INST_111111111111_DOxxxxxx</Value>\\n        </MessageProperty>\\n    </PropertyList>\\n</Data>\\n<RequestId>A07E3902-B92E-44A6-B6C5-6AA111111****</RequestId>\\n</OnsDLQMessageGetByIdResponse>\",\"errorExample\":\"\"}]","title":"根据Message ID查询死信消息","summary":"通过传入Message ID查询指定的死信消息。包括存储时间、消息体、Key和Tag。","description":"><notice>阿里云提供的OpenAPI属于管控类API，用于管理和查询阿里云服务的相关资源。仅推荐在管控链路集成，消息收发的核心数据链路中严禁依赖OpenAPI实现，否则可能会导致链路产生风险。></notice>\n根据Message ID查询死信消息的方式属于精确查询。查询条件需要的Message ID从消息发送成功的SendResult中获取，或者从批量查询的接口中获取。查询到的信息包括死信消息的存储时间、消息体、Key和Tag等属性。","responseParamsDescription":" ","extraInfo":"## 控制台操作\n除了调用**OnsDLQMessageGetById**接口，您还可以通过云消息队列 RocketMQ 版控制台查看死信消息。具体操作，请参见[死信队列](~~87277~~)。"}