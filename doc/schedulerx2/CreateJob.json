{"methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"write","systemTags":{"operationType":"create"},"parameters":[{"name":"RegionId","in":"query","schema":{"description":"地域ID。","type":"string","required":true,"docRequired":true,"example":"cn-hangzhou"}},{"name":"Namespace","in":"formData","schema":{"description":"命名空间ID，在控制台的命名空间页面中获取。","type":"string","required":true,"docRequired":true,"example":"adcfc35d-e2fe-4fe9-bbaa-20e90ffc****"}},{"name":"NamespaceSource","in":"formData","schema":{"description":"特殊第三方才需要填写。","type":"string","required":false,"example":"schedulerx","default":"schedulerx"}},{"name":"GroupId","in":"formData","schema":{"description":"应用ID，在控制台的应用管理页面中获取。","type":"string","required":true,"docRequired":true,"example":"testSchedulerx.defaultGroup"}},{"name":"JobType","in":"formData","schema":{"description":"任务类型，目前支持以下几种任务类型：\n\n- java\n- python\n- shell\n- go\n- http\n- xxljob\n- dataworks\n- k8s\n- springschedule","type":"string","required":true,"docRequired":true,"enumValueTitles":{"python":"python","xxljob":"xxljob","java":"java","shell":"shell","go":"go","http":"http","dataworks":"dataworks"},"example":"java"}},{"name":"Name","in":"formData","schema":{"description":"任务名。","type":"string","required":true,"docRequired":true,"example":"helloworld"}},{"name":"Description","in":"formData","schema":{"description":"任务描述。","type":"string","required":false,"example":"Test"}},{"name":"ExecuteMode","in":"formData","schema":{"description":"任务执行模式，目前支持以下几种任务执行模式：\n\n- **单机运行**：standalone\n- **广播运行**：broadcast\n- **可视化MapReduce**：parallel\n- **MapReduce**：batch\n- **分片运行**：sharding","type":"string","required":true,"docRequired":true,"enumValueTitles":{"broadcast":"广播运行","parallel":"并行计算","grid":"内存网格","batch":"网格计算","standalone":"单机运行","sharding":"分片运行"},"example":"standalone"}},{"name":"ClassName","in":"formData","schema":{"description":"任务接口类完整路径。\n\n当您选择Java任务类型时，才有该字段且必须填写完整路径。","type":"string","required":false,"example":"com.alibaba.schedulerx.test.helloworld"}},{"name":"Content","in":"formData","schema":{"description":"任务类型选择为Python/Shell/Go/K8s时，必填的脚本代码内容。","type":"string","required":false,"example":"echo 'hello'"}},{"name":"Parameters","in":"formData","schema":{"description":"用户自定义参数，运行时可以获取。","type":"string","required":false,"example":"test"}},{"name":"MaxConcurrency","in":"formData","schema":{"description":"最大同时运行实例数量，默认值为1，即上次触发没有运行结束，即使到了运行时刻也不会进行下次触发。","type":"integer","format":"int32","required":false,"maximum":"200","minimum":"1","example":"1","default":"1"}},{"name":"MaxAttempt","in":"formData","schema":{"description":"错误最大重试次数，根据业务需求填写，默认值为0。","type":"integer","format":"int32","required":false,"example":"0","default":"0"}},{"name":"AttemptInterval","in":"formData","schema":{"description":"错误重试间隔，单位s，默认值为30。","type":"integer","format":"int32","required":false,"example":"30","default":"30"}},{"name":"PageSize","in":"formData","schema":{"description":"并行网格任务高级配置，单次拉取子任务数，默认值为100。","type":"integer","format":"int32","required":false,"example":"100","default":"100"}},{"name":"ConsumerSize","in":"formData","schema":{"description":"并行网格任务高级配置，单机单次触发执行线程数，默认值为5。","type":"integer","format":"int32","required":false,"example":"5","default":"5"}},{"name":"QueueSize","in":"formData","schema":{"description":"并行网格任务高级配置，子任务队列缓存上限，默认值为10000。","type":"integer","format":"int32","required":false,"example":"10000","default":"10000"}},{"name":"DispatcherSize","in":"formData","schema":{"description":"并行网格任务高级配置，子任务分发线程数，默认值为5。","type":"integer","format":"int32","required":false,"example":"5","default":"5"}},{"name":"TimeType","in":"formData","schema":{"description":"时间类型，目前支持以下几种时间类型：\n\n- **cron**：1\n- **fixed_rate**：3\n- **second_delay**：4\n- **one_time** ：5 \n- **api**：100","type":"integer","format":"int32","required":true,"docRequired":true,"enumValueTitles":{"1":"1","3":"3","4":"4","5":"5","100":"100"},"example":"1"}},{"name":"TimeExpression","in":"formData","schema":{"description":"时间表达式，根据选择的时间类型设置时间表达式。\n\n- **cron**：填写标准的cron表达式，支持在线验证。\n- **api**：无时间表达式。\n- **fixed_rate**：填写具体固定频率值，单位s。如30表示每隔30s触发一次。\n- **second_delay**：填写固定延迟多少秒执行一次（1s~60s可选）。\n- **one_time**: 填写指定时间（yyyy-MM-dd HH:mm:ss）或者时间戳（毫秒），比如\"2022-10-10 10:10:00\"","type":"string","required":false,"example":"0 0/10 * * * ?"}},{"name":"Calendar","in":"formData","schema":{"description":"cron类型可以选择填写自定义日历。","type":"string","required":false,"example":"暂不支持，不用填写"}},{"name":"DataOffset","in":"formData","schema":{"description":"cron类型可以选择时间偏移，单位s。","type":"integer","format":"int32","required":false,"example":"2400"}},{"name":"Timezone","in":"formData","schema":{"description":"时区","type":"string","required":false,"example":"GMT+8"}},{"name":"TimeoutEnable","in":"formData","schema":{"description":"超时报警开关。取值如下：\n\n- **true**：开启超时报警开关。\n- **false**：关闭超时报警开关。","type":"boolean","required":false,"enumValueTitles":{"false":"false","true":"true"},"example":"false","default":"true"}},{"name":"Timeout","in":"formData","schema":{"description":"超时阈值，单位s，默认值7200。","type":"integer","format":"int64","required":false,"example":"7200","default":"7200"}},{"name":"TimeoutKillEnable","in":"formData","schema":{"description":"超时终止开关。取值如下：\n\n- **true**：开启超时终止开关。\n- **false**：关闭超时终止开关。","type":"boolean","required":false,"enumValueTitles":{"false":"false","true":"true"},"example":"false","default":"true"}},{"name":"FailEnable","in":"formData","schema":{"description":"失败报警开关。取值如下：\n\n- **true**：开启失败报警开关。\n- **false**：关闭失败报警开关。","type":"boolean","required":false,"enumValueTitles":{"false":"false","true":"true"},"example":"false","default":"true"}},{"name":"FailTimes","in":"formData","schema":{"description":"连续失败报警次数","type":"integer","format":"int32","required":false,"example":"2","default":"1"}},{"name":"MissWorkerEnable","in":"formData","schema":{"description":"是否开启无可用机器报警。\n- **true**：开启无可用机器报警开关。\n- **false**：关闭无可用机器报警开关。","type":"boolean","required":false,"example":"false","default":"false"}},{"name":"SuccessNoticeEnable","in":"formData","schema":{"description":"成功通知开关","type":"boolean","required":false,"example":"false","default":"false"}},{"name":"SendChannel","in":"formData","schema":{"description":"报警发送形式，目前只支持短信发送报警，默认值sms。","type":"string","required":false,"example":"sms","default":"default"}},{"name":"TaskMaxAttempt","in":"formData","schema":{"description":"并行网格任务高级配置，子任务失败重试次数 ，默认值为0。","type":"integer","format":"int32","required":false,"maximum":"10","minimum":"0","example":"0","default":"0"}},{"name":"TaskAttemptInterval","in":"formData","schema":{"description":"并行网格任务高级配置，子任务失败重试间隔，默认值为0。","type":"integer","format":"int32","required":false,"minimum":"0","example":"0","default":"0"}},{"name":"ContactInfo","in":"formData","style":"repeatList","schema":{"description":"任务联系人信息。","type":"array","items":{"description":"任务联系人信息。","type":"object","properties":{"UserPhone":{"description":"报警接收手机号。","type":"string","required":false,"example":"1381111****"},"UserName":{"description":"报警联系人姓名。","type":"string","required":false,"example":"张三"},"UserMail":{"description":"报警联系人邮箱。","type":"string","required":false,"example":"test***@***.com"},"Ding":{"description":"报警联系人钉钉群机器人webhook地址，参考文档：[钉钉开发文档](https://open.dingtalk.com/document/org/application-types)。","type":"string","required":false,"example":"https://oapi.dingtalk.com/robot/send?access_token=**********"}},"required":false},"required":false,"maxItems":10}},{"name":"Status","in":"formData","schema":{"description":"0：禁用，1：启用，默认启用。","type":"integer","format":"int32","required":false,"example":"1","default":"1","enum":["0","1"]}},{"name":"XAttrs","in":"formData","schema":{"title":"如果是k8s任务类型，需要配置该参数\nJob任务：{\"resource\":\"job\"}\nShell任务：{\"image\":\"busybox\",\"resource\":\"shell\"}\n","description":"如果是k8s任务类型，需要配置该参数\nJob任务：{\"resource\":\"job\"}\nShell任务：{\"image\":\"busybox\",\"resource\":\"shell\"}\n","type":"string","required":false,"example":"{\"resource\":\"job\"}","enum":[]}}],"responses":{"200":{"schema":{"type":"object","properties":{"Code":{"description":"返回码。","type":"integer","format":"int32","example":"200"},"Message":{"description":"附加信息。","type":"string","example":"message"},"RequestId":{"description":"请求唯一ID。","type":"string","example":"39090022-1F3B-4797-8518-6B61095F1AF0"},"Success":{"description":"创建任务是否成功。取值如下：\n\n- **true**：创建任务成功。\n- **false**：创建任务失败。","type":"boolean","example":"true"},"Data":{"description":"任务详细信息。","type":"object","properties":{"JobId":{"description":"任务ID。","type":"integer","format":"int64","example":"92583"}}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"Code\\\": 200,\\n  \\\"Message\\\": \\\"message\\\",\\n  \\\"RequestId\\\": \\\"39090022-1F3B-4797-8518-6B61095F1AF0\\\",\\n  \\\"Success\\\": true,\\n  \\\"Data\\\": {\\n    \\\"JobId\\\": 92583\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<CreateJobResponse>\\n    <Code>200</Code>\\n    <Message>message</Message>\\n    <RequestId>39090022-1F3B-4797-8518-6B61095F1AF0</RequestId>\\n    <Success>true</Success>\\n    <Data>\\n        <JobId>92583</JobId>\\n    </Data>\\n</CreateJobResponse>\",\"errorExample\":\"\"}]","title":"创建任务并返回任务ID","summary":"创建任务并返回任务ID。","requestParamsDescription":" ","responseParamsDescription":" ","extraInfo":"##  创建Java任务\n\n```json\npackage com.alibaba.schedulerx.pop;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.aliyuncs.DefaultAcsClient;\nimport com.aliyuncs.profile.DefaultProfile;\nimport com.aliyuncs.schedulerx2.model.v20190430.CreateJobRequest;\nimport com.aliyuncs.schedulerx2.model.v20190430.CreateJobRequest.ContactInfo;\nimport com.aliyuncs.schedulerx2.model.v20190430.CreateJobResponse;\n\npublic class CreateJavaJob {\n\n    public static void main(String[] args) throws Exception {\n     //  OpenAPI的接入点，可查看产品支持的地域列表或根据购买产品的地域填写。\n        String regionId = \"cn-shanghai\";\n        //鉴权使用的AccessKey ID，由阿里云官网控制台获取。\n        String accessKeyId = \"<yourAccessKeyId>\";\n        //鉴权使用的AccessKey Secret，由阿里云官网控制台获取\n        String accessKeySecret = \"<yourAccessKeySecret>\";\n        //产品名称。\n        String productName =\"schedulerx2\";\n        //对照支持地域列表选择Domain填写。\n        String domain =\"schedulerx.cn-shanghai.aliyuncs.com\";\n        //构建OpenAPI客户端。\n        DefaultProfile.addEndpoint(regionId, productName, domain);\n        DefaultProfile defaultProfile = DefaultProfile.getProfile(regionId, accessKeyId, accessKeySecret);\n        DefaultAcsClient client = new DefaultAcsClient(defaultProfile);\n        \n        CreateJobRequest request = new CreateJobRequest();\n        request.setJobType(\"java\");\n        request.setExecuteMode(\"standalone\");\n        request.setDescription(\"test\");\n        request.setName(\"helloworld\");\n        request.setClassName(\"com.alibaba.schedulerx.test.helloworld\");\n        request.setTimeType(1);\n        request.setTimeExpression(\"0 0/10 * * * ?\");\n        request.setNamespace(\"xxxxx\");\n        request.setGroupId(\"xxxxxxx\");\n        // monitor\n        request.setTimeoutEnable(true);\n        request.setTimeoutKillEnable(true);\n        request.setFailEnable(true);\n        request.setTimeout(12300L);\n        List<ContactInfo> contactInfosList = new ArrayList<>();\n        ContactInfo contactInfo1 = new ContactInfo();\n        contactInfo1.setUserName(\"userA\");\n        contactInfo1.setUserPhone(\"1381111****\");\n        ContactInfo contactInfo2 = new ContactInfo();\n        contactInfo2.setUserName(\"userB\");\n        contactInfo2.setUserPhone(\"1382222****\");\n        contactInfosList.add(contactInfo1);\n        contactInfosList.add(contactInfo2);\n        request.setContactInfos(contactInfosList);\n        // attrs\n        //request.setQueueSize(123);\n        request.setTaskMaxAttempt(1);\n        request.setTaskAttemptInterval(100);\n        CreateJobResponse response = client.getAcsResponse(request);\n        if (response.getSuccess()) {\n            System.out.println(\"jobId=\" + response.getData().getJobId());\n        } else {\n            System.out.println(response.getMessage());\n        }\n    }\n\n}\n```\n\n## 创建HTTP任务\n\n```json\npackage com.alibaba.schedulerx.pop;\n\nimport com.alibaba.schedulerx.common.domain.HttpAttribute;\nimport com.alibaba.schedulerx.common.util.JsonUtil;\n\nimport com.aliyuncs.DefaultAcsClient;\nimport com.aliyuncs.profile.DefaultProfile;\nimport com.aliyuncs.schedulerx2.model.v20190430.CreateJobRequest;\nimport com.aliyuncs.schedulerx2.model.v20190430.CreateJobResponse;\n\npublic class CreateHttpJob {\n\n    public static void main(String[] args) throws Exception {\n     // OpenAPI的接入点，具体查看支持地域列表或根据购买地域填写。\n        String regionId = \"cn-shanghai\";\n        //鉴权使用的AccessKey ID，由阿里云官网控制台获取。\n        String accessKeyId = \"<yourAccessKeyId>\";\n        //鉴权使用的AccessKey Secret，由阿里云官网控制台获取。\n        String accessKeySecret = \"<yourAccessKeySecret>\";\n        //产品名称。\n        String productName =\"schedulerx2\";\n        //对照支持地域列表选择Domain填写。\n        String domain =\"schedulerx.cn-shanghai.aliyuncs.com\";\n        //构建OpenAPI客户端。\n        DefaultProfile.addEndpoint(regionId, productName, domain);\n        DefaultProfile defaultProfile = DefaultProfile.getProfile(regionId, accessKeyId, accessKeySecret);\n        DefaultAcsClient client = new DefaultAcsClient(defaultProfile);\n        \n        CreateJobRequest request = new CreateJobRequest();\n        request.setNamespace(\"xxxxxxxx\");\n        request.setGroupId(\"xxxxxx\");\n        request.setJobType(\"http\");\n        request.setName(\"testHttpJob\");\n        request.setDescription(\"testHttpJob\");\n        request.setTimeType(1);\n        request.setTimeExpression(\"20 0/5 * * * ?\");\n        request.setExecuteMode(\"standalone\");\n        HttpAttribute httpAttribute = new HttpAttribute();\n        httpAttribute.setUrl(\"http://192.168.0.0:8080/test\");\n        httpAttribute.setMethod(\"GET\");\n        httpAttribute.setTimeout(10); //单位秒\n        httpAttribute.setRespKey(\"code\");\n        httpAttribute.setRespValue(\"200\");\n        request.setContent(JsonUtil.toJson(httpAttribute));\n        //POST参数，格式key1=value1&key2=value2。\n        request.setParameters(\"key1=value1&key2=value2\");   \n        \n        //发送请求。\n        CreateJobResponse response = client.getAcsResponse(request);\n        if (!response.getSuccess()) {\n            System.out.println(response.getMessage());\n            System.out.println(\"createApp: \"+response.getRequestId());\n        } else {\n            System.out.println(JsonUtil.toJson(response));\n        }\n    }\n    \n}\n```\n##  创建一次性任务\n\n```json\npackage com.alibaba.schedulerx.pop;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport com.aliyuncs.DefaultAcsClient;\nimport com.aliyuncs.profile.DefaultProfile;\nimport com.aliyuncs.schedulerx2.model.v20190430.CreateJobRequest;\nimport com.aliyuncs.schedulerx2.model.v20190430.CreateJobRequest.ContactInfo;\nimport com.aliyuncs.schedulerx2.model.v20190430.CreateJobResponse;\n\npublic class CreateJavaJob {\n\n    public static void main(String[] args) throws Exception {\n     // OpenAPI的接入点，可查看产品支持的地域列表或根据购买产品的地域填写。\n        String regionId = \"cn-shanghai\";\n        //鉴权使用的AccessKey ID，由阿里云官网控制台获取\n        String accessKeyId = \"xxxxxx\";\n        //鉴权使用的AccessKey Secret，由阿里云官网控制台获取\n        String accessKeySecret = \"xxxxxxxx\";\n        //产品名称\n        String productName =\"schedulerx2\";\n        //对照支持地域列表选择Domain填写\n        String domain =\"schedulerx.cn-shanghai.aliyuncs.com\";\n        //构建OpenAPI客户端\n        DefaultProfile.addEndpoint(regionId, productName, domain);\n        DefaultProfile defaultProfile = DefaultProfile.getProfile(regionId, accessKeyId, accessKeySecret);\n        DefaultAcsClient client = new DefaultAcsClient(defaultProfile);\n        \n        CreateJobRequest request = new CreateJobRequest();\n        request.setJobType(\"java\");\n        request.setExecuteMode(\"standalone\");\n        request.setDescription(\"test\");\n        request.setName(\"helloworld\");\n        request.setClassName(\"com.alibaba.schedulerx.test.helloworld\");\n        request.setTimeType(5);\n        request.setTimeExpression(\"2021-12-30 12:12:12\");\n        request.setNamespace(\"xxxxxx\");\n        request.setGroupId(\"xxxxxxx\");\n        // 报警监控\n        request.setTimeoutEnable(true);\n        request.setTimeoutKillEnable(true);\n        request.setFailEnable(true);\n        request.setTimeout(12300L);\n        // 高级配置\n        request.setMaxAttempt(3);\n        request.setAttemptInterval(30);\n        CreateJobResponse response = client.getAcsResponse(request);\n        if (response.getSuccess()) {\n            System.out.println(\"jobId=\" + response.getData().getJobId());\n        } else {\n            System.out.println(response.getMessage());\n        }\n    }\n    \n}\n```"}