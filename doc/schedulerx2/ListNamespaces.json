{"methods":["get","post"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","systemTags":{"operationType":"get"},"parameters":[{"name":"RegionId","in":"query","schema":{"description":"地域ID。","type":"string","required":true,"docRequired":true,"example":"cn-hangzhou"}},{"name":"NamespaceName","in":"query","schema":{"description":"命名空间名称。","type":"string","required":false,"example":"schedulerx-dev"}},{"name":"Namespace","in":"query","schema":{"description":"命名空间UID","type":"string","required":false,"example":"adcfc35d-e2fe-4fe9-bbaa-20e90ffc****"}}],"responses":{"200":{"schema":{"type":"object","properties":{"Code":{"description":"接口状态码。","type":"integer","format":"int32","example":"200"},"Message":{"description":"附加信息。","type":"string","example":"message"},"RequestId":{"description":"请求唯一ID。","type":"string","example":"71BCC0E3-64B2-4B63-A870-AFB64EBCB58C"},"Success":{"description":"调用接口是否成功。取值如下：\n\n- **true**：成功。\n\n- **false**：失败。","type":"boolean","example":"true"},"Data":{"description":"命名空间列表信息。","type":"object","properties":{"Namespaces":{"description":"命名空间列表与详情。","type":"array","items":{"type":"object","properties":{"Name":{"description":"命名空间名称。","type":"string","example":"doc"},"Description":{"description":"命名空间描述。","type":"string","example":"test"},"UId":{"description":"命名空间ID。","type":"string","example":"1a72ecb1-b4cc-400a-a71b-20cdec9b****"}}}}}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"Code\\\": 200,\\n  \\\"Message\\\": \\\"message\\\",\\n  \\\"RequestId\\\": \\\"71BCC0E3-64B2-4B63-A870-AFB64EBCB58C\\\",\\n  \\\"Success\\\": true,\\n  \\\"Data\\\": {\\n    \\\"Namespaces\\\": [\\n      {\\n        \\\"Name\\\": \\\"doc\\\",\\n        \\\"Description\\\": \\\"test\\\",\\n        \\\"UId\\\": \\\"1a72ecb1-b4cc-400a-a71b-20cdec9b****\\\"\\n      }\\n    ]\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<ListNamespacesResponse>\\n<Message>You have an error in your SQL syntax</Message>\\n<RequestId>71BCC0E3-64B2-4B63-A870-AFB64EBCB58C</RequestId>\\n<Data>\\n    <Namespaces>\\n        <UId>1a72ecb1-b4cc-400a-a71b-20cdec9b****</UId>\\n        <Description>test</Description>\\n        <Name>doc</Name>\\n    </Namespaces>\\n</Data>\\n<Code/>\\n<Success>true</Success>\\n</ListNamespacesResponse>\",\"errorExample\":\"\"}]","title":"获取命名空间列表","summary":"获取命名空间列表。","description":"在调用该接口前，需要在POM文件添加以下依赖：\n\n```\n<dependency>\n    <groupId>com.aliyun</groupId>\n    <artifactId>aliyun-java-sdk-schedulerx2</artifactId>\n    <version>1.0.5</version>\n</dependency>\n```","requestParamsDescription":" ","responseParamsDescription":" ","extraInfo":"## Demo\n```\npackage com.alibaba.schedulerx.pop;\n\nimport java.util.List;\n\nimport com.aliyuncs.DefaultAcsClient;\nimport com.aliyuncs.exceptions.ClientException;\nimport com.aliyuncs.exceptions.ServerException;\nimport com.aliyuncs.profile.DefaultProfile;\nimport com.aliyuncs.schedulerx2.model.v20190430.ListNamespacesRequest;\nimport com.aliyuncs.schedulerx2.model.v20190430.ListNamespacesResponse;\nimport com.aliyuncs.schedulerx2.model.v20190430.ListNamespacesResponse.Data.Namespace;\n\npublic class TestListNamespaces {\n\n    public static void main(String[] args) {\n        //OpenAPI的接入点，具体查看支持地域列表以及购买机器地域填写。\n        String regionId = \"cn-test\";\n        //鉴权使用的AccessKey ID，由阿里云官网控制台获取。\n        String accessKeyId = \"XXXXXXXX\";\n        //鉴权使用的AccessKey Secret，由阿里云官网控制台获取。\n        String accessKeySecret = \"XXXXXXXX\";\n        //产品名称。\n        String productName =\"schedulerx2\";\n        //对照支持地域列表选择Domain填写。\n        String domain =\"schedulerx.aliyuncs.com\";\n        //构建OpenAPI客户端。\n        DefaultProfile.addEndpoint(regionId, productName, domain);\n        DefaultProfile defaultProfile = DefaultProfile.getProfile(regionId, accessKeyId, accessKeySecret);\n        DefaultAcsClient client = new DefaultAcsClient(defaultProfile);\n        \n        ListNamespacesRequest request = new ListNamespacesRequest();\n        ListNamespacesResponse response;\n        try {\n            response = client.getAcsResponse(request);\n            if (!response.getSuccess()) {\n                System.out.println(response.getMessage());\n            } else {\n                List<Namespace> namespaces = response.getData().getNamespaces();\n                for (Namespace namespace : namespaces) {\n                    System.out.println(\"namespace uid=\" + namespace.getUId());\n                }\n            }\n        } catch (ServerException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (ClientException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n    \n}\n\n``` "}