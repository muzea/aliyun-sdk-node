{"summary":"获取工作流信息。","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"RegionId","in":"query","schema":{"description":"地域","type":"string","required":true,"example":"public"}},{"name":"Namespace","in":"query","schema":{"title":"命名空间uid","description":"命名空间ID","type":"string","required":true,"example":"4a06d5ea-f576-4326-842c-fb14ea043d8d"}},{"name":"NamespaceSource","in":"query","schema":{"title":"命名空间来源","description":"命名空间来源","type":"string","required":false,"example":"source"}},{"name":"GroupId","in":"query","schema":{"title":"应用分组ID","description":"应用分组ID","type":"string","required":true,"example":"hxm.test"}},{"name":"WorkflowId","in":"query","schema":{"title":"工作流ID","description":"工作流ID","type":"integer","format":"int64","required":true,"example":"1234"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"RequestId":{"title":"Id of the request","description":"请求ID","type":"string","example":"45678xxx"},"Code":{"title":"错误码","description":"错误码","type":"integer","format":"int32","example":"200"},"Message":{"title":"错误信息","description":"错误信息","type":"string","example":"workflow is not existed"},"Success":{"title":"会否成功","description":"结果","type":"boolean","example":"true"},"Data":{"title":"工作流的数据","description":"工作流的数据","type":"object","properties":{"WorkFlowInfo":{"title":"工作流基本信息","description":"工作流基本信息","type":"object","properties":{"WorkflowId":{"title":"工作流ID","description":"工作流ID","type":"integer","format":"int64","example":"1234xxx"},"Name":{"title":"工作流名称","description":"工作流名称","type":"string","example":"workflow_111"},"Description":{"title":"工作流描述","description":"工作流描述","type":"string","example":"my first workflow"},"Status":{"title":"工作流状态","description":"工作流状态","type":"string","example":"成功"},"TimeType":{"title":"工作流时间类型","description":"工作流时间类型","type":"string","example":"cron"},"TimeExpression":{"title":"工作流时间表达式","description":"工作流时间表达式","type":"string","example":"0 0 2 * * ?"}}},"WorkFlowNodeInfo":{"title":"工作流节点信息","description":"工作流节点信息","type":"object","properties":{"Nodes":{"title":"工作流节点列表","description":"工作流节点列表","type":"array","items":{"type":"object","properties":{"Id":{"title":"任务ID","description":"任务ID","type":"integer","format":"int64","example":"123456xxx"},"Label":{"title":"任务名称","description":"任务名称","type":"string","example":"job_111"},"Status":{"title":"任务状态","description":"任务状态","type":"integer","format":"int32","example":"1"}}}},"Edges":{"title":"工作流边列表","description":"工作流边列表","type":"array","items":{"type":"object","properties":{"Source":{"title":"起始任务ID","description":"起始任务ID","type":"integer","format":"int64","example":"100"},"Target":{"title":"目的任务ID","description":"目的任务ID","type":"integer","format":"int64","example":"200"}}}}}}}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"45678xxx\\\",\\n  \\\"Code\\\": 200,\\n  \\\"Message\\\": \\\"workflow is not existed\\\",\\n  \\\"Success\\\": true,\\n  \\\"Data\\\": {\\n    \\\"WorkFlowInfo\\\": {\\n      \\\"WorkflowId\\\": 0,\\n      \\\"Name\\\": \\\"workflow_111\\\",\\n      \\\"Description\\\": \\\"my first workflow\\\",\\n      \\\"Status\\\": \\\"成功\\\",\\n      \\\"TimeType\\\": \\\"cron\\\",\\n      \\\"TimeExpression\\\": \\\"0 0 2 * * ?\\\"\\n    },\\n    \\\"WorkFlowNodeInfo\\\": {\\n      \\\"Nodes\\\": [\\n        {\\n          \\\"Id\\\": 0,\\n          \\\"Label\\\": \\\"job_111\\\",\\n          \\\"Status\\\": 1\\n        }\\n      ],\\n      \\\"Edges\\\": [\\n        {\\n          \\\"Source\\\": 100,\\n          \\\"Target\\\": 200\\n        }\\n      ]\\n    }\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<GetWorkFlowResponse>\\n    <RequestId>45678xxx</RequestId>\\n    <Code>200</Code>\\n    <Message>workflow is not existed</Message>\\n    <Success>true</Success>\\n    <Data>\\n        <WorkFlowInfo>\\n            <Name>workflow_111</Name>\\n            <Description>my first workflow</Description>\\n            <Status>成功</Status>\\n            <TimeType>cron</TimeType>\\n            <TimeExpression>0 0 2 * * ?</TimeExpression>\\n        </WorkFlowInfo>\\n        <WorkFlowNodeInfo>\\n            <Nodes>\\n                <Label>job_111</Label>\\n                <Status>1</Status>\\n            </Nodes>\\n            <Edges>\\n                <Source>100</Source>\\n                <Target>200</Target>\\n            </Edges>\\n        </WorkFlowNodeInfo>\\n    </Data>\\n</GetWorkFlowResponse>\",\"errorExample\":\"\"}]","title":"获取工作流详情和依赖关系","extraInfo":"##  示例Demo\n```\npackage com.alibaba.schedulerx.pop;\n\nimport com.alibaba.schedulerx.common.util.JsonUtil;\n\nimport com.aliyuncs.DefaultAcsClient;\nimport com.aliyuncs.exceptions.ClientException;\nimport com.aliyuncs.exceptions.ServerException;\nimport com.aliyuncs.profile.DefaultProfile;\nimport com.aliyuncs.schedulerx2.model.v20190430.GetWorkFlowRequest;\nimport com.aliyuncs.schedulerx2.model.v20190430.GetWorkFlowResponse;\n\npublic class TestGetWorkFlow {\n\n    public static void main(String[] args) {\n     // OpenAPI的接入点，具体请查看支持地域列表或根据购买地域填写\n        String regionId = \"public\";\n      //鉴权使用的AccessKey ID，由阿里云官网控制台获取\n        String accessKeyId = \"xxxxxxx\";\n        //鉴权使用的AccessKey Secret，由阿里云官网控制台获取\n        String accessKeySecret = \"xxxxxxxxx\";\n        //产品名称\n        String productName =\"schedulerx2\";\n        //对照支持地域列表选择Domain填写\n        String domain =\"schedulerx.aliyuncs.com\";\n        //构建OpenAPI客户端\n        DefaultProfile.addEndpoint(regionId, productName, domain);\n        DefaultProfile defaultProfile = DefaultProfile.getProfile(regionId, accessKeyId, accessKeySecret);\n        DefaultAcsClient client = new DefaultAcsClient(defaultProfile);\n        \n        GetWorkFlowRequest request = new GetWorkFlowRequest();\n        request.setNamespace(\"433d8b23-06e9-408c-aaaa-90d4d1b9a4af\");\n        request.setGroupId(\"xuren_test\");\n        request.setWorkflowId(29L);\n        GetWorkFlowResponse response;\n        try {\n            response = client.getAcsResponse(request);\n            if (!response.getSuccess()) {\n                System.out.println(JsonUtil.toJson(response));\n            } else {\n                System.out.println(\"工作流基本信息：\" + response.getData().getWorkFlowInfo());\n                System.out.println(\"工作流节点信息：\" + response.getData().getWorkFlowNodeInfo());\n            }\n        } catch (ServerException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        } catch (ClientException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n    }\n    \n}\n   \n ```"}