{"path":"/pop/v5/k8s/acs/k8s_apps","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"readAndWrite","deprecated":false,"systemTags":{},"parameters":[{"name":"PreStop","in":"query","schema":{"description":"停止前执行脚本，示例格式：`{\"tcpSocket\":{\"host\":\"\", \"port\":8080}}`。\n如果设置为`{}`代表删除，不设置表示忽略。","type":"string","required":false,"example":"{\n    \"exec\":{\n        \"command\":[\n            \"ls\",\n            \"/\"\n        ]\n    }\n}"}},{"name":"Envs","in":"query","schema":{"description":"部署环境变量，格式需要符合JSON对象数组。支持三种类型的环境变量，分别是普通环境变量，K8s ConfigMap环境变量，K8s Secret环境变量。普通环境变量格式如下所示：\n\n`{\"name\":\"x\", \"value\": \"y\"}`\n\nConfigMap环境变量配置可以将指定的ConfigMap中对应的key的值注入到容器的环境变量中，配置的格式如下所示：\n\n`{\n  \"name\": \"x2\",\n  \"valueFrom\": {\n    \"configMapKeyRef\": {\n      \"name\": \"my-config\",\n      \"key\": \"y2\"\n    }\n  }\n}`\n\nSecret环境变量配置可以将指定的Secret中对应的key的值注入到容器的环境变量中，配置的格式如下所示：\n\n`{\n  \"name\": \"x3\",\n  \"valueFrom\": {\n    \"secretKeyRef\": {\n      \"name\": \"my-secret\",\n      \"key\": \"y3\"\n    }\n  }\n}`\n\n> 如果要取消该配置，需设置一个空JSON数组“[]”来表示不做配置。","type":"string","required":false,"example":"[{\"name\":\"x1\",\"value\":\"y1\"},{\"name\":\"x2\",\"valueFrom\":{\"configMapKeyRef\":{\"name\":\"my-config\",\"key\":\"y2\"}}},{\"name\":\"x3\",\"valueFrom\":{\"secretKeyRef\":{\"name\":\"my-secret\",\"key\":\"y3\"}}}]"}},{"name":"ImageTag","in":"query","schema":{"description":"镜像Tag。","type":"string","required":false,"example":"latest"}},{"name":"BatchWaitTime","in":"query","schema":{"description":"Pod分批发布的最小间隔时间，详细信息请参见[minReadySeconds](https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#min-ready-seconds)。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"Command","in":"query","schema":{"description":"容器启动命令。\n\n> 如果要取消该配置，需设置一个空字符串`\"\"`来表示不做配置。","type":"string","required":false,"example":"ls"}},{"name":"AppId","in":"query","schema":{"description":"应用ID，可通过调用ListApplication接口获取，详情请参见[ListApplication](~~149390~~)。","type":"string","required":true,"docRequired":true,"example":"e83acea6-****-47e1-96ae-c0e953772cdc"}},{"name":"PostStart","in":"query","schema":{"description":"启动后执行脚本，格式如：`{\"exec\":{\"command\":\\[\"cat\",\"/etc/group\"\\]}}`。如果设置为`{}`表示删除，不设置表示忽略。","type":"string","required":false,"example":"{\n    \"exec\":{\n        \"command\":[\n            \"ls\",\n            \"/\"\n        ]\n    }\n}"}},{"name":"Readiness","in":"query","schema":{"description":"容器业务状态检查，如果检查失败，经过K8s service的流量将不转入到该容器，格式如：`{\"failureThreshold\": 3,\"initialDelaySeconds\": 5,\"successThreshold\": 1,\"timeoutSeconds\": 1,\"httpGet\": {\"path\": \"/consumer\",\"port\": 8080,\"scheme\": \"HTTP\",\"httpHeaders\": \\[{\"name\": \"test\",\"value\": \"testvalue\"}\\]}}`。如果设置为`\"\"`或者`{}`表示删除，不设置表示忽略。","type":"string","required":false,"example":"{\"failureThreshold\": 3,\"initialDelaySeconds\": 5,\"successThreshold\": 1,\"timeoutSeconds\": 1,\"httpGet\": {\"path\": \"/consumer\",\"port\": 8080,\"scheme\": \"HTTP\",\"httpHeaders\": [{\"name\": \"test\",\"value\": \"testvalue\"}]}}"}},{"name":"Liveness","in":"query","schema":{"description":"容器存活状态监测，格式如`{\"failureThreshold\": 3,\"initialDelaySeconds\": 5,\"successThreshold\": 1,\"timeoutSeconds\": 1,\"tcpSocket\":{\"host\":\"\", \"port\":8080}}`。如果设置为`\"\"`或者`{}`表示删除，不设置表示忽略。","type":"string","required":false,"example":"{\"failureThreshold\": 3,\"initialDelaySeconds\": 5,\"successThreshold\": 1,\"timeoutSeconds\": 1,\"tcpSocket\":{\"host\":\"\", \"port\":8080}}"}},{"name":"Args","in":"query","schema":{"description":"容器启动Args命令参数，格式必须符合JSON数组`\\[\"参数1\",\"参数2\"\\]`，其中key固定为字符串，清空需设置为空JSON数组`\"\\[\\]\"`。","type":"string","required":false,"example":"[\"args1\",\"args2\"]"}},{"name":"Replicas","in":"query","schema":{"description":"应用实例数，最小为0。","type":"integer","format":"int32","required":false,"example":"1"}},{"name":"Image","in":"query","schema":{"description":"镜像完整URL，覆盖镜像Tag参数。","type":"string","required":false,"example":"registry-vpc.cn-beijing.aliyuncs.com/t****/app:v1"}},{"name":"CpuLimit","in":"query","schema":{"description":"应用运行过程中，应用实例的CPU限制。 单位：核数，设置为0表示不限制。","type":"integer","format":"int32","required":false,"example":"1"}},{"name":"MemoryLimit","in":"query","schema":{"description":"应用运行过程中，应用实例的内存限制。单位：MB，设置为0表示不限制。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"CpuRequest","in":"query","schema":{"description":"应用运行过程中，应用实例需要申请的CPU配额，推荐设置。\n单位：核数，设置为0表示不限制。\n\n> 设置该参数时，还需要设置CpuLimit参数，且需要小于等于CpuLimit的参数值。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"MemoryRequest","in":"query","schema":{"description":"应用运行过程中，应用实例需要申请的内存配额，推荐设置。单位：MB。设置为0表示不申请。\n\n> 设置该参数时，还需要设置MemoryLimit参数，且需要小于等于MemoryLimit的参数值。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"NasId","in":"query","schema":{"description":"挂载的NAS的ID，必须与集群在同一个地域。它必须有可用的挂载点创建额度，或者它的挂载点已经在VPC内的交换机上。如果不填，且存在mountDescs字段，则默认将自动购买一个NAS并挂载到VPC内的交换机上。","type":"string","required":false,"example":"dfs23****"}},{"name":"MountDescs","in":"query","schema":{"description":"挂载配置描述，为一个序列化的JSON。例如：`\\[{\"nasPath\": \"/k8s\",\"mountPath\": \"/mnt\"},{\"nasPath\": \"/files\",\"mountPath\": \"/app/files\"}\\]`。其中，nasPath是指文件储存路径；mountPath是指挂载到容器内的路径。","type":"string","required":false,"example":"[{\"nasPath\": \"/k8s\",\"mountPath\": \"/mnt\"},{\"nasPath\": \"/files\",\"mountPath\": \"/app/files\"}]"}},{"name":"StorageType","in":"query","schema":{"description":"NAS存储类型，包括：\n* 通用型NAS：Capacity（容量型）、Performance（性能型）\n* 极速型NAS：standard（标准型）、advance（高级型）\n\n目前只支持Performance类型。","type":"string","required":false,"example":"Performance"}},{"name":"LocalVolume","in":"query","schema":{"description":"宿主机文件挂载到容器内的配置。例如：`\\[{\"type\":\"\",\"nodePath\":\"/localfiles\",\"mountPath\":\"/app/files\"},{\"type\":\"Directory\",\"nodePath\":\"/mnt\",\"mountPath\":\"/app/storage\"}\\]`。其中，nodePath为宿主机路径；mountPath为容器内的路径；type为挂载类型。","type":"string","required":false,"example":"[{\"type\":\"\",\"nodePath\":\"/localfiles\",\"mountPath\":\"/app/files\"},{\"type\":\"Directory\",\"nodePath\":\"/mnt\",\"mountPath\":\"/app/storage\"}]"}},{"name":"PackageUrl","in":"query","schema":{"description":"部署包地址。通过FatJar或WAR包部署的应用需要配置部署包地址。\n\n> EDAS POP API的Java或者Python SDK需要2.44.0或以上版本。","type":"string","required":false,"example":"https://e***.oss-cn-beijing.aliyuncs.com/s***-1.0-SNAPSHOT-spring-boot.jar"}},{"name":"PackageVersion","in":"query","schema":{"description":"部署包的版本号，WAR和FatJar类型必填。请自定义它的含义。\n\n> EDAS POP API的Java或者Python SDK需要2.44.0或以上版本。","type":"string","required":false,"example":"20200720"}},{"name":"JDK","in":"query","schema":{"description":"部署的包依赖的JDK版本。可选的参数值为Open JDK 7、Open JDK 8或Custom OpenJDK。镜像部署方式不支持此参数。当使用Custom OpenJDK时，还需配置UserBaseImageUrl字段。","type":"string","required":false,"example":"Open JDK 8"}},{"name":"WebContainer","in":"query","schema":{"description":"部署包依赖的Tomcat版本。适用于通过WAR包部署的Spring Cloud和Dubbo应用，镜像不支持此参数。","type":"string","required":false,"example":"apache-tomcat-7.0.91"}},{"name":"EdasContainerVersion","in":"query","schema":{"description":"部署包依赖的EDAS Container版本。适用于通过WAR包部署的HSF应用，镜像不支持此参数。","type":"string","required":false,"example":"3.5.9"}},{"name":"UriEncoding","in":"query","schema":{"description":"URI编码方式，支持ISO-8859-1、GBK、GB2312和UTF-8。\n\n> 应用配置不设置该参数，使用Tomcat默认值。","type":"string","required":false,"example":"GBK"}},{"name":"UseBodyEncoding","in":"query","schema":{"description":"useBodyEncodingForURI是否启用。\n\n> 应用配置不设置该参数，使用默认值false。","type":"boolean","required":false,"example":"false"}},{"name":"UpdateStrategy","in":"query","schema":{"description":"分批发布策略\n\n- 例1：灰度1台+后续分2批+自动分批+分批间隔1分钟。\n`{\"type\":\"GrayBatchUpdate\",\"batchUpdate\":{\"batch\":2,\"releaseType\":\"auto\",\"batchWaitTime\":1},\"grayUpdate\":{\"gray\":1}}`\n\n- 例2：灰度1台+后续分2批+手动分批。\n`{\"type\":\"GrayBatchUpdate\",\"batchUpdate\":{\"batch\":2,\"releaseType\":\"manual\"},\"grayUpdate\":{\"gray\":1}}`\n\n- 例3：分2批+自动分批+分批间隔0分钟。\n`{\"type\":\"BatchUpdate\",\"batchUpdate\":{\"batch\":2,\"releaseType\":\"auto\",\"batchWaitTime\":0}}`","type":"string","required":false,"example":"{\"type\":\"GrayBatchUpdate\",\"batchUpdate\":{\"batch\":2,\"releaseType\":\"auto\",\"batchWaitTime\":1},\"grayUpdate\":{\"gray\":1}}"}},{"name":"McpuRequest","in":"query","schema":{"description":"CPU最小资源需求，单位：核数。设置为0表示不限制。\n\n> 设置该参数时，还需要设置CpuLimit参数，且需要小于等于CpuLimit的参数值。","type":"integer","format":"int32","required":false,"example":"4"}},{"name":"McpuLimit","in":"query","schema":{"description":"CPU能使用的最大值，单位：核数。设置为0表示不做限制。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"VolumesStr","in":"query","schema":{"description":"数据卷。","type":"string","required":false,"example":"test"}},{"name":"PackageVersionId","in":"query","schema":{"description":"部署包版本ID。","type":"string","required":false,"example":"2bcc********"}},{"name":"ChangeOrderDesc","in":"query","schema":{"description":"变更记录描述。","type":"string","required":false,"example":"升级"}},{"name":"RuntimeClassName","in":"query","schema":{"description":"容器运行时类型：\n\n* runc：普通容器运行时。\n* runv：安全沙箱容器。\n\n该参数仅适用于使用安全沙箱容器的集群。","type":"string","required":false,"example":"runc"}},{"name":"DeployAcrossZones","in":"query","schema":{"description":"是否将应用实例分布到多可用区。true为是，其他值为否。","type":"string","required":false,"example":"true"}},{"name":"BatchTimeout","in":"query","schema":{"description":"单批发布超时时间，单位：秒。","type":"integer","format":"int32","required":false,"example":"60"}},{"name":"EnableAhas","in":"query","schema":{"description":"是否接入AHAS。","type":"boolean","required":false,"example":"true"}},{"name":"WebContainerConfig","in":"query","schema":{"description":"Tomcat容器配置，设置为`\"\"`或`\"{}\"`表示删除配置：\n- useDefaultConfig：是否使用自定义配置，若为true，则表示不使用自定义配置，若为false，则表示使用自定义配置。若不使用自定义配置，则下面的参数配置将不会生效。\n- contextInputType：选择应用的访问路径。\n    - war：无需填写自定义路径，应用的访问路径是WAR包名称。\n    - root：无需填写自定义路径，应用的访问路径是/。\n    - custom：需要在下面的自定义路径中填写自定义的路径。\n- contextPath：自定义路径，当contextInputType类型为custom时，才需要配置此参数。\n- httpPort：端口范围为1024~65535，小于1024的端口需要Root权限才能操作。因为容器配置的是Admin权限，所以请填写大于1024的端口。如果不配置，则默认为8080。\n- maxThreads：配置连接池的连接数大小，默认大小是400。\n  \n  > 此项配置对应用性能有很大影响，请由专业人士配置。\n\n- uriEncoding：Tomcat的编码格式，包括UTF-8、ISO-8859-1、GBK和GB2312。如果不设置则默认为ISO-8859-1。\n- useBodyEncoding：是否使用BodyEncoding for URL。\n- useAdvancedServerXml：是否使用高级配置自定义设置`server.xml`文件，当上述参数类型和具体参数无法满足您的需求时，可以选中使用高级设置，直接编辑Tomcat的`Server.xml`文件。\n- serverXml：高级配置中自定义设置的`server.xml`文本文件内容，当useAdvancedServerXml为true时生效。\n","type":"string","required":false,"example":"{\"useDefaultConfig\":false,\"contextInputType\":\"custom\",\"contextPath\":\"hello\",\"httpPort\":8088,\"maxThreads\":400,\"uriEncoding\":\"UTF-8\",\"useBodyEncoding\":true,\"useAdvancedServerXml\":false}"}},{"name":"JavaStartUpConfig","in":"query","schema":{"description":"Java启动参数用于在Java应用启动时配置启动参数。可配置：内存配置、应用、GC策略、工具、服务注册和发现配置和自定义等配置，正确配置这些参数有助于降低垃圾回收（GC）开销，从而缩短服务器响应时间并提高吞吐量。参数格式为JSON字符串：original为配置值，startup为启动参数，系统将自动拼接所有的startup作为应用程序的Java启动参数。设置为`\"\"`或`\"{}\"`表示删除配置。","type":"string","required":false,"example":"{\"InitialHeapSize\":{\"original\":512,\"startup\":\"-Xms512m\"},\"MaxHeapSize\":{\"original\":1024,\"startup\":\"-Xmx1024m\"}}"}},{"name":"SlsConfigs","in":"query","schema":{"description":"Logstore配置，设置为`\"\"`或`\"{}\"`表示删除配置：\n\n- Configs：\n\n    - type：采集类型，文件类型为file，标准输出类型为stdout。\n\n    - Logstore：logstore名称。请确保Logstore名称在同一个集群中不重复，其命名应符合规则：\n        - Logstore名称仅支持小写字母、数字、短划线（-）和下划线（_）。\n        - 必须以小写字母和数字开头和结尾。\n        - 名称长度为3~63个字符。若为空，则由系统自动生成。\n    - LogDir：若为标准输出类型，则采集路径为stdout.log，若为文件类型，则为采集的文件路径，支持通配，采集路径应符合正则：`^/(.+)/(.*)^/$`。","type":"string","required":false,"example":"[{\"logstore\":\"thisisanotherfilelog\",\"type\":\"file\",\"logDir\":\"/var/log/*\"},{\"logstore\":\"\",\"type\":\"stdout\",\"logDir\":\"stdout.log\"},{\"logstore\":\"thisisafilelog\",\"type\":\"file\",\"logDir\":\"/tmp/log/*\"}]"}},{"name":"DeployAcrossNodes","in":"query","schema":{"description":"是否将应用实例分布到多个节点。true为是，其他值为否。","type":"string","required":false,"example":"true"}},{"name":"TrafficControlStrategy","in":"query","schema":{"description":"灰度发布流量控制策略。","type":"string","required":false,"example":"{\"http\":{\"rules\":[{\"conditionType\":\"percent\",\"percent\":10}]}}"}},{"name":"PvcMountDescs","in":"query","schema":{"description":"配置K8s PVC（PersistentVolumeClaim）挂载，支持将K8s PVC卷挂载到指定的容器目录。PvcMountDescs的配置参数说明如下：\n\n- pvcName：PVC卷名称，PVC卷必须已经存在，且处于Bound状态。\n-  mountPaths：挂载目录列表，支持配置多个挂载目录。每个挂载目录支持以下两个配置参数：\n    * mountPath：挂载路径，以正斜线（/）开头的容器绝对路径。\n    * readOnly：挂载模式，true为只读，false为可读写，默认为false。","type":"string","required":false,"example":"[{\"pvcName\":\"nas-pvc-1\",\"mountPaths\":[{\"mountPath\":\"/usr/share/nginx/data\"},{\"mountPath\":\"/usr/share/nginx/html\",\"readOnly\":true}]}]"}},{"name":"ConfigMountDescs","in":"query","schema":{"description":"配置K8s ConfigMap和Secret挂载，支持将ConfigMap和Secret挂载到指定的容器目录。ConfigMountDescs的配置参数说明如下：\n- name：ConfigMap或Secret的名称。\n- type：配置类型，支持ConfigMap和Secret两种类型。\n- mountPath：挂载路径，以正斜线（/）开头的容器绝对路径。","type":"string","required":false,"example":"[\n      {\n            \"name\": \"nginx-config\",\n            \"type\": \"ConfigMap\",\n            \"mountPath\": \"/etc/nginx\"\n      },\n      {\n            \"name\": \"tls-secret\",\n            \"type\": \"Secret\",\n            \"mountPath\": \"/etc/ssh\"\n      }\n]"}},{"name":"EnvFroms","in":"query","schema":{"description":"配置K8s EnvFrom类型的环境变量，将指定的ConfigMap或Secret挂载到指定目录，每个key对应目录下的一个文件，文件的内容为该key对应的value。\n\nEnvFroms的配置参数说明如下。\n - configMapRef：ConfigMap引用，该字段包括以下参数：\n    - name：ConfigMap名称。\n- secretRef：Secret引用，该字段包括以下参数：\n    - name：Secret名称。\n","type":"string","required":false,"example":"[{\"name\":\"appname\",\"valueFrom\":{\"configMapKeyRef\":{\"name\":\"appconf\",\"key\":\"name\"}}}]"}},{"name":"EmptyDirs","in":"query","schema":{"description":"配置K8s emptyDir挂载，支持将emptyDir卷挂载到指定的容器目录。EmptyDirs的配置参数说明如下：\n\n- mountPath：容器挂载路径，必填。\n- readOnly：是否只读，可选，true为只读，false为读写，默认为false。\n- subPathExpr：子目录表达式，可选。","type":"string","required":false,"example":"[{\"mountPath\":\"/app-log\",\"subPathExpr\":\"$(POD_IP)\"},{\"readOnly\":true,\"mountPath\":\"/etc/nginx\"}]"}},{"name":"CustomAffinity","in":"query","schema":{"description":"Pod亲和性配置，当且仅当DeployAcrossNodes与DeployAcrossZones都为false时生效。","type":"string","required":false,"example":"{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"beta.kubernetes.io/arch\",\"operator\":\"NotIn\",\"values\":[\"arm64\",\"arm32\"]}]}]},\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"weight\":5,\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}}]},\"podAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":[{\"namespaces\":[\"default\"],\"topologyKey\":\"kubernetes.io/hostname\",\"labelSelector\":{\"matchExpressions\":[{\"key\":\"edas.oam.acname\",\"operator\":\"NotIn\",\"values\":[\"edas-test-app\"]}]}}]},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"namespaces\":[\"default\"],\"topologyKey\":\"failure-domain.beta.kubernetes.io/zone\",\"labelSelector\":{\"matchExpressions\":[{\"key\":\"edas.oam.acname\",\"operator\":\"In\",\"values\":[\"edas-test-app-2\"]}]}},\"weight\":15}]}}"}},{"name":"CustomTolerations","in":"query","schema":{"description":"Pod调度容忍配置，当且仅当DeployAcrossNodes与DeployAcrossZones都为false时生效。","type":"string","required":false,"example":"[{\"key\":\"edas-taint-key2\",\"operator\":\"Exists\",\"effect\":\"NoExecute\",\"tolerationSeconds\":50},{\"key\":\"edas-taint-key\",\"operator\":\"Equal\",\"value\":\"edas-taint-value\",\"effect\":\"PreferNoSchedule\"}]"}},{"name":"BuildPackId","in":"query","schema":{"description":"EDAS-Container构建包号：\n\n- 如果部署时不需要更改EDAS-Container版本，则该参数可不设置。\n- 如果需要在本次部署时，更新目标应用的EDAS-Container版本，则需要设置。\n\n有以下两种获取方式：\n\n- 可通过查询容器版本列表接口ListBuildPack获取，请参见[ListBuildPack](~~423222~~)。\n- 在[容器版本说明](~~92614~~)表格中的**构建包序号**列获取。例如`59`表示`EDAS-Container 3.5.8 版本`。","type":"string","required":false,"example":"59"}},{"name":"Annotations","in":"query","schema":{"description":"应用Pod注解。","type":"string","required":false,"example":"{\"annotation-name-1\":\"annotation-value-1\",\"annotation-name-2\":\"annotation-value-2\"}"}},{"name":"Labels","in":"query","schema":{"description":"应用Pod标签。","type":"string","required":false,"example":"{\"label-name-1\":\"label-value-1\",\"label-name-2\":\"label-value-2\"}"}},{"name":"EnableEmptyPushReject","in":"query","schema":{"title":"是否开启推空保护","description":"是否开启推空保护：\n\n- true：开启推空保护。\n- false：不开启推空保护。\n","type":"boolean","required":false,"example":"false"}},{"name":"EnableLosslessRule","in":"query","schema":{"title":"是否启用无损上线规则","description":"是否启用无损上线规则：\n\n- true：启用无损上线规则。\n- false：不启用无损上线规则。\n","type":"boolean","required":false,"example":"true"}},{"name":"LosslessRuleWarmupTime","in":"query","schema":{"title":"无损上线服务预热时长","description":"服务预热时长，单位：秒。取值范围为0~86400秒。","type":"integer","format":"int32","required":false,"example":"120"}},{"name":"LosslessRuleDelayTime","in":"query","schema":{"title":"无损上线延迟注册时长","description":"服务延迟注册时长，单位：秒。取值范围为0~86400秒。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"LosslessRuleFuncType","in":"query","schema":{"title":"无损上线服务预热曲线","description":"服务预热曲线。取值范围0~20。默认为2（适合于一般预热场景），表示在预热周期内服务提供者的流量接收曲线形状呈2次曲线形状。","type":"integer","format":"int32","required":false,"example":"2"}},{"name":"LosslessRuleAligned","in":"query","schema":{"title":"是否启用无损滚动发布模式配置通过就绪检查前完成服务注册","description":"是否启用无损滚动发布模式配置通过就绪检查前完成服务注册：\n\n- true：打开开关会为应用无侵入提供55199端口和/health路径的健康检查方式，当完成服务注册后，该接口返回200，否则返回500。\n> 若同时配置`LosslessRuleRelated`为true，则该接口检查是否完成服务预热。\n\n- false：不为应用提供检查是否完成服务注册的接口。","type":"boolean","required":false,"example":"false"}},{"name":"LosslessRuleRelated","in":"query","schema":{"title":"是否启用无损滚动发布模式配置通过就绪检查前完成服务预热","description":"是否启用无损滚动发布模式配置通过就绪检查前完成服务预热：\n\n- true：打开开关会为应用无侵入提供55199端口和/health路径的健康检查方式，当完成服务预热后，该接口返回200，否则返回500。\n- false：不为应用提供检查是否完成服务预热的接口。","type":"boolean","required":false,"example":"false"}},{"name":"LimitEphemeralStorage","in":"query","schema":{"description":"临时存储资源需求上限，单位：GB。设置0表示不限制。\n","type":"integer","format":"int32","required":false,"example":"4"}},{"name":"RequestsEphemeralStorage","in":"query","schema":{"description":"临时存储最小资源需求，单位：GB。设置0表示不限制。","type":"integer","format":"int32","required":false,"example":"2"}},{"name":"Sidecars","in":"query","schema":{"description":"为应用Pod设置Sidecar容器。支持设置容器配置的格式YAML，其值为Sidecar容器YAML配置base64编码后的值。","type":"string","required":false,"example":"[\n      {\n            \"yamlEncoded\": \"Y29tbWFuZDoKICAtIHRhaWwKICAtICctZicKICAtIC9kZXYvbnVsbAppbWFnZTogJ2J1c3lib3g6bGF0ZXN0JwpuYW1lOiBidXN5Ym94Cg==\"\n      }\n]"}},{"name":"InitContainers","in":"query","schema":{"description":"为应用Pod设置初始化容器。支持设置容器配置的格式YAML，其值为Init容器YAML配置base64编码后的值。","type":"string","required":false,"example":"[\n      {\n            \"yamlEncoded\": \"Y29tbWFuZDoKICAtIHNsZWVwCiAgLSAnNjAnCmltYWdlOiAnYnVzeWJveDpsYXRlc3QnCm5hbWU6IGluaXQtYnVzeWJveAo=\"\n      }\n]"}},{"name":"UserBaseImageUrl","in":"query","schema":{"description":"使用自定义JDK运行时，需要配置基础镜像地址。该地址需要可公开访问，EDAS服务端会拉取该镜像，用于构建应用镜像。","type":"string","required":false,"example":"openjdk:8u302"}},{"name":"CanaryRuleId","in":"query","schema":{"description":"金丝雀规则策略ID。","type":"string","required":false,"example":"a8daf22e-****-968c7ff2ea34"}},{"name":"TerminateGracePeriod","in":"query","schema":{"description":"设置应用优雅停止超时时间。单位：秒。","type":"integer","format":"int32","required":false,"example":"120"}},{"name":"ImagePlatforms","in":"query","schema":{"title":"镜像目标平台架构，当使用war、jar部署时有效，输入样例：\n1.指定x86 64架构：linux/amd64\n2.指定arm 64架构：linux/arm64\n3.指定构建双架构镜像：linux/amd64,linux/arm64\n4.不输入：默认架构","description":"镜像目标平台架构，当使用war、jar部署时有效，输入样例：\n\n- 指定x86 64架构：linux/amd64\n\n- 指定arm 64架构：linux/arm64\n\n- 指定构建双架构镜像：linux/amd64,linux/arm64\n\n- 不输入：默认架构","type":"string","required":false}},{"name":"Startup","in":"query","schema":{"description":"启动探针可以用于对慢启动容器进行存活性检测，避免它们在启动运行之前就被杀掉，格式如：{\"failureThreshold\": 3,\"initialDelaySeconds\": 5,\"successThreshold\": 1,\"timeoutSeconds\": 1,\"httpGet\": {\"path\": \"/consumer\",\"port\": 8080,\"scheme\": \"HTTP\",\"httpHeaders\": [{\"name\": \"test\",\"value\": \"testvalue\"}]}}。\n\n如果设置为\"\"或者{}表示删除，不设置表示忽略。","type":"string","required":false,"example":"{\"failureThreshold\": 3,\"initialDelaySeconds\": 5,\"successThreshold\": 1,\"timeoutSeconds\": 1,\"tcpSocket\":{\"host\":\"\", \"port\":8080}}"}},{"name":"CustomAgentVersion","in":"query","schema":{"description":"设置应用挂载的自定义ArmsAgent探针版本。\n\n> 该功能为白名单开放。如有需求，请提交工单申请加入白名单。","type":"string","required":false,"example":"3.1.4"}}],"responses":{"200":{"schema":{"description":"接口响应。","type":"object","properties":{"ChangeOrderId":{"description":"变更流程ID，可调用GetChangeOrderInfo接口获取，详情请参见[GetChangeOrderInfo](~~62072~~)。","type":"string","example":"cd65b247-****-475b-ad4b-7039040d625c"},"Code":{"description":"接口状态或POP错误码。","type":"integer","format":"int32","example":"200"},"Message":{"description":"附加信息 。","type":"string","example":"success"},"RequestId":{"description":"请求ID。","type":"string","example":"a5281053-08e4-47a5-b2ab-5c0323de*****"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"ChangeOrderId\\\": \\\"cd65b247-****-475b-ad4b-7039040d625c\\\",\\n  \\\"Code\\\": 200,\\n  \\\"Message\\\": \\\"success\\\",\\n  \\\"RequestId\\\": \\\"a5281053-08e4-47a5-b2ab-5c0323de*****\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DeployK8sApplicationResponse>\\n    <ChangeOrderId>cd65b247-****-475b-ad4b-7039040d625c</ChangeOrderId>\\n    <Code>200</Code>\\n    <Message>success</Message>\\n    <RequestId>a5281053-08e4-47a5-b2ab-5c0323de*****</RequestId>\\n</DeployK8sApplicationResponse>\",\"errorExample\":\"\"}]","title":"部署K8s应用","summary":"在容器服务K8s集群或Serverless K8s集群中部署应用。","requestParamsDescription":" ","responseParamsDescription":" ","extraInfo":" "}