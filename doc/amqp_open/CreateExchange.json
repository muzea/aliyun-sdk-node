{"methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create"},"parameters":[{"name":"InstanceId","in":"formData","schema":{"description":"待创建Exchange所属的云消息队列 RabbitMQ 版实例ID。","type":"string","required":true,"docRequired":true,"example":"amqp-cn-v0h1kb9nu***"}},{"name":"VirtualHost","in":"formData","schema":{"description":"待创建Exchange所属的Vhost名称。","type":"string","required":true,"docRequired":true,"example":"test"}},{"name":"ExchangeName","in":"formData","schema":{"description":"待创建的Exchange名称。说明：\n\n- Exchange名称只能包含字母、数字、短划线（-）、下划线（_）、半角句号（.）、井号（#）、正斜线（/）、at 符号（@），长度限制1~255 字符。\n\n- Exchange创建后，名称不支持修改，只能删除后重建。","type":"string","required":true,"docRequired":true,"example":"DemoExchange"}},{"name":"ExchangeType","in":"formData","schema":{"description":"Exchange类型。取值：\n\n- **DIRECT**：该类型路由规则会将消息路由到Binding Key与Routing Key完全匹配的Queue中。\n\n- **TOPIC**：该类型与DIRECT类型相似，使用Routing Key模式匹配和字符串比较的方式将消息路由至绑定的Queue。\n\n- **FANOUT**：该类型路由规则非常简单，会把所有发送到该Exchange的消息路由到所有与它绑定的Queue中，相当于广播功能。\n\n- **HEADERS**：该类型与DIRECT类型相似。Headers Exchange使用Headers属性代替Routing Key进行路由匹配，在绑定Headers Exchange和Queue时，设置绑定属性的键值对；在向Headers Exchange发送消息时，设置消息的Headers属性键值对，使用消息Headers属性键值对和绑定属性键值对比较的方式将消息路由至绑定的Queue。\n\n- **X-CONSISTENT-HASH**：x-consistent-hash Exchange支持将Routing Key或Header值进行Hash计算，使用一致性哈希算法将消息路由到不同的Queue上。","type":"string","required":true,"docRequired":true,"example":"DIRECT","enum":["DIRECT","TOPIC","FANOUT","HEADERS","X_JMS_TOPIC","X_DELAYED_MESSAGE","X_CONSISTENT_HASH"]}},{"name":"AutoDeleteState","in":"formData","schema":{"description":"是否自动删除。取值：\n\n- **true**：是。如果绑定到该Exchange的最后一个Queue解除绑定，该Exchange会自动删除。\n\n- **false**：否。如果绑定到该Exchange的最后一个Queue解除绑定，该Exchange不会自动删除。","type":"boolean","required":true,"docRequired":true,"example":"false"}},{"name":"Internal","in":"formData","schema":{"description":"是否为内部Exchange。取值：\n\n- **false**：否\n\n- **true**：是","type":"boolean","required":true,"docRequired":true,"example":"false"}},{"name":"AlternateExchange","in":"formData","schema":{"description":"备份Exchange。配置备份Exchange用于接收Exchange路由失败的消息。\n\n","type":"string","required":false,"example":"DemoAE"}}],"responses":{"200":{"schema":{"type":"object","properties":{"RequestId":{"description":"请求ID。","type":"string","example":"021788F6-E50C-4BD6-9F80-66B0A19A6***"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"021788F6-E50C-4BD6-9F80-66B0A19A6***\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<CreateExchangeResponse>\\r\\n    <RequestId>021788F6-E50C-4BD6-9F80-66B0A19A6***</RequestId>\\r\\n</CreateExchangeResponse>\",\"errorExample\":\"\"}]","title":"创建Exchange","summary":"Producer将消息发送到Exchange，由Exchange将消息路由到一个或多个Queue中（或者丢弃）。Exchange根据Routing Key和Binding Key将消息路由到Queue。","requestParamsDescription":" ","responseParamsDescription":" ","extraInfo":" "}