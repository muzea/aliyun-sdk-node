{"summary":"通知OSS初始化一个Multipart Upload事件。","path":"/{key}?uploads","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/xml"],"produces":["application/xml"],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create"},"parameters":[{"name":"bucket","in":"host","schema":{"description":"初始化一个Multipart Upload事件的Bucket名称。\n\n","type":"string","required":true,"example":"examplebucket"}},{"name":"key","in":"path","schema":{"description":"初始化一个Multipart Upload事件的Object名称。\n\n","type":"string","required":true,"example":"multipart.data"}},{"name":"encoding-type","in":"query","schema":{"description":"指定对返回的Key进行编码，目前支持URL编码。Key使用UTF-8字符，但XML 1.0标准不支持解析一些控制字符，例如ASCII值从0到10的字符。对于Key中包含XML\n                              1.0标准不支持的控制字符，可以通过指定encoding-type对返回的Key进行编码。\n默认值：无\n可选值：**url**","required":false,"$ref":"#/components/schemas/EncodeType"}},{"name":"x-oss-forbid-overwrite","in":"header","schema":{"description":"指定InitiateMultipartUpload操作时是否覆盖同名Object。当目标Bucket处于已开启或已暂停的版本控制状态时，**x-oss-forbid-overwrite**请求Header设置无效，即允许覆盖同名Object。\n  - 不指定**x-oss-forbid-overwrite**或者指定**x-oss-forbid-overwrite**为**false**时，表示允许覆盖同名Object。\n  - 指定**x-oss-forbid-overwrite**为**true**时，表示禁止覆盖同名Object。\n\n设置**x-oss-forbid-overwrite**请求Header会导致QPS处理性能下降，如果您有大量的操作需要使用**x-oss-forbid-overwrite**请求Header（QPS>1000），请联系技术支持，避免影响您的业务。","type":"string","required":false,"example":"true"}},{"name":"x-oss-storage-class","in":"header","schema":{"description":"指定Object的存储类型。\n对于任意存储类型Bucket，如果上传Object时指定该值，则此次上传的Object将存储为指定的类型。例如在IA类型的Bucket中上传Object时，如果指定**x-oss-storage-class**为Standard，则该Object直接存储为Standard类型。\n取值：\n\n- Standard：标准存储\n- IA：低频访问\n- Archive：归档存储\n- ColdArchive：冷归档存储\n\n关于存储类型的更多信息，请参见**[存储类型介绍](~~51374~~)**。","required":false,"$ref":"#/components/schemas/StorageClass"}},{"name":"x-oss-tagging","in":"header","schema":{"description":"指定Object的标签，可同时设置多个标签，例如： TagA=A&TagB=B\n> Key和Value需要先进行URL编码，如果某项没有`=`，则看作Value为空字符串。","type":"string","required":false,"example":"a:1"}},{"name":"x-oss-server-side-encryption","in":"header","schema":{"description":"指定上传该Object的每个part时使用的服务器端加密方式。\n取值：**AES256**、**KMS**或**SM4**\n> 使用KMS加密算法前，您需要先开通密钥管理服务KMS。\n\n\n指定此参数后，在响应头中会返回此参数，OSS会对上传的每个part进行加密编码存储。当下载该Object时，响应头中会包含x-oss-server-side-encryption，且该值会被设置成此Object的加密算法。","type":"string","required":false,"example":"AES256"}},{"name":"x-oss-server-side-data-encryption","in":"header","schema":{"description":"指定Object的加密算法。若未指定此选项，表明Object使用AES256加密算法。此选项仅当**x-oss-server-side-encryption**为KMS时有效。\n取值：SM4","type":"string","required":false,"example":"SM4"}},{"name":"x-oss-server-side-encryption-key-id","in":"header","schema":{"description":"表示KMS托管的用户主密钥。\n该参数在**x-oss-server-side-encryption**值为KMS时有效。","type":"string","required":false,"example":"9468da86-3509-4f8d-a61e-6eab1eac****"}},{"name":"Cache-Control","in":"header","schema":{"description":"指定该Object被下载时的网页的缓存行为。更多信息，请参见**[RFC 2616](https://www.ietf.org/rfc/rfc2616.txt)**。\n默认值：无","type":"string","required":false,"example":"private"}},{"name":"Content-Disposition","in":"header","schema":{"description":"指定该Object被下载时的名称。更多信息，请参见**[RFC 2616](https://www.ietf.org/rfc/rfc2616.txt)**。\n默认值：无","type":"string","required":false,"example":"attachment;filename=oss_download.jpg "}},{"name":"Content-Encoding","in":"header","schema":{"description":"指定该Object被下载时的内容编码格式。更多信息，请参见**[RFC 2616](https://www.ietf.org/rfc/rfc2616.txt)**。\n默认值：无","type":"string","required":false,"example":"utf-8"}},{"name":"Expires","in":"header","schema":{"description":"过期时间，单位为毫秒。更多信息，请参见**[RFC 2616](https://www.ietf.org/rfc/rfc2616.txt)**。\n默认值：无","type":"string","required":false,"example":"Fri, 28 Feb 2012 05:38:42 GMT "}}],"responses":{"200":{"schema":{"description":"保存Initiate Multipart Upload请求结果的响应体。","type":"object","properties":{"InitiateMultipartUploadResult":{"description":"保存Initiate Multipart Upload请求结果的容器。","type":"object","properties":{"Bucket":{"description":"初始化一个Multipart Upload事件的Bucket名称。","type":"string","example":"example-bucket"},"Key":{"description":"初始化一个Multipart Upload事件的Object名称。","type":"string","example":"test.txt"},"UploadId":{"description":"唯一标识此次Multipart Upload事件的ID，用于后续调用UploadPart和CompleteMultipartUpload接口。","type":"string","example":"0004B9894A22E5B1888A1E29F823****"},"EncodingType":{"description":"指明返回结果中编码使用的类型。如果请求的参数中指定了encoding-type，那返回的结果会对Key进行编码。","type":"string","example":"url"}}}}}},"5XX":{}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"InitiateMultipartUploadResult\\\": {\\n    \\\"Bucket\\\": \\\"example-bucket\\\",\\n    \\\"Key\\\": \\\"test.txt\\\",\\n    \\\"UploadId\\\": \\\"0004B9894A22E5B1888A1E29F823****\\\",\\n    \\\"EncodingType\\\": \\\"url\\\"\\n  }\\n}\",\"type\":\"json\"}]","title":"通知OSS初始化分片上传事件","description":"- 调用接口会返回一个OSS服务器创建的全局唯一的Upload ID，用于标识本次Multipart Upload事件。您可以根据这个ID来发起相关的操作，例如中止Multipart Upload、查询Multipart Upload等。\n\n- 初始化MultipartUpload请求，并不影响已存在的同名Object。\n\n- 该操作计算认证签名时，需要添加`?uploads`到`CanonicalizedResource`中。"}