{"summary":"设置指定存储空间（Bucket）的跨域资源共享CORS（Cross-Origin Resource Sharing）规则。","path":"/?cors","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/xml"],"produces":["application/xml"],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update"},"parameters":[{"name":"bucket","in":"host","schema":{"description":"Bucket名称。","type":"string","required":true,"example":"examplebucket"}},{"name":"body","in":"body","style":"xml","schema":{"description":"设置跨域资源共享规则的请求体。","type":"object","properties":{"CORSConfiguration":{"description":"保存Bucket的CORS规则容器。","required":false,"$ref":"#/components/schemas/CORSConfiguration"}},"required":false}}],"responses":{"200":{},"5XX":{}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"设置存储空间的跨域资源共享规则","description":"\n- 默认不开启CORS\n<br>Bucket默认不开启CORS功能，所有跨域请求的Origin都不被允许。\n\n- 覆盖语义\n <br>PutBucketCors为覆盖语义，即新配置的CORS规则将覆盖已有的CORS规则。\n\n- 应用程序中使用CORS\n<br>在应用程序中使用CORS功能时，需通过PutBucketCors接口手动上传CORS规则来开启CORS功能。\n<br>例如从`example.com`通过浏览器的`XMLHttpRequest`功能来访问OSS，需要通过本接口手动上传CORS规则，且CORS规则需由XML文档进行描述。\n\n- CORS规则匹配\n<br>当OSS收到一个跨域请求或OPTIONS请求，会先读取Bucket对应的CORS规则，然后进行相应的权限检查。OSS会依次检查每一条规则，使用第一条匹配的规则来允许请求并返回对应的Header。如果所有规则都匹配失败，则不附加任何CORS相关的Header。\n<br>CORS规则匹配成功必须满足以下三个条件：\n    - 请求的Origin必须匹配一个`AllowedOrigin`项。\n\n    - 请求的方法（例如GET、PUT等）或者OPTIONS请求的`Access-Control-Request-Method`头对应的方法必须匹配一个`AllowedMethod`项。\n\n    - OPTIONS请求的`Access-Control-Request-Headers`头包含的每个header都必须匹配一个`AllowedHeader`项。","extraInfo":"### SDK\n\n- [Java](~~32018~~)\n- [Python](~~32036~~)\n- [PHP](~~32110~~)\n- [Go](~~32156~~)\n- [C](~~89705~~)\n- [C++](~~103198~~)\n- [.NET](~~32095~~)\n- [Node.js](~~142900~~)\n- [Ruby](~~32128~~)\n\n### 错误码\n|错误码|HTTP状态码|描述|\n|--|--|--|\n|InvalidDigest|400|上传了Content-MD5请求头后，OSS会计算消息体的Content-MD5并检查一致性，如果不一致则返回此错误码。|"}