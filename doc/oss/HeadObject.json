{"summary":"获取某个文件（Object）的元信息。","path":"/{key}","methods":["head"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/xml"],"produces":["application/xml"],"operationType":"read","systemTags":{"operationType":"get"},"parameters":[{"name":"bucket","in":"host","schema":{"description":"Bucket名称。","type":"string","required":true,"example":"examplebucket"}},{"name":"key","in":"path","schema":{"description":"Object的完整路径。","type":"string","required":true,"example":"exampledir/exampleobject/txt"}},{"name":"versionId","in":"query","schema":{"description":"请求Object的版本号。","type":"string","required":false,"example":"CAEQMxiBgMCZov2D0BYiIDY4MDllOTc2YmY5MjQxMzdiOGI3OTlhNTU0ODIx****"}},{"name":"If-Modified-Since","in":"header","schema":{"description":"如果传入参数中的时间早于实际修改时间，则返回200 OK和Object Meta；否则返回304 not modified。\n默认值：无","type":"string","required":false,"example":"Fri, 9 Apr 2021 14:47:53 GMT"}},{"name":"If-Unmodified-Since","in":"header","schema":{"description":"如果传入参数中的时间等于或者晚于文件实际修改时间，则返回200 OK和Object Meta；否则返回412 precondition failed。\n默认值：无","type":"string","required":false,"example":"Fri, 13 Oct 2021 14:47:53 GMT"}},{"name":"If-Match","in":"header","schema":{"description":"如果传入期望的ETag和Object的 ETag匹配，则返回200 OK和Object Meta；否则返回412 precondition failed。\n默认值：无","type":"string","required":false,"example":"fba9dede5f27731c9771645a3986****"}},{"name":"If-None-Match","in":"header","schema":{"description":"如果传入期望的ETag值和Object的ETag不匹配，则返回200 OK和Object Meta；否则返回304 Not Modified。\n默认值：无","type":"string","required":false,"example":"5B3C1A2E0563E1B002CC607C****"}}],"responses":{"200":{"headers":{"x-oss-server-side-encryption":{"schema":{"sdkPropertyName":"serverSideEncryption","title":"如果该Object为进行服务器端熵编码加密存储的，则在响应头头中会返回此参数，其值表明该Object的服务器端加密算法。","type":"string"}},"x-oss-server-side-encryption-key-id":{"schema":{"sdkPropertyName":"sseKeyId","title":"如果用户在创建Object时使用了服务端加密，且加密方法为KMS，则响应中会包含此Header，表示加密所使用的用户KMS key ID。","type":"string"}},"x-oss-storage-class":{"schema":{"sdkPropertyName":"storageClass","title":"表示Object的存储类型，分别为标准存储类型（Standard）、低频访问存储类型（IA）、归档存储类型（Archive）、冷归档存储类型（ColdArchive）以及深度冷归档存储类型（DeepColdArchive）。","type":"string"}},"x-oss-object-type":{"schema":{"sdkPropertyName":"objectType","title":"表示Object的类型。 通过PutObject上传的Object类型为Normal。 通过AppendObject上传的Object类型为Appendable。 通过MultipartUpload上传的Object类型为Multipart。","type":"string"}},"x-oss-next-append-position":{"schema":{"sdkPropertyName":"nextAppendPosition\t","title":"对于Appendable类型的Object会返回此Header，指明下一次请求应当提供的position。","type":"integer","format":"int64"}},"x-oss-hash-crc64ecma":{"schema":{"sdkPropertyName":"crc64ecma","title":"表示该Object的64位CRC值。该64位CRC根据ECMA-182标准计算得出。 对OSS支持CRC64校验前创建的Object，调用HeadObject接口时可能不会返回此响应头。","type":"string"}},"x-oss-expiration":{"schema":{"sdkPropertyName":"expiration","title":"如果为该Object设置了生命周期规则（Lifecycle），响应中将包含x-oss-expiration header。其中expiry-date的值表示该Object的过期日期，rule-id的值表示相匹配的规则ID。","type":"string"}},"x-oss-restore":{"schema":{"sdkPropertyName":"restore","title":"如果Bucket类型为Archive，且用户已经提交Restore请求，则响应头中会以x-oss-restore返回该Object的Restore状态，分如下几种情况： 如果没有提交Restore或者Restore已经超时，则不返回该字段。 如果已经提交Restore，且Restore没有完成，则返回的x-oss-restore值为ongoing-request=”true”。 如果已经提交Restore，且Restore已经完成，则返回的x-oss-restore值为ongoing-request=”false”, expiry-date=”Sun, 16 Apr 2017 08:12:33 GMT”，其中expiry-date是Restore完成后Object进入可读状态的过期时间。","type":"string"}},"x-oss-process-status":{"schema":{"sdkPropertyName":"processStatus","title":"当用户通过MNS消息服务创建OSS事件通知后，在进行请求OSS相关操作时如果有匹配的事件通知规则，则响应中会携带这个Header，值为经过Base64编码JSON格式的事件通知结果。","type":"string"}},"x-oss-request-charged":{"schema":{"sdkPropertyName":"requestCharged","title":"当Object所属的Bucket被设置为请求者付费模式，且请求者不是Bucket的拥有者时，响应中将携带此Header，值为requester。","type":"string"}},"Content-Md5":{"schema":{"title":"对于Normal类型的Object，根据RFC 1864标准对消息内容（不包括Header）计算Md5值获得128比特位数字，对该数字进行Base64编码作为一个消息的Content-Md5值。 Multipart和Appendable类型的文件不会返回这个Header。","type":"string"}},"Content-Length":{"schema":{"title":"RFC 2616中定义的HTTP请求内容长度。此处是Object内容的大小，单位字节。","type":"integer","format":"int64"}},"Last-Modified":{"schema":{"title":"Object最后一次修改的日期，格式为HTTP 1.1协议中规定的GMT时间。","type":"string"}},"Content-Type":{"schema":{"title":"RFC 2616中定义的HTTP请求内容类型。","type":"string"}},"ETag":{"schema":{"title":"ETag (entity tag) 在每个Object生成的时候被创建，用于标识一个Object的内容。对于Put Object请求创建的Object，ETag值是其内容的MD5值；对于其他方式创建的Object，ETag值是基于一定计算规则生成的唯一值，但不是其内容的MD5值。ETag值可以用于检查Object内容是否发生变化。","type":"string"}},"x-oss-meta-*":{"style":"json","schema":{"title":"以x-oss-meta-为前缀的参数作为用户自定义meta header。当用户在PutObject时设置了以x-oss-meta-为前缀的自定义meta，则响应中会包含这些自定义meta。","type":"object","additionalProperties":{"type":"string"},"parseType":"struct"}},"x‑oss‑tagging‑count":{"schema":{"title":"对象关联的标签个数。仅当用户有读取标签权限时返回。","type":"integer","format":"int64"}}}},"5XX":{}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"获取文件的元信息","description":"- 使用此接口不会返回文件内容。\n\n- HeadObject操作默认获取Object当前版本的元信息。如果Object的当前版本为删除标记，则返回404 Not Found。请求参数中指定versionId则返回指定版本Object的元信息。"}