{
  "name": "CreateLoadBalancerHTTPSListener",
  "protocol": "HTTP|HTTPS",
  "method": "POST|GET",
  "path": "/",
  "summary_cn": "调用CreateLoadBalancerHTTPSListener创建HTTPS监听。",
  "abc_id": 27593,
  "timeout": 10000,
  "reqFormat": {
    "RegionId": {
      "name": "RegionId",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "cn-hangzhou",
      "description_cn": "负载均衡实例的地域。\n\n您可以从[地域和可用区](~~40654~~)列表或通过调用[DescribeRegions](~~25609~~)接口查询地域ID。"
    },
    "Bandwidth": {
      "name": "Bandwidth",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": true,
      "docRequired": false,
      "example_cn": "-1",
      "description_cn": "监听的带宽峰值。\n\n取值：**-1 | 1-5120**。\n\n* **-1**：对于按流量计费的公网负载均衡实例，可以将带宽峰值设置为**-1**，即不限制带宽峰值。\n\t  \n* **1-5120**(Mbps)： 对于按带宽计费的公网负载均衡实例，可以设置每个监听的带宽峰值，但所有监听的带宽峰值之和不能超过实例的带宽峰值。详情参见[共享实例带宽](~~57846~~)。"
    },
    "ListenerPort": {
      "name": "ListenerPort",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": true,
      "docRequired": false,
      "example_cn": "80",
      "description_cn": "负载均衡实例前端使用的端口。\n\n取值：**1-65535**。"
    },
    "StickySession": {
      "name": "StickySession",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": true,
      "docRequired": false,
      "example_cn": "on",
      "description_cn": "是否开启会话保持。\n\n取值：**on | off**。"
    },
    "HealthCheck": {
      "name": "HealthCheck",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": true,
      "docRequired": false,
      "example_cn": "on",
      "description_cn": "是否开启健康检查。\n\n取值：**on | off**。"
    },
    "ServerCertificateId": {
      "name": "ServerCertificateId",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": true,
      "docRequired": false,
      "example_cn": "idkp-123-cn-test-01",
      "description_cn": "服务器证书的ID。"
    },
    "LoadBalancerId": {
      "name": "LoadBalancerId",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": true,
      "docRequired": false,
      "example_cn": "lb-bp1o94dp5i6earr9g6d1l",
      "description_cn": "负载均衡实例的ID。"
    },
    "OwnerId": {
      "name": "OwnerId",
      "type": "Long",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false
    },
    "BackendServerPort": {
      "name": "BackendServerPort",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "80",
      "description_cn": "负载均衡实例后端使用的端口，取值：**1-65535**。\n\n如果不使用服务器组（不指定VServerGroupId），则该参数必选。"
    },
    "BackendProtocol": {
      "name": "BackendProtocol",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "visibility": "Private",
      "required": false,
      "docRequired": false
    },
    "XForwardedFor": {
      "name": "XForwardedFor",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "on",
      "description_cn": "是否通过`X-Forwarded-For`获取客户端请求的真实IP。\n\n取值：**on** （默认值） **| off**。"
    },
    "Scheduler": {
      "name": "Scheduler",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "wrr",
      "description_cn": "调度算法。取值：\n\n* **wrr**（默认值）：权重值越高的后端服务器，被轮询到的次数（概率）也越高。\n\n* **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。\n\n* **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。"
    },
    "StickySessionType": {
      "name": "StickySessionType",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "on",
      "description_cn": "Cookie的处理方式。当StickySession的值为**on**时，必须指定该参数。\n\n取值：**insert | server**。\n\n* **insert**：植入Cookie。\n\n 客户端第一次访问时，负载均衡会在返回请求中植入Cookie（即在HTTP/HTTPS响应报文中插入SERVERID），下次客户端携带此Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器上。 \n\n* **server**：重写Cookie。\n\n 负载均衡发现用户自定义了Cookie，将会对原来的Cookie进行重写，下次客户端携带新的Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器。\n"
    },
    "CookieTimeout": {
      "name": "CookieTimeout",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "500",
      "description_cn": "Cookie超时时间。\n\n取值：**1-86400**（秒）。\n\n当**StickySession**为**on**且**StickySessionType**为**insert**时，该参数必选。"
    },
    "Cookie": {
      "name": "Cookie",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "B490B5EBF6F3CD402E515D22BCDA1598",
      "description_cn": "服务器上配置的Cookie。\n\n长度为1-200，只能包含ASCII英文字母和数字字符，不能包含逗号、分号或空格，也不能以$开头。\n\n当**StickySession**为**on**且**StickySessionType**为**server**时，该参数必选。"
    },
    "HealthCheckType": {
      "name": "HealthCheckType",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "visibility": "Private",
      "required": false,
      "docRequired": false
    },
    "HealthCheckMethod": {
      "name": "HealthCheckMethod",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "visibility": "Private",
      "required": false,
      "docRequired": false
    },
    "HealthCheckHttpVersion": {
      "name": "HealthCheckHttpVersion",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "visibility": "Private",
      "required": false,
      "docRequired": false
    },
    "HealthCheckDomain": {
      "name": "HealthCheckDomain",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "$_ip",
      "description_cn": "用于健康检查的域名。取值：\n\n**$_ip**： 后端服务器的私网IP。当指定了IP或该参数未指定时，负载均衡会使用各后端服务器的私网IP当做健康检查使用的域名。\n\t\n    \n**domain**：域名长度为1~80，只能包含字母、数字、点号（.）和连字符（-）。"
    },
    "HealthCheckURI": {
      "name": "HealthCheckURI",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "/test/index.html",
      "description_cn": "用于健康检查的URI。"
    },
    "HealthyThreshold": {
      "name": "HealthyThreshold",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "4",
      "description_cn": "健康检查连续成功多少次后，将后端服务器的健康检查状态由**fail**判定为**success**。\n\n取值：**2-10**。"
    },
    "UnhealthyThreshold": {
      "name": "UnhealthyThreshold",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "4",
      "description_cn": "健康检查连续失败多少次后，将后端服务器的健康检查状态由**success**判定为**fail**。\n\n取值：**2-10**。"
    },
    "HealthCheckTimeout": {
      "name": "HealthCheckTimeout",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "3",
      "description_cn": "接收来自运行状况检查的响应需要等待的时间。如果后端ECS在指定的时间内没有正确响应，则判定为健康检查失败。\n\n取值：**1-300**（秒）。\n\n> 如果**HealthCHeckTimeout**的值小于**HealthCheckInterval**的值，则**HealthCHeckTimeout**无效，超时时间为**HealthCheckInterval**的值。"
    },
    "HealthCheckConnectPort": {
      "name": "HealthCheckConnectPort",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "8080",
      "description_cn": "健康检查使用的端口。\n\n取值：**1-65535**。\n\n> 当**HealthCheck**值为**on**时才会有效。\n\n\t"
    },
    "HealthCheckInterval": {
      "name": "HealthCheckInterval",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "5",
      "description_cn": "健康检查的时间间隔。\n\n取值：**1-50**（秒）。"
    },
    "HealthCheckHttpCode": {
      "name": "HealthCheckHttpCode",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "http_2xx,http_3xx",
      "description_cn": "健康检查正常的HTTP状态码，多个状态码用逗号（,）分割。默认值为**http_2xx**。\n\n取值：**http_2xx | http_3xx | http_4xx | http_5xx**。"
    },
    "MaxConnection": {
      "name": "MaxConnection",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "visibility": "Private",
      "required": false,
      "docRequired": false
    },
    "access_key_id": {
      "name": "access_key_id",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "visibility": "Private",
      "required": false,
      "docRequired": false
    },
    "VServerGroupId": {
      "name": "VServerGroupId",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "rsp-cige6j5e7p",
      "description_cn": "服务器组ID。"
    },
    "CACertificateId": {
      "name": "CACertificateId",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "139a00604ad-cn-east-hangzhou-01",
      "description_cn": "CA证书ID。\n\n若既上传CA证书又上传服务器证书，即采用双向认证。\n\n若用户只上传服务器证书，即为单向认证。"
    },
    "Tags": {
      "name": "Tags",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "visibility": "Private",
      "required": false,
      "docRequired": false
    },
    "XForwardedFor_SLBIP": {
      "name": "XForwardedFor_SLBIP",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "on",
      "description_cn": "是否通过SLB-IP头字段获取来访者真实IP。\n\n取值：**on |off **（默认值）。"
    },
    "XForwardedFor_SLBID": {
      "name": "XForwardedFor_SLBID",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "on",
      "description_cn": "是否通过SLB-ID头字段获取SLB实例ID。\n\n取值：**on | off**（默认值）。"
    },
    "XForwardedFor_proto": {
      "name": "XForwardedFor_proto",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "on",
      "description_cn": "是否通过X-Forwarded-Proto头字段获取SLB的监听协议。\n\n取值：**on | off**（默认值）。"
    },
    "Gzip": {
      "name": "Gzip",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "on",
      "description_cn": "是否开启Gzip压缩，对特定文件类型进行压缩。\n\n取值：**on**（默认值）**| off**。"
    },
    "AclId": {
      "name": "AclId",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "123",
      "description_cn": "监听绑定的访问策略组ID。\n\n当**AclStatus**参数的值为**on**时，该参数必选。"
    },
    "AclType": {
      "name": "AclType",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "white",
      "description_cn": "访问控制类型：\n\n* **white**： 仅转发来自所选访问控制策略组中设置的IP地址或地址段的请求，白名单适用于应用只允许特定IP访问的场景。\n设置白名单存在一定业务风险。\n\n 一旦设置白名单，就只有白名单中的IP可以访问负载均衡监听。\n \n 如果开启了白名单访问，但访问策略组中没有添加任何IP，则负载均衡监听不会转发请求。\n\n* **black**： 来自所选访问控制策略组中设置的IP地址或地址段的所有请求都不会转发，黑名单适用于应用只限制某些特定IP访问的场景。\n\n如果开启了黑名单访问，但访问策略组中没有添加任何IP，则负载均衡监听会转发全部请求。\n\n当**AclStatus**参数的值为**on**时，该参数必选。"
    },
    "AclStatus": {
      "name": "AclStatus",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "off",
      "description_cn": "是否开启访问控制功能。\n\n取值：**on | off**（默认值）。"
    },
    "VpcIds": {
      "name": "VpcIds",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "visibility": "Private",
      "required": false,
      "docRequired": false
    },
    "Description": {
      "name": "Description",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "创建监听",
      "description_cn": "设置监听的描述信息。\n\n长度限制为1-80个字符，允许包含字母、数字、“-”、“/”、“.”和“_”等字符。支持中文描述。"
    },
    "IdleTimeout": {
      "name": "IdleTimeout",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "12",
      "description_cn": "指定连接空闲超时时间，取值范围为1-60秒，默认值为15秒。\n\n在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。"
    },
    "RequestTimeout": {
      "name": "RequestTimeout",
      "type": "Integer",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "23",
      "description_cn": "指定请求超时时间，取值范围为1-180秒，默认值为60秒。\n\n在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回HTTP 504错误码。"
    },
    "EnableHttp2": {
      "name": "EnableHttp2",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "off",
      "description_cn": "是否开启HTTP/2特性。\n\n取值：**on**（默认值）**|off**。"
    },
    "TLSCipherPolicy": {
      "name": "TLSCipherPolicy",
      "type": "String",
      "position": "Query",
      "checkBlank": "false",
      "required": false,
      "docRequired": false,
      "example_cn": "tls_cipher_policy_1_1",
      "description_cn": "只有性能保障型实例才可以指定TLSCipherPolicy参数，每种policy定义了一种安全策略，安全策略包含HTTPS可选的TLS协议版本和配套的加密算法套件。\n\n目前支持以下四种安全策略，详细区别请参见TLS安全策略差异说明，请根据实际情况选择对应的policy。\n\n* **tls_cipher_policy_1_0**：\n\n * 支持TLS版本： TLSv1.0、TLSv1.1和TLSv1.2。\n\n * 支持加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、AES128-GCM-SHA256、AES256-GCM-SHA384、AES128-SHA256、AES256-SHA256、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA、AES128-SHA、AES256-SHA和DES-CBC3-SHA。\n\n* **tls_cipher_policy_1_1**：\n\n * 支持TLS版本： TLSv1.1和TLSv1.2。\n\n * 支持加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、AES128-GCM-SHA256、AES256-GCM-SHA384、AES128-SHA256、AES256-SHA256、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA、AES128-SHA、AES256-SHA和DES-CBC3-SHA。\n\n* **tls_cipher_policy_1_2**\n\n * 支持TLS版本：TLSv1.2。\n\n * 支持加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、AES128-GCM-SHA256、AES256-GCM-SHA384、AES128-SHA256、AES256-SHA256、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA、AES128-SHA、AES256-SHA和DES-CBC3-SHA。\n\n* **tls_cipher_policy_1_2_strict**\n\n * 支持TLS版本：TLSv1.2。\n\n * 支持加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、ECDHE-RSA-AES128-SHA和ECDHE-RSA-AES256-SHA。"
    }
  },
  "res": {
    "RequestId": " CEF72CEB-54B6-4AE8-B225-F876FF7BA984"
  }
}