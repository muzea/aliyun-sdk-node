{"methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"RegionId","in":"query","schema":{"description":"传统型负载均衡实例所在的地域ID。\n\n您可以通过调用[DescribeRegions](~~36063~~)接口获取地域ID。\n\n> 当您所选地域的Endpoint（服务地址）为slb.aliyuncs.com时，`RegionId`必填。","type":"string","required":false,"example":"cn-hangzhou"}},{"name":"NextToken","in":"query","schema":{"description":"是否拥有下一次查询的令牌（Token）。取值：\n- 第一次查询和没有下一次查询时，均无需填写。\n- 如果有下一次查询，取值为上一次API调用返回的NextToken值。","type":"string","required":false,"example":"FFmyTO70tTpLG6I3FmYAXGKPd****"}},{"name":"MaxResults","in":"query","schema":{"description":"分批次查询时每次显示的条目数。\n\n取值范围：**1**~**100**，入参为空时，默认值：**20**。","type":"integer","format":"int32","required":false,"maximum":"101","minimum":"0","example":"50","default":"20"}},{"name":"ListenerProtocol","in":"query","schema":{"description":"传统型负载均衡监听协议。取值：\n- **tcp**\n- **udp**\n- **http**\n- **https**\n","type":"string","required":false,"example":"http"}},{"name":"LoadBalancerId","in":"query","style":"repeatList","schema":{"description":"传统型负载均衡实例的ID列表，最多支持10个实例ID。\n\n","type":"array","items":{"description":"传统型负载均衡实例的ID。","type":"string","required":false,"example":"lb-uf6so8u4g35prnvsw****"},"required":false,"example":"lb-123wrwer","maxItems":11}},{"name":"Tag","in":"query","allowEmptyValue":true,"style":"repeatList","schema":{"description":"标签列表。","type":"array","items":{"description":"标签列表。","type":"object","properties":{"Key":{"description":"资源的标签键。N的取值范围：**1~20**。一旦输入该值，则不允许为空字符串。\n\n最多支持64个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。","type":"string","required":false,"example":"TestKey"},"Value":{"description":"资源的标签值。N的取值范围：**1~20**。一旦输入该值，可以为空字符串。\n最多支持128个字符，不能以`aliyun`和`acs:`开头，不能包含`http://`或者`https://`。","type":"string","required":false,"example":"TestValue"}},"required":false},"required":false,"maxItems":20}},{"name":"ListenerPort","in":"query","allowEmptyValue":true,"schema":{"description":"CLB实例使用的监听端口。","type":"integer","format":"int32","required":false,"maximum":"65535","minimum":"0","example":"443"}},{"name":"Description","in":"query","allowEmptyValue":true,"schema":{"description":"自定义监听名称。","type":"string","required":false,"example":"HTTPS_443"}}],"responses":{"200":{"schema":{"type":"object","properties":{"NextToken":{"description":"是否拥有下一次查询的令牌（Token）。取值：\n- 如果**NextToken**为空表示没有下一次查询。\n- 如果**NextToken**有返回值，该取值表示下一次查询开始的令牌。","type":"string","example":"FFmyTO70tTpLG6I3FmYAXGKPd****"},"RequestId":{"description":"请求ID。","type":"string","example":"365F4154-92F6-4AE4-92F8-7FF34B540710"},"TotalCount":{"description":"本次请求条件下的数据总量。","type":"integer","format":"int32","example":"10"},"MaxResults":{"description":"分批次查询时每次显示的条目数。","type":"integer","format":"int32","example":"50"},"Listeners":{"description":"返回传统型负载均衡的监听列表。\n\n> 实例未配置监听时，不会返回该参数。","type":"array","items":{"description":"返回传统型负载均衡的监听列表。\n\n> 实例未配置监听时，不会返回该参数。","type":"object","properties":{"AclType":{"description":"访问控制类型。取值：\n\n- **white**：仅转发来自所选访问控制策略组中设置的IP地址或地址段的请求，白名单适用于只允许特定IP访问的场景。设置白名单存在一定业务风险。一旦设置白名单，就只有白名单中的IP可以访问负载均衡监听。\n\n 如果开启了白名单访问，但访问策略组中没有添加任何IP，则负载均衡监听会转发全部请求。\n\n- **black**：来自所选访问控制策略组中设置的IP地址或地址段的所有请求都不会转发，黑名单适用于只限制某些特定IP访问的场景。\n\n 如果开启了黑名单访问，但访问策略组中没有添加任何IP，则负载均衡监听会转发全部请求。","type":"string","example":"white"},"Status":{"description":"监听的状态。取值：\n\n- **running**：表示监听正常运行。\n\n- **stopped**：表示监听运行停止。","type":"string","example":"running"},"VServerGroupId":{"description":"监听绑定的虚拟服务器组ID。","type":"string","example":"rsp-cige6j****"},"ListenerProtocol":{"description":"传统型负载均衡监听协议。","type":"string","example":"http"},"LoadBalancerId":{"description":"传统型负载均衡实例的ID。","type":"string","example":"lb-bp1b6c719dfa****"},"ListenerPort":{"description":"监听端口。","type":"integer","format":"int32","example":"80"},"AclId":{"description":"访问控制策略组ID。","type":"string","example":"acl-a2do9e413e0spzasx****"},"Scheduler":{"description":"调度算法。取值：\n\n- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。\n\n- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。\n\n- **sch**：基于源 IP 地址的一致性 hash，相同的源地址会调度到相同的后端服务器。\n- **tch**：基于四元组的一致性 hash（源 IP+目的 IP+源端口+目的端口），相同的流会调度到相同的后端服务器。\n- **qch**：基于 QUIC Connection ID 一致性 hash，相同的 QUIC Connection ID 会调度到相同的后端服务器。\n\n> 仅性能保障型实例支持 **sch**、**tch** 和 **qch** 一致性 hash 算法。","type":"string","example":"wrr"},"Bandwidth":{"description":"监听的带宽峰值。单位：Mbps。","type":"integer","format":"int32","example":"-1"},"Description":{"description":"监听描述。","type":"string","example":"test"},"AclStatus":{"description":"是否开启访问控制功能。取值：\n- **on**：是\n- **off**：否","type":"string","example":"off"},"BackendServerPort":{"description":"后端服务器的端口。\n\n> `VServerGroupId`和`MasterSlaveServerGroupId`均为空时，此参数有效。","type":"integer","format":"int32","example":"80"},"AclIds":{"description":"访问控制策略组ID列表。","type":"array"},"HTTPListenerConfig":{"description":"HTTP监听配置。","type":"object","properties":{"HealthCheckHttpVersion":{"description":"健康检查HTTP协议版本。","type":"string","example":"HTTP 1.0"},"XForwardedFor_ClientSrcPort":{"description":"是否通过`XForwardedFor_ClientSrcPort`头字段获取访问负载均衡实例客户端的端口。取值：\n\n- **on**：是\n- **off**：否","type":"string","example":"on"},"Cookie":{"description":"服务器上配置的Cookie。","type":"string","example":"B490B5EBF6F3CD402E515D22BCDA****"},"Gzip":{"description":"是否开启Gzip压缩。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"HealthCheckConnectPort":{"description":"健康检查的端口。\n\n> 当**HealthCheck**值为**on**时该参数有效。","type":"integer","format":"int32","example":"8080"},"HealthCheckTimeout":{"description":"每次健康检查响应的最大超时间，单位：秒。","type":"integer","format":"int32","example":"3"},"HealthCheckType":{"description":"健康检查协议。","type":"string","example":"tcp"},"CookieTimeout":{"description":"Cookie超时时间。单位：秒。\n\n取值：**1**~**86400**。","type":"integer","format":"int32","example":"500"},"HealthCheckDomain":{"description":"健康检查的域名。","type":"string","example":"www.example.com"},"UnhealthyThreshold":{"description":"健康检查连续失败多少次后，将后端服务器的健康检查状态由**成功**判定为**失败**。\n\n取值范围：**2**~**10**。","type":"integer","format":"int32","example":"4"},"XForwardedFor_SLBID":{"description":"是否通过`SLB-ID`头字段获取负载均衡实例ID。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"ForwardPort":{"description":"HTTP转发至HTTPS的监听端口。\n\n> 如果**ListenerForward**的值为**off**，该参数不显示。","type":"integer","format":"int32","example":"80"},"HealthCheckHttpCode":{"description":"健康检查正常的HTTP状态码。","type":"string","example":"http_2xx,http_3xx"},"ListenerForward":{"description":"是否开启HTTP至HTTPS监听转发。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"XForwardedFor":{"description":"是否通过`XForwardedFor`的方式获取来访者真实IP。取值：\n- **on**：是。\n- **off**：否。","type":"string","example":"on"},"IdleTimeout":{"description":"指定连接空闲超时时间。单位：秒。取值范围：**1**~**60**。\n\n在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立连接。","type":"integer","format":"int32","example":"15"},"RequestTimeout":{"description":"指定请求超时时间。单位：秒。取值范围：**1**~**180**。\n\n在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回`HTTP 504`错误码。","type":"integer","format":"int32","example":"60"},"HealthCheckInterval":{"description":"健康检查的时间间隔，单位：秒。","type":"integer","format":"int32","example":"5"},"XForwardedFor_SLBPORT":{"description":"是否通过`XForwardedFor_SLBPORT`头字段获取负载均衡实例的监听端口。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"HealthCheckURI":{"description":"健康检查的URI。","type":"string","example":"/test/index.html"},"StickySessionType":{"description":"Cookie的处理方式。取值：\n\n- **insert**：植入Cookie。客户端第一次访问时，负载均衡会在返回请求中植入Cookie（即在HTTP和HTTPS响应报文中插入SERVERID），下次客户端携带此Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器上。\n\n- **server**：重写Cookie。负载均衡发现用户自定义了Cookie，将会对原来的Cookie进行重写，下次客户端携带新的Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器。\n","type":"string","example":"insert"},"HealthyThreshold":{"description":"健康检查连续成功多少次后，将后端服务器的健康检查状态由**失败**判定为**成功**。\n\n取值范围：**2**~**10**。","type":"integer","format":"int32","example":"4"},"XForwardedFor_proto":{"description":"是否通过`X-Forwarded-Proto`头字段获取负载均衡实例的监听协议。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"XForwardedFor_SLBIP":{"description":"是否通过`SLB-IP`头字段获取客户端请求的VIP（Virtual IP address）。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"StickySession":{"description":"是否开启会话保持。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"HealthCheckMethod":{"description":"健康检查方式。取值：**head**或**get**。","type":"string","example":"get"},"HealthCheck":{"description":"是否开启健康检查。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"}}},"HTTPSListenerConfig":{"description":"HTTPS监听配置。","type":"object","properties":{"XForwardedFor_ClientCertClientVerify":{"description":"是否通过`XForwardedFor_ClientCertClientVerify`头字段获取对访问负载均衡实例客户端证书的校验结果。取值：\n- **on**：是\n- **off**：否","type":"string","example":"off"},"HealthCheckHttpVersion":{"description":"健康检查HTTP协议版本。","type":"string","example":"HTTP 1.0"},"XForwardedFor_ClientSrcPort":{"description":"是否通过`XForwardedFor_ClientSrcPort`头字段获取访问负载均衡实例客户端的端口。取值：\n- **on**：是\n- **off**：否","type":"string","example":"off"},"Cookie":{"description":"服务器上配置的Cookie。","type":"string","example":"B490B5EBF6F3CD402E515D22BCDA****"},"Gzip":{"description":"是否开启Gzip压缩。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"EnableHttp2":{"description":"是否开启`HTTP 2.0`特性。取值：\n- **on**：是\n- **off**：否","type":"string","example":"off"},"CACertificateId":{"description":"CA证书ID。","type":"string","example":"idkp-234-cn-test-0****"},"HealthCheckConnectPort":{"description":"健康检查的端口。","type":"integer","format":"int32","example":"8080"},"HealthCheckTimeout":{"description":"每次健康检查响应的最大超时间。单位：秒。","type":"integer","format":"int32","example":"3"},"HealthCheckType":{"description":"健康检查协议。","type":"string","example":"tcp"},"CookieTimeout":{"description":"Cookie超时时间。单位：秒。\n\n取值：**1**~**86400**。","type":"integer","format":"int32","example":"500"},"HealthCheckDomain":{"description":"健康检查的域名。","type":"string","example":"www.example.com"},"UnhealthyThreshold":{"description":"健康检查连续失败多少次后，将后端服务器的健康检查状态由**成功**判定为**失败**。\n\n取值范围：**2**~**10**。","type":"integer","format":"int32","example":"4"},"XForwardedFor_SLBID":{"description":"是否通过`SLB-ID`头字段获取负载均衡实例ID。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"XForwardedFor_ClientCertSubjectDN":{"description":"是否通过`XForwardedFor_ClientCertSubjectDN`头字段获取访问负载均衡实例客户端证书的所有者信息。取值：\n- **on**：是。\n- **off**：否。","type":"string","example":"off"},"HealthCheckHttpCode":{"description":"健康检查正常的HTTP状态码。","type":"string","example":"http_2xx,http_3xx"},"XForwardedFor_ClientCertFingerprint":{"description":"是否通过`XForwardedFor_ClientCertFingerprint`头字段获取访问负载均衡实例客户端证书的指纹。取值：\n- **on**：是\n- **off**：否","type":"string","example":"off"},"XForwardedFor":{"description":"是否开启通过`XForwardedFor`的方式获取来访者真实IP。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"RequestTimeout":{"description":"指定请求超时时间，单位：秒。取值范围：**1**~**180**。\n\n在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回`HTTP 504`错误码。","type":"integer","format":"int32","example":"60"},"IdleTimeout":{"description":"指定连接空闲超时时间。单位：秒。取值范围：**1**~**60**。\n\n在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立连接。","type":"integer","format":"int32","example":"15"},"ServerCertificateId":{"description":"服务器证书的ID。","type":"string","example":"idkp-123-cn-test-0****"},"HealthCheckInterval":{"description":"健康检查的时间间隔。单位：秒。","type":"integer","format":"int32","example":"5"},"XForwardedFor_SLBPORT":{"description":"是否通过`XForwardedFor_SLBPORT`头字段获取负载均衡实例的监听端口。取值：\n- **on**：是\n- **off**：否","type":"string","example":"off"},"HealthCheckURI":{"description":"健康检查的URI。","type":"string","example":"/test/index.html"},"StickySessionType":{"description":"Cookie的处理方式。\n\n- **insert**：植入Cookie。客户端第一次访问时，负载均衡会在返回请求中植入Cookie（即在HTTP和HTTPS响应报文中插入SERVERID），下次客户端携带此Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器上。\n\n- **server**：重写Cookie。负载均衡发现用户自定义了Cookie，将会对原来的Cookie进行重写，下次客户端携带新的Cookie访问，负载均衡服务会将请求定向转发给之前记录到的后端服务器。","type":"string","example":"insert"},"XForwardedFor_ClientCertIssuerDN":{"description":"是否通过`XForwardedFor_ClientCertIssuerDN`头字段获取访问负载均衡实例客户端证书的发行者信息。取值：\n- **on**：是\n- **off**：否","type":"string","example":"off"},"HealthyThreshold":{"description":"健康检查连续成功多少次后，将后端服务器的健康检查状态由**失败**判定为**成功**。\n\n取值范围：**2**~**10**。","type":"integer","format":"int32","example":"4"},"XForwardedFor_proto":{"description":"是否通过`X-Forwarded-Proto`头字段获取负载均衡实例的监听协议。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"XForwardedFor_SLBIP":{"description":"是否通过`SLB-IP`头字段获取客户端请求的VIP（Virtual IP address）。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"StickySession":{"description":"是否开启会话保持。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"HealthCheckMethod":{"description":"健康检查方式。","type":"string","example":"get"},"TLSCipherPolicy":{"description":"安全策略包含HTTPS可选的TLS协议版本和配套的加密算法套件。\n\n- **tls\\_cipher\\_policy\\_1\\_0**：\n\n  支持TLS版本： TLSv1.0、TLSv1.1和TLSv1.2。\n\n  支持加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、AES128-GCM-SHA256、AES256-GCM-SHA384、AES128-SHA256、AES256-SHA256、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA、AES128-SHA、AES256-SHA和DES-CBC3-SHA。\n\n- **tls\\_cipher\\_policy\\_1\\_1**：\n\n  支持TLS版本： TLSv1.1和TLSv1.2。\n\n  支持加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、AES128-GCM-SHA256、AES256-GCM-SHA384、AES128-SHA256、AES256-SHA256、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA、AES128-SHA、AES256-SHA和DES-CBC3-SHA。\n\n- **tls\\_cipher\\_policy\\_1\\_2**\n\n  支持TLS版本：TLSv1.2。\n\n  支持加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、AES128-GCM-SHA256、AES256-GCM-SHA384、AES128-SHA256、AES256-SHA256、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA、AES128-SHA、AES256-SHA和DES-CBC3-SHA。\n\n- **tls\\_cipher\\_policy\\_1\\_2\\_strict**\n\n  支持TLS版本：TLSv1.2。\n\n  支持加密算法套件：ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、ECDHE-RSA-AES128-SHA和ECDHE-RSA-AES256-SHA。\n\n- **tls\\_cipher\\_policy\\_1\\_2\\_strict\\_with\\_1\\_3**\n \n   支持TLS版本：TLSv1.2及TLSv1.3。\n \n   支持的加密算法套件：TLS_AES_128_GCM_SHA256、TLS_AES_256_GCM_SHA384、TLS_CHACHA20_POLY1305_SHA256、TLS_AES_128_CCM_SHA256、TLS_AES_128_CCM_8_SHA256、ECDHE-ECDSA-AES128-GCM-SHA256、ECDHE-ECDSA-AES256-GCM-SHA384、ECDHE-ECDSA-AES128-SHA256、ECDHE-ECDSA-AES256-SHA384、ECDHE-RSA-AES128-GCM-SHA256、ECDHE-RSA-AES256-GCM-SHA384、ECDHE-RSA-AES128-SHA256、ECDHE-RSA-AES256-SHA384、ECDHE-ECDSA-AES128-SHA、ECDHE-ECDSA-AES256-SHA、ECDHE-RSA-AES128-SHA、ECDHE-RSA-AES256-SHA。 ","type":"string","example":"tls_cipher_policy_1_0"},"HealthCheck":{"description":"是否开启健康检查。取值：\n- **on**：是。\n- **off**：否。","type":"string","example":"on"}}},"TCPListenerConfig":{"description":"TCP监听配置。","type":"object","properties":{"HealthCheckHttpCode":{"description":"健康检查正常的HTTP状态码。","type":"string","example":"http_2xx,http_3xx"},"ConnectionDrainTimeout":{"description":"设置连接优雅中断超时时间。单位：秒。\n\n取值范围：**10~900**。","type":"integer","format":"int32","example":"300"},"PersistenceTimeout":{"description":"是否开启了会话保持。单位：秒。\n\n取值范围：**0**~**3600**。\n\n取值为**0**时，表示未开启。","type":"integer","format":"int32","example":"0"},"HealthCheckInterval":{"description":"健康检查的时间间隔，单位为秒。","type":"integer","format":"int32","example":"5"},"HealthCheckURI":{"description":"健康检查的URI。","type":"string","example":"/test/index.html"},"HealthCheckConnectPort":{"description":"健康检查使用的端口。","type":"integer","format":"int32","example":"8080"},"EstablishedTimeout":{"description":"连接超时时间。单位：秒。","type":"integer","format":"int32","example":"500"},"HealthCheckType":{"description":"健康检查协议。","type":"string","example":"tcp"},"HealthCheckConnectTimeout":{"description":"健康检查超时时间。单位：秒。\n\n取值范围：**1**~**300**。","type":"integer","format":"int32","example":"100"},"MasterSlaveServerGroupId":{"description":"监听绑定的主备服务器组ID。","type":"string","example":"rsp-0bfucw*****"},"HealthyThreshold":{"description":"健康检查连续成功多少次后，将后端服务器的健康检查状态由**失败**判定为**成功**。\n\n取值范围：**2**~**10**。","type":"integer","format":"int32","example":"4"},"HealthCheckDomain":{"description":"健康检查的域名。","type":"string","example":"www.example.com"},"UnhealthyThreshold":{"description":"健康检查连续失败多少次后，将后端服务器的健康检查状态由**成功**判定为**失败**。\n\n取值范围：**2**~**10**。","type":"integer","format":"int32","example":"4"},"ConnectionDrain":{"description":"是否开启连接优雅中断。取值：\n- **on**：是\n- **off**：否","type":"string","example":"off"},"HealthCheckMethod":{"description":"健康检查方式。","type":"string","example":"get"},"HealthCheck":{"description":"是否开启健康检查。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"ProxyProtocolV2Enabled":{"description":"是否支持通过Proxy Protocol协议携带客户端源地址到后端服务器。取值：\n\n- **true**：是。\n- **false**：否。","type":"string","example":"false"}}},"UDPListenerConfig":{"description":"UDP监听配置。","type":"object","properties":{"ConnectionDrainTimeout":{"description":"设置连接优雅中断超时时间。单位：秒。\n\n取值范围：**10~900**。","type":"integer","format":"int32","example":"300"},"HealthCheckInterval":{"description":"健康检查的时间间隔，单位为秒。","type":"integer","format":"int32","example":"5"},"HealthCheckExp":{"description":"UDP监听健康检查的响应串。","type":"string","example":"ok"},"HealthCheckConnectPort":{"description":"健康检查的端口。","type":"integer","format":"int32","example":"8080"},"HealthCheckConnectTimeout":{"description":"健康检查响应超时时间。","type":"integer","format":"int32","example":"100"},"MasterSlaveServerGroupId":{"description":"绑定的主备服务器组ID。","type":"string","example":"rsp-0bfucw****"},"HealthyThreshold":{"description":"健康检查阈值。","type":"integer","format":"int32","example":"4"},"UnhealthyThreshold":{"description":"不健康检查阈值。","type":"integer","format":"int32","example":"4"},"ConnectionDrain":{"description":"是否开启连接优雅中断。取值：\n- **on**：是\n- **off**：否","type":"string","example":"off"},"HealthCheckReq":{"description":"UDP监听健康检查的请求串。","type":"string","example":"hello"},"HealthCheck":{"description":"是否开启健康检查。取值：\n- **on**：是\n- **off**：否","type":"string","example":"on"},"ProxyProtocolV2Enabled":{"description":"是否支持通过Proxy Protocol协议携带客户端源地址到后端服务器。取值：\n\n- **true**：是。\n- **false**：否。","type":"string","example":"false"}}},"Tags":{"description":"标签列表。","type":"array","items":{"description":"标签列表。","type":"object","properties":{"TagValue":{"description":"资源的标签值。","type":"string","example":"TestValue"},"TagKey":{"description":"资源的标签键。","type":"string","example":"TestKey"}}}}}}}}}}},"errorCodes":{"400":[{"errorCode":"IllegalParam.ListenerProtocol","errorMessage":"The param of ListenerProtocol is illegal."},{"errorCode":"IllegalParam.MaxResults","errorMessage":"The param of MaxResults is illegal."},{"errorCode":"IllegalParam.NextToken","errorMessage":"The param of NextToken is illegal."},{"errorCode":"IllegalParamSize.LoadBalancerId","errorMessage":"The param size of LoadBalancerId is illegal."},{"errorCode":"MissingParam.TagKey","errorMessage":"The param of TagKey is missing."}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"NextToken\\\": \\\"FFmyTO70tTpLG6I3FmYAXGKPd****\\\",\\n  \\\"RequestId\\\": \\\"365F4154-92F6-4AE4-92F8-7FF34B540710\\\",\\n  \\\"TotalCount\\\": 10,\\n  \\\"MaxResults\\\": 50,\\n  \\\"Listeners\\\": [\\n    {\\n      \\\"AclType\\\": \\\"white\\\",\\n      \\\"Status\\\": \\\"running\\\",\\n      \\\"VServerGroupId\\\": \\\"rsp-cige6j****\\\",\\n      \\\"ListenerProtocol\\\": \\\"http\\\",\\n      \\\"LoadBalancerId\\\": \\\"lb-bp1b6c719dfa****\\\",\\n      \\\"ListenerPort\\\": 80,\\n      \\\"AclId\\\": \\\"acl-a2do9e413e0spzasx****\\\",\\n      \\\"Scheduler\\\": \\\"wrr\\\",\\n      \\\"Bandwidth\\\": -1,\\n      \\\"Description\\\": \\\"test\\\",\\n      \\\"AclStatus\\\": \\\"off\\\",\\n      \\\"BackendServerPort\\\": 80,\\n      \\\"AclIds\\\": [\\n        \\\"\\\"\\n      ],\\n      \\\"HTTPListenerConfig\\\": {\\n        \\\"HealthCheckHttpVersion\\\": \\\"HTTP 1.0\\\",\\n        \\\"XForwardedFor_ClientSrcPort\\\": \\\"on\\\",\\n        \\\"Cookie\\\": \\\"B490B5EBF6F3CD402E515D22BCDA****\\\",\\n        \\\"Gzip\\\": \\\"on\\\",\\n        \\\"HealthCheckConnectPort\\\": 8080,\\n        \\\"HealthCheckTimeout\\\": 3,\\n        \\\"HealthCheckType\\\": \\\"tcp\\\",\\n        \\\"CookieTimeout\\\": 500,\\n        \\\"HealthCheckDomain\\\": \\\"www.example.com\\\",\\n        \\\"UnhealthyThreshold\\\": 4,\\n        \\\"XForwardedFor_SLBID\\\": \\\"on\\\",\\n        \\\"ForwardPort\\\": 80,\\n        \\\"HealthCheckHttpCode\\\": \\\"http_2xx,http_3xx\\\",\\n        \\\"ListenerForward\\\": \\\"on\\\",\\n        \\\"XForwardedFor\\\": \\\"on\\\",\\n        \\\"IdleTimeout\\\": 15,\\n        \\\"RequestTimeout\\\": 60,\\n        \\\"HealthCheckInterval\\\": 5,\\n        \\\"XForwardedFor_SLBPORT\\\": \\\"on\\\",\\n        \\\"HealthCheckURI\\\": \\\"/test/index.html\\\",\\n        \\\"StickySessionType\\\": \\\"insert\\\",\\n        \\\"HealthyThreshold\\\": 4,\\n        \\\"XForwardedFor_proto\\\": \\\"on\\\",\\n        \\\"XForwardedFor_SLBIP\\\": \\\"on\\\",\\n        \\\"StickySession\\\": \\\"on\\\",\\n        \\\"HealthCheckMethod\\\": \\\"get\\\",\\n        \\\"HealthCheck\\\": \\\"on\\\"\\n      },\\n      \\\"HTTPSListenerConfig\\\": {\\n        \\\"XForwardedFor_ClientCertClientVerify\\\": \\\"off\\\",\\n        \\\"HealthCheckHttpVersion\\\": \\\"HTTP 1.0\\\",\\n        \\\"XForwardedFor_ClientSrcPort\\\": \\\"off\\\",\\n        \\\"Cookie\\\": \\\"B490B5EBF6F3CD402E515D22BCDA****\\\",\\n        \\\"Gzip\\\": \\\"on\\\",\\n        \\\"EnableHttp2\\\": \\\"off\\\",\\n        \\\"CACertificateId\\\": \\\"idkp-234-cn-test-0****\\\",\\n        \\\"HealthCheckConnectPort\\\": 8080,\\n        \\\"HealthCheckTimeout\\\": 3,\\n        \\\"HealthCheckType\\\": \\\"tcp\\\",\\n        \\\"CookieTimeout\\\": 500,\\n        \\\"HealthCheckDomain\\\": \\\"www.example.com\\\",\\n        \\\"UnhealthyThreshold\\\": 4,\\n        \\\"XForwardedFor_SLBID\\\": \\\"on\\\",\\n        \\\"XForwardedFor_ClientCertSubjectDN\\\": \\\"off\\\",\\n        \\\"HealthCheckHttpCode\\\": \\\"http_2xx,http_3xx\\\",\\n        \\\"XForwardedFor_ClientCertFingerprint\\\": \\\"off\\\",\\n        \\\"XForwardedFor\\\": \\\"on\\\",\\n        \\\"RequestTimeout\\\": 60,\\n        \\\"IdleTimeout\\\": 15,\\n        \\\"ServerCertificateId\\\": \\\"idkp-123-cn-test-0****\\\",\\n        \\\"HealthCheckInterval\\\": 5,\\n        \\\"XForwardedFor_SLBPORT\\\": \\\"off\\\",\\n        \\\"HealthCheckURI\\\": \\\"/test/index.html\\\",\\n        \\\"StickySessionType\\\": \\\"insert\\\",\\n        \\\"XForwardedFor_ClientCertIssuerDN\\\": \\\"off\\\",\\n        \\\"HealthyThreshold\\\": 4,\\n        \\\"XForwardedFor_proto\\\": \\\"on\\\",\\n        \\\"XForwardedFor_SLBIP\\\": \\\"on\\\",\\n        \\\"StickySession\\\": \\\"on\\\",\\n        \\\"HealthCheckMethod\\\": \\\"get\\\",\\n        \\\"TLSCipherPolicy\\\": \\\"tls_cipher_policy_1_0\\\",\\n        \\\"HealthCheck\\\": \\\"on\\\"\\n      },\\n      \\\"TCPListenerConfig\\\": {\\n        \\\"HealthCheckHttpCode\\\": \\\"http_2xx,http_3xx\\\",\\n        \\\"ConnectionDrainTimeout\\\": 300,\\n        \\\"PersistenceTimeout\\\": 0,\\n        \\\"HealthCheckInterval\\\": 5,\\n        \\\"HealthCheckURI\\\": \\\"/test/index.html\\\",\\n        \\\"HealthCheckConnectPort\\\": 8080,\\n        \\\"EstablishedTimeout\\\": 500,\\n        \\\"HealthCheckType\\\": \\\"tcp\\\",\\n        \\\"HealthCheckConnectTimeout\\\": 100,\\n        \\\"MasterSlaveServerGroupId\\\": \\\"rsp-0bfucw*****\\\",\\n        \\\"HealthyThreshold\\\": 4,\\n        \\\"HealthCheckDomain\\\": \\\"www.example.com\\\",\\n        \\\"UnhealthyThreshold\\\": 4,\\n        \\\"ConnectionDrain\\\": \\\"off\\\",\\n        \\\"HealthCheckMethod\\\": \\\"get\\\",\\n        \\\"HealthCheck\\\": \\\"on\\\",\\n        \\\"ProxyProtocolV2Enabled\\\": \\\"false\\\"\\n      },\\n      \\\"UDPListenerConfig\\\": {\\n        \\\"ConnectionDrainTimeout\\\": 300,\\n        \\\"HealthCheckInterval\\\": 5,\\n        \\\"HealthCheckExp\\\": \\\"ok\\\",\\n        \\\"HealthCheckConnectPort\\\": 8080,\\n        \\\"HealthCheckConnectTimeout\\\": 100,\\n        \\\"MasterSlaveServerGroupId\\\": \\\"rsp-0bfucw****\\\",\\n        \\\"HealthyThreshold\\\": 4,\\n        \\\"UnhealthyThreshold\\\": 4,\\n        \\\"ConnectionDrain\\\": \\\"off\\\",\\n        \\\"HealthCheckReq\\\": \\\"hello\\\",\\n        \\\"HealthCheck\\\": \\\"on\\\",\\n        \\\"ProxyProtocolV2Enabled\\\": \\\"false\\\"\\n      },\\n      \\\"Tags\\\": [\\n        {\\n          \\\"TagValue\\\": \\\"TestValue\\\",\\n          \\\"TagKey\\\": \\\"TestKey\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeLoadBalancerListenersResponse>\\n    <NextToken>FFmyTO70tTpLG6I3FmYAXGKPd****</NextToken>\\n    <RequestId>365F4154-92F6-4AE4-92F8-7FF34B540710</RequestId>\\n    <TotalCount>10</TotalCount>\\n    <MaxResults>50</MaxResults>\\n    <Listeners>\\n        <AclType>white</AclType>\\n        <Status>running</Status>\\n        <VServerGroupId>rsp-cige6j****</VServerGroupId>\\n        <ListenerProtocol>http</ListenerProtocol>\\n        <LoadBalancerId>lb-bp1b6c719dfa****</LoadBalancerId>\\n        <ListenerPort>80</ListenerPort>\\n        <AclId>nacl-a2do9e413e0spzasx****</AclId>\\n        <Scheduler>wrr</Scheduler>\\n        <Bandwidth>-1</Bandwidth>\\n        <Description>test</Description>\\n        <AclStatus>off</AclStatus>\\n        <BackendServerPort>80</BackendServerPort>\\n        <HTTPListenerConfig>\\n            <HealthCheckHttpVersion>HTTP 1.0</HealthCheckHttpVersion>\\n            <XForwardedFor_ClientSrcPort>on</XForwardedFor_ClientSrcPort>\\n            <Cookie>B490B5EBF6F3CD402E515D22BCDA****</Cookie>\\n            <Gzip>on</Gzip>\\n            <HealthCheckConnectPort>8080</HealthCheckConnectPort>\\n            <HealthCheckTimeout>3</HealthCheckTimeout>\\n            <HealthCheckType>tcp</HealthCheckType>\\n            <CookieTimeout>500</CookieTimeout>\\n            <HealthCheckDomain>www.example.com</HealthCheckDomain>\\n            <UnhealthyThreshold>4</UnhealthyThreshold>\\n            <XForwardedFor_SLBID>on</XForwardedFor_SLBID>\\n            <ForwardPort>80</ForwardPort>\\n            <HealthCheckHttpCode>http_2xx,http_3xx</HealthCheckHttpCode>\\n            <ListenerForward>on</ListenerForward>\\n            <XForwardedFor>on</XForwardedFor>\\n            <IdleTimeout>15</IdleTimeout>\\n            <RequestTimeout>60</RequestTimeout>\\n            <HealthCheckInterval>5</HealthCheckInterval>\\n            <XForwardedFor_SLBPORT>on</XForwardedFor_SLBPORT>\\n            <HealthCheckURI>/test/index.html</HealthCheckURI>\\n            <StickySessionType>insert</StickySessionType>\\n            <HealthyThreshold>4</HealthyThreshold>\\n            <XForwardedFor_proto>on</XForwardedFor_proto>\\n            <XForwardedFor_SLBIP>on</XForwardedFor_SLBIP>\\n            <StickySession>on</StickySession>\\n            <HealthCheckMethod>get</HealthCheckMethod>\\n            <HealthCheck>on</HealthCheck>\\n        </HTTPListenerConfig>\\n        <HTTPSListenerConfig>\\n            <XForwardedFor_ClientCertClientVerify>off</XForwardedFor_ClientCertClientVerify>\\n            <HealthCheckHttpVersion>HTTP 1.0</HealthCheckHttpVersion>\\n            <XForwardedFor_ClientSrcPort>off</XForwardedFor_ClientSrcPort>\\n            <Cookie>B490B5EBF6F3CD402E515D22BCDA****</Cookie>\\n            <Gzip>on</Gzip>\\n            <EnableHttp2>off</EnableHttp2>\\n            <CACertificateId>idkp-234-cn-test-0****</CACertificateId>\\n            <HealthCheckConnectPort>8080</HealthCheckConnectPort>\\n            <HealthCheckTimeout>3</HealthCheckTimeout>\\n            <HealthCheckType>tcp</HealthCheckType>\\n            <CookieTimeout>500</CookieTimeout>\\n            <HealthCheckDomain>www.example.com</HealthCheckDomain>\\n            <UnhealthyThreshold>4</UnhealthyThreshold>\\n            <XForwardedFor_SLBID>on</XForwardedFor_SLBID>\\n            <XForwardedFor_ClientCertSubjectDN>off</XForwardedFor_ClientCertSubjectDN>\\n            <HealthCheckHttpCode>http_2xx,http_3xx</HealthCheckHttpCode>\\n            <XForwardedFor_ClientCertFingerprint>off</XForwardedFor_ClientCertFingerprint>\\n            <XForwardedFor>on</XForwardedFor>\\n            <RequestTimeout>60</RequestTimeout>\\n            <IdleTimeout>15</IdleTimeout>\\n            <ServerCertificateId>idkp-123-cn-test-0****</ServerCertificateId>\\n            <HealthCheckInterval>5</HealthCheckInterval>\\n            <XForwardedFor_SLBPORT>off</XForwardedFor_SLBPORT>\\n            <HealthCheckURI>/test/index.html</HealthCheckURI>\\n            <StickySessionType>insert</StickySessionType>\\n            <XForwardedFor_ClientCertIssuerDN>off</XForwardedFor_ClientCertIssuerDN>\\n            <HealthyThreshold>4</HealthyThreshold>\\n            <XForwardedFor_proto>on</XForwardedFor_proto>\\n            <XForwardedFor_SLBIP>on</XForwardedFor_SLBIP>\\n            <StickySession>on</StickySession>\\n            <HealthCheckMethod>get</HealthCheckMethod>\\n            <TLSCipherPolicy>tls_cipher_policy_1_0</TLSCipherPolicy>\\n            <HealthCheck>on</HealthCheck>\\n        </HTTPSListenerConfig>\\n        <TCPListenerConfig>\\n            <HealthCheckHttpCode>http_2xx,http_3xx</HealthCheckHttpCode>\\n            <ConnectionDrainTimeout>300</ConnectionDrainTimeout>\\n            <PersistenceTimeout>0</PersistenceTimeout>\\n            <HealthCheckInterval>5</HealthCheckInterval>\\n            <HealthCheckURI>/test/index.html</HealthCheckURI>\\n            <HealthCheckConnectPort>8080</HealthCheckConnectPort>\\n            <EstablishedTimeout>500</EstablishedTimeout>\\n            <HealthCheckType>tcp</HealthCheckType>\\n            <HealthCheckConnectTimeout>100</HealthCheckConnectTimeout>\\n            <MasterSlaveServerGroupId>rsp-0bfucw*****</MasterSlaveServerGroupId>\\n            <HealthyThreshold>4</HealthyThreshold>\\n            <HealthCheckDomain>www.example.com</HealthCheckDomain>\\n            <UnhealthyThreshold>4</UnhealthyThreshold>\\n            <ConnectionDrain>off</ConnectionDrain>\\n            <HealthCheckMethod>get</HealthCheckMethod>\\n            <HealthCheck>on</HealthCheck>\\n            <ProxyProtocolV2Enabled>false</ProxyProtocolV2Enabled>\\n        </TCPListenerConfig>\\n        <UDPListenerConfig>\\n            <ConnectionDrainTimeout>300</ConnectionDrainTimeout>\\n            <HealthCheckInterval>5</HealthCheckInterval>\\n            <HealthCheckExp>ok</HealthCheckExp>\\n            <HealthCheckConnectPort>8080</HealthCheckConnectPort>\\n            <HealthCheckConnectTimeout>100</HealthCheckConnectTimeout>\\n            <MasterSlaveServerGroupId>rsp-0bfucw****</MasterSlaveServerGroupId>\\n            <HealthyThreshold>4</HealthyThreshold>\\n            <UnhealthyThreshold>4</UnhealthyThreshold>\\n            <ConnectionDrain>off</ConnectionDrain>\\n            <HealthCheckReq>hello</HealthCheckReq>\\n            <HealthCheck>on</HealthCheck>\\n            <ProxyProtocolV2Enabled>false</ProxyProtocolV2Enabled>\\n        </UDPListenerConfig>\\n        <Tags>\\n            <TagValue>TestValue</TagValue>\\n            <TagKey>TestKey</TagKey>\\n        </Tags>\\n    </Listeners>\\n</DescribeLoadBalancerListenersResponse>\",\"errorExample\":\"\"}]","title":"查询负载均衡监听列表","summary":"查询负载均衡监听列表详情。","description":"- 您已经创建了传统型负载均衡实例。具体操作，请参见[CreateLoadBalancer](~~27577~~)。\n- 您已经为创建的传统型负载均衡实例配置了监听。具体操作，请参见：\n\n    - [CreateLoadBalancerUDPListener](~~27595~~)\n    - [CreateLoadBalancerTCPListener](~~27594~~)\n    - [CreateLoadBalancerHTTPListener](~~27592~~)  \n    - [CreateLoadBalancerHTTPSListener](~~27593~~)","requestParamsDescription":" ","responseParamsDescription":" ","extraInfo":" "}