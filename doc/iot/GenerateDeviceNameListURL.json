{"methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"systemTags":{"operationType":"create"},"parameters":[{"name":"IotInstanceId","in":"query","schema":{"description":"实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。\n\n><notice>\n- 若有ID值，必须传入该ID值，否则调用会失败。\n- 若无<props=\"intl\"><ph>**实例概览**页面或</ph></props>ID值，则无需传入。\n\n></notice>\n\n实例的更多信息，请参见[实例概述](~~356505~~)。","type":"string","required":false,"example":"iot-cn-0pp1n8t****"}}],"responses":{"200":{"schema":{"type":"object","properties":{"Code":{"description":"调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。","type":"string","example":"iot.system.SystemException"},"ErrorMessage":{"description":"调用失败时，返回的出错信息。","type":"string","example":"系统异常"},"RequestId":{"description":"阿里云为该请求生成的唯一标识符。","type":"string","example":"74C2BB8D-1D6F-41F5-AE68-6B2310883F63"},"Success":{"description":"是否调用成功。\n- **true**：调用成功。\n- **false**：调用失败。\n","type":"boolean","example":"true"},"Data":{"description":"调用成功时，返回的文件上传信息。详情见以下参数信息。","type":"object","properties":{"Key":{"description":"调用OSS API PostObject上传对象（即文件）的名称，包含OSS对象的完整路径。","type":"string","example":"ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv"},"Signature":{"description":"根据**AccessKeySecret**和**Policy**计算出的签名信息。调用OSS API时，OSS验证该签名信息，从而确认Post请求的合法性。","type":"string","example":"v6lViO4FBvfquajQjg20K5hK****"},"Host":{"description":"OSS的接入域名。","type":"string","example":"https://iotx-ota.oss-cn-shanghai.aliyuncs.com"},"FileUrl":{"description":"文件的URL，即文件在对象存储（OSS）上的存储地址。\n\n设备列表文件上传成功后，使用此参数调用[CreateOTAStaticUpgradeJob](~~147496~~)接口创建静态批量升级批次。","type":"string","example":"https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv"},"Policy":{"description":"OSS通过该参数验证请求表单域的合法性。","type":"string","example":"eyJleHBpcmF****"},"ObjectStorage":{"description":"对象存储类型。默认为OSS。","type":"string","example":"OSS"},"UtcCreate":{"description":"生成文件上传URL的时间，UTC格式。","type":"string","example":"2019-11-04T06:21:54.607Z"},"AccessKeyId":{"description":"OSS Bucket拥有者的AccessKeyId。\n该OSS Bucket将存储文件。","type":"string","example":"cS8uRRy54Rsz****"}}}}}}},"errorCodes":{},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"Code\\\": \\\"iot.system.SystemException\\\",\\n  \\\"ErrorMessage\\\": \\\"系统异常\\\",\\n  \\\"RequestId\\\": \\\"74C2BB8D-1D6F-41F5-AE68-6B2310883F63\\\",\\n  \\\"Success\\\": true,\\n  \\\"Data\\\": {\\n    \\\"Key\\\": \\\"ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv\\\",\\n    \\\"Signature\\\": \\\"v6lViO4FBvfquajQjg20K5hK****\\\",\\n    \\\"Host\\\": \\\"https://iotx-ota.oss-cn-shanghai.aliyuncs.com\\\",\\n    \\\"FileUrl\\\": \\\"https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv\\\",\\n    \\\"Policy\\\": \\\"eyJleHBpcmF****\\\",\\n    \\\"ObjectStorage\\\": \\\"OSS\\\",\\n    \\\"UtcCreate\\\": \\\"2019-11-04T06:21:54.607Z\\\",\\n    \\\"AccessKeyId\\\": \\\"cS8uRRy54Rsz****\\\"\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<GenerateDeviceNameListURLResponse>\\n    <Data>\\n        <Policy>eyJleHBpcmF****</Policy>\\n        <FileUrl>https://iotx-ota.oss-cn-shanghai.aliyuncs.com/ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv</FileUrl>\\n        <UtcCreate>2019-11-04T06:21:54.607Z</UtcCreate>\\n        <AccessKeyId>cS8uRRy54Rsz****</AccessKeyId>\\n        <Signature>v6lViO4FBvfquajQjg20K5hK****</Signature>\\n        <ObjectStorage>OSS</ObjectStorage>\\n        <Host>https://iotx-ota.oss-cn-shanghai.aliyuncs.com</Host>\\n        <Key>ota/65dfcda0473be29836dfde585472****/ck2nfzljo00023g7kysg0****.csv</Key>\\n    </Data>\\n    <RequestId>74C2BB8D-1D6F-41F5-AE68-6B2310883F63</RequestId>\\n    <Success>true</Success>\\n</GenerateDeviceNameListURLResponse>\",\"errorExample\":\"\"}]","title":"生成设备文件上传到OSS的详细信息","summary":"生成设备列表文件上传到OSS的URL及详细信息。","description":"## 设备列表文件要求\n\n- 设备列表文件包含设备DeviceName，以换行分隔，每行一个DeviceName。支持CSV格式，文件大小不能超过5 MB。\n\n- 单个设备列表文件最多可包含升级包对应产品下的10,000个设备，否则使用该文件创建静态升级批次时将报错。\n\n## 使用说明\n该接口与其他接口结合使用完成设备列表文件上传。上传设备列表文件的步骤：\n\n1. 调用本接口生成设备列表文件上传到对象存储（OSS）的信息。\n本接口的返回参数包含：\n    调用OSS [PostObject](~~31988~~)上传设备列表文件的请求参数：**Key**、**AccessKeyId**、**Signature**和**Policy**。\n\n2. 请在本接口返回结果后的1分钟之内，使用[OSS SDK](~~52834~~)调用[PostObject](~~31988~~)接口上传设备列表文件。上传文件的代码示例，请参见下文返回参数的用途章节。\n\n    > 本接口返回的参数信息有效期为1分钟，请在1分钟内上传设备列表文件。\n\n3. 设备列表上传完成后，请在60分钟内，调用物联网平台API [CreateOTAStaticUpgradeJob](~~147496~~)创建静态升级批次。\n    如果上传了设备列表，但未调用CreateOTAStaticUpgradeJob创建静态升级批次，上传的文件将被系统定期自动清理。\n\n## QPS限制\n单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。\n\n   > RAM用户共享阿里云账号配额。","requestParamsDescription":"调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。","responseParamsDescription":"## 返回参数的用途\n\n调用OSS [PostObject](~~31988~~)接口时，使用本接口的返回参数值作为请求参数值，将您编辑好的文件上传到对象存储（OSS）。\n\n以下是向对象存储OSS上传文件的Java代码示例：\n\n- 在pom.xml中添加以下依赖：\n\n```<dependency>\n  <groupId>org.apache.httpcomponents</groupId>\n  <artifactId>httpclient</artifactId>\n  <version>4.5.3</version>\n</dependency>\n\n<dependency>\n  <groupId>org.apache.httpcomponents</groupId>\n  <artifactId>httpmime</artifactId>\n  <version>4.5.10</version>\n</dependency>\n```\n\n- 上传文件的代码如下：\n\n```public static boolean postObject(String key,\n                                  String host,\n                                  String policy,\n                                  String ossAccessKeyId,\n                                  String signature,\n                                  String data) throws IOException {\n  CloseableHttpClient httpClient = HttpClients.createDefault();\n  HttpPost uploadFile = new HttpPost(host);\n\n  MultipartEntityBuilder builder = MultipartEntityBuilder.create();\n  builder.addTextBody(\"key\", key, ContentType.TEXT_PLAIN);\n  builder.addTextBody(\"policy\", policy, ContentType.TEXT_PLAIN);\n  builder.addTextBody(\"ossAccessKeyId\", ossAccessKeyId, ContentType.TEXT_PLAIN);\n  builder.addTextBody(\"signature\", signature, ContentType.TEXT_PLAIN);\n  builder.addTextBody(\"success_action_status\", \"200\", ContentType.TEXT_PLAIN);\n  builder.addBinaryBody(\"file\", data.getBytes());\n\n  HttpEntity multipart = builder.build();\n  uploadFile.setEntity(multipart);\n  CloseableHttpResponse response = httpClient.execute(uploadFile);\n\n  if (response.getStatusLine().getStatusCode() == 200) {\n    return true;\n  }\n\n  return false;\n}\n```","extraInfo":" "}