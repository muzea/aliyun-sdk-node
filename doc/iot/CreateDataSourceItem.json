{"methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"systemTags":{"operationType":"create"},"parameters":[{"name":"IotInstanceId","in":"query","schema":{"description":"实例ID。您可在物联网平台控制台的**实例概览**页面，查看当前实例的**ID**。\n\n><notice>\n- 若有ID值，必须传入该**ID**值，否则调用会失败。\n- 若无**实例概览**页面或**ID**值，则无需传入。\n\n></notice>\n\n实例的更多信息，请参见[实例概述](~~356505~~)。","type":"string","required":false,"example":"iot-0pp1n8t***"}},{"name":"DataSourceId","in":"query","schema":{"description":"数据源ID。","type":"integer","format":"int64","required":true,"maximum":"999999999999","minimum":"0","example":"1002"}},{"name":"Topic","in":"query","schema":{"description":"应用到规则引擎的具体Topic，格式一般为：`/${productKey}/${deviceName}/topicShortName`。其中，`${productKey}`是设备所属产品的**ProductKey**，`${deviceName}`是具体设备的名称，`topicShortName`是Topic剩余部分。\n\n- 基础通信Topic或物模型通信Topic的格式一般为：`/${productKey}/${deviceName}/topicShortName`。其中，`${deviceName}`可以使用通配符`+`代替，表示产品下所有设备名称。`topicShortName`取值如下：\n\n    - `/thing/event/property/post `设备上报的属性消息。\n    - `/thing/event/${tsl.event.identifier}/post`设备上报的事件消息，`${}`中是产品物模型中事件identifier。\n    - `/thing/lifecycle` 设备生命周期变更消息。\n    - `/thing/downlink/reply/message`设备响应云端指令的结果消息。\n    - `/thing/list/found`网关上报发现子设备消息。\n    - `/thing/topo/lifecycle`设备拓扑关系变更消息。\n    - `/thing/event/property/history/post`设备历史属性上报消息。\n    - `/thing/event/${tsl.event.identifier}/history/post`设备历史事件上报消息，`${}`中是产品物模型中事件identifier。\n    - `/ota/upgrade`设备OTA升级状态通知消息。\n    - `/ota/version/post`设备OTA模块版本号上报消息。\n    - `/thing/deviceinfo/update`设备标签变更消息。\n\n    OTA升级批次状态通知Topic也属于基础通信Topic,格式为：`/${productKey}/${packageId}/${jobId}/ota/job/status`。其中，`${packageId}`是升级包ID，`${jobId}`是升级批次ID。\n- 自定义消息Topic为：`/${productKey}/${deviceName}/user/#`，如：`/${productKey}/${deviceName}/user/get`。\n\n  调用[QueryProductTopic](~~69647~~)接口，可以查看产品下的所有自定义Topic类。\n\n    指定自定义Topic时，可以使用通配符`+`和`#`。\n    - `${deviceName}`可以使用通配符`+`代替，表示产品下所有设备；\n    - 之后字段可以用`/user/#`，`#`表示`/user`层级之后的所有层级名称。\n    \n- 设备状态变化通知Topic为：`/as/mqtt/status/${productKey}/${deviceName}`。\n\n 可以直接使用通配符`+`，表示产品下所有设备的状态变化通知。\n\n使用通配符，请参见[Topic类中的通配符](~~85539~~)。\n\nTopic数据格式的详细说明，请参见[数据格式](~~73736~~)。\n\n><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，仅支持自定义的消息Topic、设备状态变化通知Topic和设备生命周期变更Topic。自定义的消息Topic说明，请参见消息通信说明。若输入自定义的消息Topic，需同时传入**ScopeType**和**ProductKey**。若**ScopeType**为**DEVICE**，还需传入**DeviceName**。\n></notice>","type":"string","required":true,"example":"/as/mqtt/status/gy***z/+"}},{"name":"ProductKey","in":"query","schema":{"description":"自定义的消息Topic所属产品的**ProductKey**。\n\n><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，必须设置此参数。\n></notice>","type":"string","required":false,"example":"gy***z"}},{"name":"DeviceName","in":"query","schema":{"description":"自定义的消息Topic所属的设备名称。\n\n><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，**Topic**为自定义的消息Topic时，**scopeType**为**DEVICE**时，必须设置此参数。\n></notice>","type":"string","required":false,"example":"device1"}},{"name":"ScopeType","in":"query","schema":{"description":"自定义的消息Topic订阅的作用域，可取值：\n\n- **PRODUCT **：产品维度，表示作用在产品下的所有设备上。即需同时传入**ProductKey**。\n- **DEVICE **：设备维度，表示作用在产品下指定的设备上。即需同时传入**DeviceName**。\n\n><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，**Topic**为自定义的消息Topic时，必须设置此参数。\n></notice>","type":"string","required":false,"example":"PRODUCT","enum":["PRODUCT","DEVICE"]}}],"responses":{"200":{"schema":{"type":"object","properties":{"Code":{"description":"调用失败时，返回的错误码。更多信息，请参见[错误码](~~87387~~)。","type":"string","example":"iot.system.SystemException"},"ErrorMessage":{"description":"调用失败时，返回的出错信息。","type":"string","example":"系统异常"},"RequestId":{"description":"阿里云为该请求生成的唯一标识符。","type":"string","example":"E4C0FF92-2A86-41DB-92D3-73B60310D25E"},"Success":{"description":"表示是否调用成功。\n- **true**：调用成功。\n- **false**：调用失败。","type":"boolean","example":"true"}}}}},"errorCodes":{"400":[{"errorCode":"iot.prod.NotExistedProduct","errorMessage":"The specified product does not exist."},{"errorCode":"iot.system.SystemException","errorMessage":"An internal error occurred. Try again later."},{"errorCode":"iot.common.InvalidFormattedParameter","errorMessage":"The parameter format is invalid."},{"errorCode":"iot.common.QueryProductActionError","errorMessage":"query product info fail"},{"errorCode":"iot.rule.DataSourceNotExists","errorMessage":"data source not exist"},{"errorCode":"iot.rule.ItemExceedsLimit","errorMessage":"item exceeds limit"},{"errorCode":"iot.rule.DataSourceItemExists","errorMessage":"data source item exist"},{"errorCode":"iot.common.TooManyRequest","errorMessage":"Request frequency is too high"}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"Code\\\": \\\"iot.system.SystemException\\\",\\n  \\\"ErrorMessage\\\": \\\"系统异常\\\",\\n  \\\"RequestId\\\": \\\"E4C0FF92-2A86-41DB-92D3-73B60310D25E\\\",\\n  \\\"Success\\\": true\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<CreateDataSourceItemResponse>\\n<RequestId>E4C0FF92-2A86-41DB-92D3-73B60310D25E</RequestId>\\n<Success>true</Success>\\n</CreateDataSourceItemResponse>\",\"errorExample\":\"\"}]","title":"CreateDataSourceItem","summary":"调用该接口为规则引擎中数据源添加Topic。","description":"## 使用说明\n调用该接口前，请先创建数据源，具体操作，请参见[创建数据源的步骤1~步骤6](~~270932~~)；然后在物联网平台控制台对应实例下**消息转发 > 云产品流转**页面的**数据源**页签，查看**数据源ID**。\n\n><notice>对于开源MQTT托管形态产品和设备，及MQTT云网关产品和设备，**Topic**为自定义的消息Topic时，必须传入**ScopeType**和**ProductKey**。若**ScopeType**为**DEVICE**，还需传入**DeviceName**。\n></notice>\n\n## QPS限制\n单个阿里云账号调用该接口的每秒请求数（QPS）最大限制为10。\n\n> RAM用户共享阿里云账号配额。","requestParamsDescription":"调用API时，除了本文介绍的该API的特有请求参数，还需传入公共请求参数。公共请求参数说明，请参见[公共参数文档](~~30561~~)。","responseParamsDescription":" ","extraInfo":" "}