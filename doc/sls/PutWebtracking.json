{"summary":"通过 WebTracking 方式单次写入多条日志。","path":"/logstores/{logstoreName}/track","methods":["post"],"schemes":["http","https"],"security":[{"Anonymous":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free","abilityTreeCode":"9127","abilityTreeNodes":["FEATUREslsWY5SG2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstoreName","in":"path","schema":{"title":"A short description of struct","description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求消息体。","type":"object","properties":{"__topic__":{"description":"日志主题。","type":"string","required":false,"example":"topic"},"__source__":{"description":"日志来源。","type":"string","required":true,"example":"source"},"__logs__":{"description":"日志内容列表。每个元素为一个JSON对象，表示一条日志。\n> **说明**WebTracking采集的日志时间为日志到达服务端的时间，每条日志中无需设置__time__字段，如果存在该字段，将被服务端使用日志到达的时间覆盖。","type":"array","items":{"description":"日志内容列表。","type":"object","required":false,"additionalProperties":{"type":"string","description":"日志内容。","example":"{          \"key1\": \"value1\",          \"key2\": \"value2\"         }"}},"required":true},"__tags__":{"description":"日志标签。","type":"object","required":false,"additionalProperties":{"type":"string","description":"日志标签。","example":"{ \"tag1\": \"value1\", \"tag2\": \"value2\" }"}}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"通过WebTracking批量写入日志","description":"### 接口说明\n\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n\n- 适用于在网页或者客户端采集日志的场景。\n- 使用Web Tracking采集日志时，单个请求只能写入一条日志。更多信息，请参见[使用Web Tracking采集日志](~~31752~~)。\n- 针对日志量较大的场景，可以调用PutWebTracking接口将多条日志合并为一次请求。\n- 使用PutWebTracking接口写入日志时，需要先为Logstore打开Web Tracking开关。更多信息，请参见[使用Web Tracking采集日志](~~31752~~)。\n- 该接口不支持同时写入多个Topic的日志数据。\n- 使用该接口则表示该Logstore打开互联网匿名写入权限，没有经过有效鉴权（不需要AccessKey），可能产生脏数据。","requestParamsDescription":"仅支持如下三个请求头，在调用PutWebTracking接口时前两个为必选，格式和含义请参见公共请求参数文档。\n\n- x-log-apiversion: 0.6.0\n- x-log-bodyrawsize: 1234\n- x-log-compresstype: lz4\n\n如果发送的数据没有经过任何压缩，不需要指定x-log-compresstype。如果需要对数据压缩发送，当前仅支持lz4和Deflate算法，其分别对应的请求头为：`x-log-compresstype: lz4`或`x-log-compresstype: deflate`。详细数据压缩步骤，请参见[数据压缩](~~449460~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 400  | PostBodyInvalid  |  Fail to parse protobuf. | Protobuffer内容不合法，无法解析。  |\n| 400  |  PostBodyInvalid |  Body invalid error message. | 请求的Body不合法。  |\n|  400 |  PostBodyUncompressError |  Post body uncompressed fail. | 日志内容解压失败。  |\n|  400 |  PostBodyTooLarge |  Body size bodySize must little than 10485760. | 请求Body （压缩前）不能超过10MB。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"}