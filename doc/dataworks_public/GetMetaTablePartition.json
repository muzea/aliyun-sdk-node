{"methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"78269","abilityTreeNodes":["FEATUREdideE9XYA6"]},"parameters":[{"name":"PageNumber","in":"query","schema":{"description":"请求的数据页数，用于翻页。","type":"integer","format":"int32","required":false,"example":"1"}},{"name":"PageSize","in":"query","schema":{"description":"每页显示的条数，默认为10条，最大100条。","type":"integer","format":"int32","required":false,"example":"10"}},{"name":"TableGuid","in":"query","schema":{"description":"表的唯一标识。","type":"string","required":false,"docRequired":true,"example":"odps.engine_name.table_name"}},{"name":"ClusterId","in":"query","schema":{"description":"EMR集群的ID，仅当数据类型为EMR时，需要配置该参数。\n\n您可以登录[EMR的控制台](https://emr.console.aliyun.com/?spm=a2c4g.11186623.0.0.965cc5c2GeiHet#/cn-hangzhou)，获取集群ID。","type":"string","required":false,"example":"abc"}},{"name":"DatabaseName","in":"query","schema":{"description":"数据库的名称。仅当数据类型为EMR时，需要配置该参数。\n\n您可以调用[ListMetaDB](~~2780105~~)接口获取。","type":"string","required":false,"example":"abc"}},{"name":"TableName","in":"query","schema":{"description":"EMR的表名称。仅当数据类型为EMR时，需要配置该参数。\n\n您可以通过调用[GetMetaDBTableList](~~2780086~~)接口，获取表名称。","type":"string","required":false,"example":"abc"}},{"name":"DataSourceType","in":"query","schema":{"description":"数据类型，支持ODPS或者EMR。","type":"string","required":false,"example":"emr"}},{"name":"SortCriterion","in":"query","style":"json","schema":{"description":"表分区的排序逻辑。","type":"object","properties":{"SortField":{"description":"表分区的排序字段。您可通过name、modify_time排序。\n默认按照表分区的创建时间排序。","type":"string","required":false,"example":"name"},"Order":{"description":"表分区的排序顺序，支持使用asc、desc方式排序。默认使用desc。","type":"string","required":false,"example":"desc"}},"required":false}}],"responses":{"200":{"schema":{"description":"返回的数据结构。","type":"object","properties":{"HttpStatusCode":{"description":"HTTP状态码。","type":"integer","format":"int32","example":"200"},"ErrorMessage":{"description":"错误信息。","type":"string","example":"The connection does not exist."},"RequestId":{"description":"请求ID。","type":"string","example":"0bc1ec92159376"},"Success":{"description":"请求是否成功。","type":"boolean","example":"true"},"ErrorCode":{"description":"错误码。","type":"string","example":"Invalid.Tenant.ConnectionNotExists"},"Data":{"description":"业务数据。","type":"object","properties":{"PageNumber":{"description":"请求的数据页数，用于翻页。","type":"integer","format":"int32","example":"1"},"PageSize":{"description":"每页显示的条数，默认为10条，最大100条。","type":"integer","format":"int32","example":"10"},"TotalCount":{"description":"分区的总数。","type":"integer","format":"int64","example":"100"},"DataEntityList":{"description":"实例列表。","type":"array","items":{"description":"数据的结构。","type":"object","properties":{"PartitionPath":{"description":"分区的目录。","type":"string","example":"abc"},"DataSize":{"description":"分区的大小，单位为Byte。","type":"integer","format":"int64","example":"19"},"PartitionName":{"description":"分区的名称。","type":"string","example":"pt=20170614"},"Comment":{"description":"备注信息。","type":"string","example":"备注"},"ModifiedTime":{"description":"修改分区的时间，单位为毫秒。","type":"integer","format":"int64","example":"1590032868000"},"CreateTime":{"description":"创建分区的时间，单位为毫秒。","type":"integer","format":"int64","example":"1590032868000"},"RecordCount":{"description":"分区的数据量。","type":"integer","format":"int64","example":"233"},"PartitionType":{"description":"分区的类型。","type":"string","example":"abc"},"PartitionGuid":{"description":"分区的唯一标识。","type":"string","example":"odps.engine_name.table_name.pt=20170614"},"PartitionLocation":{"description":"Hive分区的地址。","type":"string","example":"abc"},"TableGuid":{"description":"表的唯一标识。","type":"string","example":"odps.engine_name.table_name"}}}}}}}}}},"errorCodes":{"400":[{"errorCode":"InvalidParameter.Meta.CommonError","errorMessage":"The specified parameter is invalid."},{"errorCode":"InvalidParameter.Meta.Illegal","errorMessage":"The app guid parameter is invalid."},{"errorCode":"InvalidParameter.Meta.IllegalDate","errorMessage":"The date format is invalid."},{"errorCode":"InvalidParameter.Meta.IllegalPageError","errorMessage":"The parameter for paging is invalid."},{"errorCode":"InvalidParameter.Meta.NotExist","errorMessage":"The object does not exist."},{"errorCode":"InternalError.Meta.NoCalcEngine","errorMessage":"An error occurred while retrieving the compute engine based on the MaxCompute project."}],"403":[{"errorCode":"Forbidden.Meta.NoTenant","errorMessage":"The user is not the owner of any tenants."},{"errorCode":"Forbidden.Access","errorMessage":"Access is forbidden. Please first activate DataWorks Enterprise Edition or Flagship Edition."}],"429":[{"errorCode":"Throttling.Api","errorMessage":"The request for this resource has exceeded your available limit."},{"errorCode":"Throttling.Api.Risk","errorMessage":"The request for this resource has exceeded your daily available limit."},{"errorCode":"Throttling.System","errorMessage":"The DataWorks system is busy. Try again later."},{"errorCode":"Throttling.User","errorMessage":"Your request is too frequent. Try again later."}],"500":[{"errorCode":"InternalError.System","errorMessage":"An internal system error occurred. Try again later."},{"errorCode":"InternalError.UserId.Missing","errorMessage":"An internal system error occurred. Try again later."},{"errorCode":"InternalError.Meta.TenantTimeOut","errorMessage":"Failed to connect to the interface network."},{"errorCode":"InternalError.Meta.Unknown","errorMessage":"An unknown error occurred while processing your request."}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"HttpStatusCode\\\": 200,\\n  \\\"ErrorMessage\\\": \\\"The connection does not exist.\\\",\\n  \\\"RequestId\\\": \\\"0bc1ec92159376\\\",\\n  \\\"Success\\\": true,\\n  \\\"ErrorCode\\\": \\\"Invalid.Tenant.ConnectionNotExists\\\",\\n  \\\"Data\\\": {\\n    \\\"PageNumber\\\": 1,\\n    \\\"PageSize\\\": 10,\\n    \\\"TotalCount\\\": 100,\\n    \\\"DataEntityList\\\": [\\n      {\\n        \\\"PartitionPath\\\": \\\"abc\\\",\\n        \\\"DataSize\\\": 19,\\n        \\\"PartitionName\\\": \\\"pt=20170614\\\",\\n        \\\"Comment\\\": \\\"备注\\\",\\n        \\\"ModifiedTime\\\": 1590032868000,\\n        \\\"CreateTime\\\": 1590032868000,\\n        \\\"RecordCount\\\": 233,\\n        \\\"PartitionType\\\": \\\"abc\\\",\\n        \\\"PartitionGuid\\\": \\\"odps.engine_name.table_name.pt=20170614\\\",\\n        \\\"PartitionLocation\\\": \\\"abc\\\",\\n        \\\"TableGuid\\\": \\\"odps.engine_name.table_name\\\"\\n      }\\n    ]\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<GetMetaTablePartitionResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <ErrorMessage>The connection does not exist.</ErrorMessage>\\n    <RequestId>0bc1ec92159376</RequestId>\\n    <Success>true</Success>\\n    <ErrorCode>Invalid.Tenant.ConnectionNotExists</ErrorCode>\\n    <Data>\\n        <PageNumber>1</PageNumber>\\n        <PageSize>10</PageSize>\\n        <TotalCount>100</TotalCount>\\n        <DataEntityList>\\n            <PartitionPath>abc</PartitionPath>\\n            <DataSize>19</DataSize>\\n            <PartitionName>pt=20170614</PartitionName>\\n            <Comment>备注</Comment>\\n            <ModifiedTime>1590032868000</ModifiedTime>\\n            <CreateTime>1590032868000</CreateTime>\\n            <RecordCount>233</RecordCount>\\n            <PartitionType>abc</PartitionType>\\n            <PartitionGuid>odps.engine_name.table_name.pt=20170614</PartitionGuid>\\n            <PartitionLocation>abc</PartitionLocation>\\n            <TableGuid>odps.engine_name.table_name</TableGuid>\\n        </DataEntityList>\\n    </Data>\\n</GetMetaTablePartitionResponse>\",\"errorExample\":\"\"}]","title":"获取表的分区列表","summary":"该接口用于获取表的分区列表。","description":"仅支持获取MaxCompute和EMR两种引擎表的分区列表。 对于EMR引擎，仅支持采用数据湖构建（Data Lake Formation）管理元数据的新版本数据湖集群和集群版本小于3.41.0或5.7.0的Hadoop集群。","requestParamsDescription":" ","responseParamsDescription":" ","extraInfo":" GetMetaTablePartition接口的使用示例Demo请参见[DataWorks OpenAPI示例](https://developer.aliyun.com/article/780879?groupCode=dataworks)。"}