{"summary":"注册实体关系，支持用户注册自定义的实体关系。","methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"178589","abilityTreeNodes":["FEATUREdideSYOMAV"]},"parameters":[{"name":"LineageRelationRegisterVO","in":"formData","style":"json","schema":{"description":"血缘注册结构体。","required":true,"$ref":"#/components/schemas/LineageRelationRegisterVO"}}],"responses":{"200":{"schema":{"description":"OpenApiMetaResultModel","type":"object","properties":{"HttpStatusCode":{"description":"HTTP状态码。","type":"integer","format":"int32","example":"200"},"ErrorMessage":{"description":"错误信息。","type":"string","example":"The entity of lineage not exist, xxx"},"RequestId":{"description":"请求的ID：用于定位日志、排查问题。","type":"string","example":"EE50E05E-028C-182B-9xxx"},"Success":{"description":"调用是否成功。取值如下：\n\n- true：调用成功。\n\n- false：调用失败。","type":"boolean","example":"true"},"ErrorCode":{"description":"错误码。","type":"string","example":"1010210001"},"LineageRelation":{"description":"血缘关系对象。","type":"object","properties":{"SrcEntityQualifiedName":{"description":"源实体唯一标识。","type":"string","example":"maxcompute-table.project.table"},"DestEntityQualifiedName":{"description":"目标实体唯一标识。","type":"string","example":"custom-report.month_stat_user"},"RelationshipGuid":{"description":"实体间血缘关系ID。","type":"string","example":"dfsldfdlsfdsaaaabbbb"}}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"HttpStatusCode\\\": 200,\\n  \\\"ErrorMessage\\\": \\\"The entity of lineage not exist, xxx\\\",\\n  \\\"RequestId\\\": \\\"EE50E05E-028C-182B-9xxx\\\",\\n  \\\"Success\\\": true,\\n  \\\"ErrorCode\\\": \\\"1010210001\\\",\\n  \\\"LineageRelation\\\": {\\n    \\\"SrcEntityQualifiedName\\\": \\\"maxcompute-table.project.table\\\",\\n    \\\"DestEntityQualifiedName\\\": \\\"custom-report.month_stat_user\\\",\\n    \\\"RelationshipGuid\\\": \\\"dfsldfdlsfdsaaaabbbb\\\"\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<RegisterLineageRelationResponse>\\n    <HttpStatusCode>200</HttpStatusCode>\\n    <ErrorMessage>The entity of lineage not exist, xxx</ErrorMessage>\\n    <RequestId>EE50E05E-028C-182B-9xxx</RequestId>\\n    <Success>true</Success>\\n    <ErrorCode>1010210001</ErrorCode>\\n    <LineageRelation>\\n        <SrcEntityQualifiedName>maxcompute-table.project.table</SrcEntityQualifiedName>\\n        <DestEntityQualifiedName>custom-report.month_stat_user</DestEntityQualifiedName>\\n        <RelationshipGuid>dfsldfdlsfdsaaaabbbb</RelationshipGuid>\\n    </LineageRelation>\\n</RegisterLineageRelationResponse>\",\"errorExample\":\"\"}]","title":"注册血缘关系","description":"本接口当前处于试用阶段。需要体验的用户可以提出申请，管理员加入试用名单后即可调用。","requestParamsDescription":"实体唯一标识格式：EntityType.EntityGuid\n\n```\n1：EntityType 标识实体类型\n    1.1 Dataworks上已有的实体类型\n        (1) maxcompute表：maxcompute-table\n        (2) mysql表：mysql-table\n        (3) emr表：emr-table \n        (4) holo表：holodb-table\n\n    1.2 用户自定义的实体类型： custom-xxx\n       根据用户需求，推荐使用如下类型\n        (1) 表：custom-table\n        (2) API：custom-api \n        (3) 应用：custom-app\n        (4) 报表： custom-report\n        (5) 数据集：custom-dataset\n        (6) 数据源：custom-datasource\n\n2: EntityGuid：在同一实体类型内部，唯一标识该实体的标识\n    用户自定义的实体可以根据需要自己定义唯一ID\n\n3: 实体举例：\n    3.1：Dataworks已有系统实体，可以在数据地图页面血缘图中看到\n        (1) maxcompute-table.project.tableName  表示maxcompute 表的唯一ID\n        (2) emr-table.kadfdfaccdd4ted   表示emr表的唯一ID\n    3.2：用自定义实体： 用户根据自己业务需求，自己定义出唯一Id，（50个字节以内）\n        (1) custom-api.listUser   表示自定义api实体，其唯一标识为listUser \n        (2) custom-table.db1.table2  标识自定义表实体，其唯一标识为 db1.table2\n```"}