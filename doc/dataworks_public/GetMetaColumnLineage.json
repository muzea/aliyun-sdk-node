{"methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"78258","abilityTreeNodes":["FEATUREdideSYOMAV"]},"parameters":[{"name":"ColumnGuid","in":"query","schema":{"description":"字段的唯一标识。","type":"string","required":false,"docRequired":true,"example":"odps.engine_name.table_name.column_name"}},{"name":"Direction","in":"query","schema":{"description":"字段的上下游方向：up表示上游，down表示下游。","type":"string","required":true,"docRequired":true,"example":"up"}},{"name":"PageNum","in":"query","schema":{"description":"请求的数据页数，用于翻页。","type":"integer","format":"int32","required":false,"example":"1"}},{"name":"PageSize","in":"query","schema":{"description":"每页显示的条数，默认为10条，最大100条。","type":"integer","format":"int32","required":false,"example":"10"}},{"name":"ClusterId","in":"query","schema":{"description":"EMR集群的ID，针对EMR情况。","type":"string","required":false,"example":"abc"}},{"name":"DatabaseName","in":"query","schema":{"description":"数据库的名称。","type":"string","required":false,"example":"abc"}},{"name":"TableName","in":"query","schema":{"description":"表名称。","type":"string","required":false,"example":"abc"}},{"name":"ColumnName","in":"query","schema":{"description":"字段名称。","type":"string","required":false,"example":"abc"}},{"name":"DataSourceType","in":"query","schema":{"description":"数据类型，包括odps或emr。","type":"string","required":false,"example":"emr"}}],"responses":{"200":{"schema":{"type":"object","properties":{"HttpStatusCode":{"description":"HTTP状态码。","type":"integer","format":"int32","example":"200"},"ErrorMessage":{"description":"错误信息。","type":"string","example":"The connection does not exist."},"RequestId":{"description":"请求ID。","type":"string","example":"0bc1ec92159376"},"Success":{"description":"请求是否成功。","type":"boolean","example":"true"},"ErrorCode":{"description":"错误码。","type":"string","example":"Invalid.Tenant.ConnectionNotExists"},"Data":{"description":"业务数据。","type":"object","properties":{"PageNum":{"description":"请求的数据页数，用于翻页。","type":"integer","format":"int32","example":"1"},"PageSize":{"description":"每页显示的条数，默认为10条，最大100条。","type":"integer","format":"int32","example":"10"},"TotalCount":{"description":"字段的总数。","type":"integer","format":"int64","example":"20"},"DataEntityList":{"description":"实例数据列表。","type":"array","items":{"type":"object","properties":{"ColumnGuid":{"description":"字段的唯一标识。","type":"string","example":"odps.engine_name.table_name.1"},"ColumnName":{"description":"字段的名称。","type":"string","example":"1"},"TableName":{"description":"表名","type":"string","example":"abc"},"DatabaseName":{"description":"数据库名称","type":"string","example":"abc"},"ClusterId":{"description":"emr集群ID","type":"string","example":"abc"}}}}}}}}}},"errorCodes":{"400":[{"errorCode":"Invalid.Meta.TableNotExist","errorMessage":"The table does not exist."},{"errorCode":"InvalidParameter.Meta.CommonError","errorMessage":"The specified parameter is invalid."},{"errorCode":"InvalidParameter.Meta.Illegal","errorMessage":"The app guid parameter is invalid."},{"errorCode":"InvalidParameter.Meta.IllegalDate","errorMessage":"The date format is invalid."},{"errorCode":"InvalidParameter.Meta.IllegalPageError","errorMessage":"The parameter for paging is invalid."},{"errorCode":"InvalidParameter.Meta.NotExist","errorMessage":"The object does not exist."}],"403":[{"errorCode":"Forbidden.Meta.NoTenant","errorMessage":"The user is not the owner of any tenants."},{"errorCode":"Forbidden.Access","errorMessage":"Access is forbidden. Please first activate DataWorks Enterprise Edition or Flagship Edition."}],"429":[{"errorCode":"Throttling.Api","errorMessage":"The request for this resource has exceeded your available limit."},{"errorCode":"Throttling.Api.Risk","errorMessage":"The request for this resource has exceeded your daily available limit."},{"errorCode":"Throttling.System","errorMessage":"The DataWorks system is busy. Try again later."},{"errorCode":"Throttling.User","errorMessage":"Your request is too frequent. Try again later."}],"500":[{"errorCode":"InternalError.System","errorMessage":"An internal system error occurred. Try again later."},{"errorCode":"InternalError.UserId.Missing","errorMessage":"An internal system error occurred. Try again later."},{"errorCode":"InternalError.Meta.NoCalcEngine","errorMessage":"An error occurred while retrieving the compute engine based on the MaxCompute project."},{"errorCode":"InternalError.Meta.TenantTimeOut","errorMessage":"Failed to connect to the interface network."},{"errorCode":"InternalError.Meta.Unknown","errorMessage":"An unknown error occurred while processing your request."}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"HttpStatusCode\\\": 200,\\n  \\\"ErrorMessage\\\": \\\"The connection does not exist.\\\",\\n  \\\"RequestId\\\": \\\"0bc1ec92159376\\\",\\n  \\\"Success\\\": true,\\n  \\\"ErrorCode\\\": \\\"Invalid.Tenant.ConnectionNotExists\\\",\\n  \\\"Data\\\": {\\n    \\\"PageNum\\\": 1,\\n    \\\"PageSize\\\": 10,\\n    \\\"TotalCount\\\": 20,\\n    \\\"DataEntityList\\\": [\\n      {\\n        \\\"ColumnGuid\\\": \\\"odps.engine_name.table_name.1\\\",\\n        \\\"ColumnName\\\": \\\"1\\\",\\n        \\\"TableName\\\": \\\"abc\\\",\\n        \\\"DatabaseName\\\": \\\"abc\\\",\\n        \\\"ClusterId\\\": \\\"abc\\\"\\n      }\\n    ]\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<RequestId>0bc1ec92159376</RequestId>\\n<HttpStatusCode>200</HttpStatusCode>\\n<Data>\\n    <TotalCount>20</TotalCount>\\n    <PageNum>1</PageNum>\\n    <PageSize>10</PageSize>\\n    <DataEntityList>\\n        <ColumnName>1</ColumnName>\\n        <TableName>abc</TableName>\\n        <ColumnGuid>odps.engine_name.table_name.1</ColumnGuid>\\n        <ClusterId>abc</ClusterId>\\n        <DatabaseName>abc</DatabaseName>\\n    </DataEntityList>\\n</Data>\\n<ErrorCode>Invalid.Tenant.ConnectionNotExists</ErrorCode>\\n<ErrorMessage>The connection does not exist.</ErrorMessage>\\n<Success>true</Success>\",\"errorExample\":\"\"}]","title":"获取字段的血缘关系","summary":"调用GetMetaColumnLineage获取字段的血缘关系。","requestParamsDescription":" ","responseParamsDescription":" ","extraInfo":" GetMetaColumnLineage接口的使用示例Demo请参见[DataWorks OpenAPI示例](https://developer.aliyun.com/article/780879?groupCode=dataworks)。"}