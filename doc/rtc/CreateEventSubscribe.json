{"methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"parameters":[{"name":"Users","in":"query","style":"repeatList","schema":{"description":"订阅的用户。","type":"array","items":{"description":"订阅哪些用户的消息，参数为空表示订阅该房间全部用户（包含主播和观众）。格式如下所示：\n\n```\nUsers.1=****\nUsers.2=****\n......\n```","type":"string","required":false,"example":"user1"},"required":false,"example":"user1","maxItems":64}},{"name":"Events","in":"query","style":"repeatList","schema":{"description":"订阅的事件。","type":"array","items":{"description":"订阅的事件，取值：\n\n- **ChannelEvent**：频道事件。\n- **UserEvent**：频道内用户事件。\n\n详细信息请参见以下表格说明。","type":"string","required":false,"example":"ChannelEvent"},"required":true,"example":"ChannelEvent","maxItems":16}},{"name":"AppId","in":"query","schema":{"description":"订阅的应用ID。","type":"string","required":true,"example":"9qb1****"}},{"name":"ChannelId","in":"query","schema":{"description":"订阅的频道ID。\n\n> 如果Users.N参数不为空，则此参数必填。","type":"string","required":false,"example":"123333"}},{"name":"CallbackUrl","in":"query","schema":{"description":"回调地址。回调内容请参见以下回调内容示例。","type":"string","required":true,"example":"http://****.com/callback"}},{"name":"ClientToken","in":"query","schema":{"description":"客户端创建订阅的幂等标识。","type":"string","required":true,"example":"123e4567-e89b-12d3-a456-42665544****"}},{"name":"NeedCallbackAuth","in":"query","schema":{"description":"是否开启回调鉴权，取值：\n\n- **true**：开启。\n- **fasle**（默认值）：关闭。\n\n详细信息请参见以下回调鉴权说明。","type":"boolean","required":false,"example":"false"}},{"name":"Role","in":"query","schema":{"description":"用户角色，取值：\n\n- **1**：订阅频道中的主播消息。\n- **2**：订阅频道中的观众消息。\n- **空或其他值**：不进行角色过滤，订阅频道中的所有角色的消息。","type":"integer","format":"int64","required":false,"example":"1"}}],"responses":{"200":{"schema":{"description":"返回结果。","type":"object","properties":{"SubscribeId":{"description":"创建的订阅ID。","type":"string","example":"ad53276431c****"},"RequestId":{"description":"请求ID。","type":"string","example":"760bad53276431c499e30dc36f6b26be"}}}}},"errorCodes":{"200":[{"errorCode":"ErrorIdempotent","errorMessage":"%s"}],"400":[{"errorCode":"ErrorAPIQueryRow","errorMessage":"%s"},{"errorCode":"ErrorAPINoAppId","errorMessage":"%s"},{"errorCode":"ErrorInvalidCallBackURL","errorMessage":"%s"},{"errorCode":"ErrorIdempotentParameterMismatch","errorMessage":"%s"}],"500":[{"errorCode":"InternalError","errorMessage":"%s"}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"SubscribeId\\\": \\\"ad53276431c****\\\",\\n  \\\"RequestId\\\": \\\"760bad53276431c499e30dc36f6b26be\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<CreateEventSubscribeResponse>\\n<RequestId>760bad53276431c499e30dc36f6b26be</RequestId>\\n<SubscribeId>ad53276431c****</SubscribeId>\\n</CreateEventSubscribeResponse>\",\"errorExample\":\"\"}]","title":"创建事件订阅","summary":"调用CreateEventSubscribe创建订阅房间消息的回调。","description":"# 使用说明\n本接口用于创建订阅房间消息的回调。例如：在创建回调时，您可以配置回调地址、事件类型等参数。\n# QPS限制\n本接口的单用户QPS限制为1000次/分钟。超过限制，API调用会被限流，这可能会影响您的业务，请合理调用。更多信息，请参见[QPS限制](~~341645~~)。","requestParamsDescription":"## CallBack\nRTC通过用户传入的CallbackUrl，回调用户的内容，示例如下所示：\n```\nRequest:\n\nPOST /callbackURL\n\nBody\n(x-www-form-urlencoded)\n\n{\n    \"MsgId\": \"消息ID\",\n    \"MsgTimestamp\": 12312324, // 消息发送时的Unix时间戳\n    \"SubscribeID\": \"订阅ID\",\n    \"AppId\":\"\",     // 产生该消息的appid \n    \"ChannelID\":\"\", // 产生该消息的频道\n    \"Contents\": [\n      {\n        \"Event\": \"UserEvent\",//订阅的事件：频道内用户事件\n        \"UserEvent\": {\n          \"UserId\": \"80331631628db0d1\",    // 用户ID\n          \"EventTag\": \"Publish\",    // 事件，包括Join, Leave, Publish, Unpublish, Roleupdate\n          \"SessionId\": \"0dr15rrnhkz0jnvz6o8sxo01hoondhu1\", // 产生该事件的SessionID\n          \"Timestamp\": 1609854786,    // 事件发生Unix 时间戳\n          \"Reason\": 1, // 入会、离会原因，仅Join事件有\n          \"Role\": 1, //  角色类型, 主播，观众\n          \"TerminalType\": 1, // 终端类型, win, android\n          \"UserType\":1, // 用户类型，native sdk, applete, webrtc\n          \"Medias\":[1,2,3] // 推流类型：用户推了哪些流\n        }\n      },\n      {\n        \"Event\": \"ChannelEvent\",//订阅的事件：频道事件\n        \"ChannelEvent\": {\n          \"ChannelId\": \"8888889999\",\n          \"EventTag\": \"Open\",   // 频道事件，包括开启与关闭Open, Close\n          \"Timestamp\": 1609854530 // 事件发生Unix 时间戳\n        }\n      }\n   ]\n}\n\nResponse \nHTTP STATUS 200\n```\n\n## UserEvent用户事件\n|参数|类型|是否必须|描述|\n|---|---|---|---|\n|UserId | string | 是 | 用户ID。 |\n|SessionId | string | 是 | 用户SessionID。 |\n|EventTag | string | 是 | 事件类型，取值：<br>- **Join**：入会。<br>- **Leave**：离会。<br>- **PublishVideo**：开始推视频流。<br>- **PublishAudio**：开始推音频流。<br>- **PublishScreen**：开始屏幕共享。<br>- **UnpublishVideo**：停止推视频流。<br>- **UnpublishAudio**：停止推音频流。<br>- **UnpublishScreen**：停止屏幕共享。<br>- **Roleupdate**：角色切换。 |\n|Timestamp | number | 是 | 事件发生的时间戳。 |\n|Reason | integer | 是 | 入会、离会原因（仅Join事件有），取值：<br>- **1**：正常入会、离会。<br>- **2**：重连入会（当前会中已有该用户实例，该用户再次入会）。<br>- **3**：跨频道转推。<br>- **4**：超时离会。<br>- **5**：用户启用新的会话，当前会话被挤下线。<br>- **6**：被踢出。<br>- **7**：频道解散。 |\n|Role | integer | 是 | 角色类型，取值：<br>- **1**：主播。<br>- **2**：观众。 |\n|TerminalType | integer | 是 | 终端类型，取值：<br>- **1**：Windows设备。<br>- **2**：Android设备。<br>- **3**：Mac设备。<br>- **4**：iOS设备。<br>- **5**：Linux设备。<br>- **6**：其他（只有Native SDK入会可以解析终端类型)。 |\n|UserType | integer | 是 | 用户类型，取值：<br>- **1**：Native SDK。<br>- **2**：WebRTC(非小程序，非Native都归为WebRTC)。<br>- **3**：小程序。 |\n|Medias | integer | 是 | 推流类型，取值：<br>- **1**：音频。<br>- **2**：视频。<br>- **3**：屏幕共享。 |\n\n## ChannelEvent频道事件\n|参数|类型|是否必须|描述|\n|---|---|---|---|\n|EventTag | string | 是 | 事件类型，取值：<br>- **Open**：会议开始。<br>- **Close**：会议结束。 |\n|Timestamp | number | 是 | 事件发生的时间戳。 |\n\n## 回调鉴权说明\n事件回调鉴权功能默认关闭，用户可在创建事件回调时启用鉴权。启用鉴权后，鉴权逻辑如下所示：\n\n- 阿里云音视频通信服务发起回调请求时在HTTP(S)请求头中包含`Ali-Rtc-Timestamp`和 `Ali-Rtc-Signature`字段，供回调消息接收服务端进行签名认证。`Ali-Rtc-Timestamp`值计算方式为：Ali-Rtc-Signature=MD5SUM(MD5CONTENT)。其中，MD5CONTENT=回调域名|Ali-Rtc-Timestamp取值|鉴权Key；回调域名指配置回调URL的域名，鉴权Key指用户创建AppId时生成的AppKey。\n- 回调消息接收服务端接收回调消息时，将回调域名、`Ali-Rtc-Timestamp`取值、鉴权Key进行拼接后计算MD5值，得到加密字符串，再将计算出的加密字符串与音视频通信服务发起的HTTP(S)请求头中的`Ali-Rtc-Signature`字段值进行对比，如果不一致，则请求非法。","responseParamsDescription":" ","extraInfo":" "}