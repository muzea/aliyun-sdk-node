{"summary":"工作流任务中包含多个节点，通过该接口获取节点的详细信息。","path":"/api/v1/pipelineruns/{PipelineRunId}/nodes/{NodeId}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"PipelineRunId","in":"path","schema":{"title":"run 的 id","description":"工作流任务的ID。如何获取工作流任务ID，请参见[ListPipelineRuns](~~438042~~)。","type":"string","required":true,"example":"flow-ebppc********5lwea"}},{"name":"NodeId","in":"path","schema":{"title":"node 的 id","description":"工作流任务中一个节点的ID。如何查看节点ID，请参见[ListPipelineRuns](~~438042~~)。","type":"string","required":true,"example":"node-wcs9z********27ps3"}},{"name":"Depth","in":"query","schema":{"title":"查询深度","description":"查询节点详细信息的深度（层数），当Depth为2时，将会返回该节点及其下一层的所有子节点的详细信息。","type":"integer","format":"int32","required":false,"example":"2"}},{"name":"Type","in":"query","schema":{"description":"节点类型，取值如下。\n* Logical（默认值）：表示逻辑节点，用户提交节点的都是逻辑节点。\n* Physical：表示物理节点，对应一个执行特定逻辑的容器的运行，逻辑节点在后台运行时会转换为物理节点。","type":"string","required":false,"example":"Logical"}},{"name":"TokenId","in":"query","schema":{"description":"被分享的工作流任务的ID。","type":"string","required":false,"example":"https://pai.console.aliyun.com/?regionId=cn-hangzhou&workspaceId=102******&mode=noSidebar#/paiflow/pipeline-runs/flow-6y7******?Token=eyJ0e******\n"}}],"responses":{"200":{"schema":{"title":"返回体结构","description":"返回体结构。","type":"object","properties":{"RequestId":{"title":"请求 id","description":"请求ID。\n\n","type":"string","example":"0a981ea816**********42244e7ba2"},"ApiVersion":{"title":"api 版本","description":"工作流定义的版本。\n\n","type":"string","example":"core/v1"},"Metadata":{"title":"node 的元信息","description":"节点的元信息。\n\n","type":"object","properties":{"NodeId":{"title":"节点 id","description":"节点的ID。\n\n","type":"string","example":"node-wcs9z********27ps3"},"Provider":{"title":"提供方","description":"节点所对应的工作流的提供方，通常情况下指代工作流的上传者（官方提供的工作流Provider为PAI）。","type":"string","example":"15577********904"},"Name":{"title":"名字","description":"节点的名称。","type":"string","example":"flow-ebppc********5lwea"},"Version":{"title":"版本","description":"节点所对应的工作流的版本。\n\n","type":"string","example":"v1"},"Identifier":{"title":"标识符","description":"节点所对应的工作流的标识名。\n\n","type":"string","example":"composite-pipeline"},"NodeType":{"title":"节点类型","description":"节点的类型，可能值：\n\n- Pod：具体运行的一个节点。\n- Dag：复合类型节点，本质是一个由子节点组成的Dag图。","type":"string","example":"Dag"},"RelatedNodeIds":{"title":"Alink逻辑节点所对应的物理节点ID / Alink物理节点所对应的逻辑节点ID","description":"Alink逻辑节点所对应的物理节点ID或Alink物理节点所对应的逻辑节点ID。","type":"array","items":{"description":"节点ID。\n\n","type":"string","example":"node-wcs9z********27ps3"}},"DisplayName":{"title":"展示名称","description":"节点的展示名称（可能会被修改）。\n\n","type":"string","example":"flow-ebppc********5lwea"}}},"Spec":{"title":"算法体","description":"节点的定义。","type":"object","properties":{"HasPipelines":{"title":"是否有子 pipeline","description":"该节点是否含有子节点，可能值：\n- true：该节点为复合类型节点，如果需要进一步查询其子节点信息，需要传入更深的Depth参数。\n- false：该节点为实际运行的节点。","type":"boolean","example":"true"},"Dependencies":{"title":"依赖","description":"节点与其他节点的依赖关系。\n\n","type":"array","items":{"description":"所依赖的其他节点对应工作流的名称。\n\n","type":"string","example":"\"single-node-sub1\""}},"Pipelines":{"title":"子 pipeline 列表","description":"子节点列表。\n\n\n","type":"array","items":{"description":"子节点的详细信息。\n\n","type":"object","example":"详细结构参见Pipeline相关接口描述。\n"}},"Inputs":{"description":"节点的输入信息。\n\n","type":"object","properties":{"Artifacts":{"description":"节点的输入产物列表。\t","type":"array","items":{"description":"节点的输入产物。\n\n","type":"object","example":"{\"Name\":\"input\",\"Value\":\"******\"}"}},"Parameters":{"description":"节点的输入参数列表。","type":"array","items":{"description":"节点的输入参数。","type":"object","example":"{\"Name\":\"inputTable\",\"Value\":\"******\"}"}}}},"Outputs":{"description":"节点的输出信息。\n\n","type":"object","properties":{"Artifacts":{"description":"节点的输出产物列表。\n\n","type":"array","items":{"description":"节点的输出产物。\n\n","type":"object","example":"{\"Name\":\"output\",\"Value\":\"******\"}"}},"Parameters":{"description":"节点的输出参数列表。\n\n","type":"array","items":{"description":"节点的输出参数。\n\n","type":"object","example":"{\"Name\":\"outputTable\",\"Value\":\"******\"}"}}}},"When":{"description":"节点运行的判断条件。\n- 如果运行条件返回为真，就执行该节点。\n- 如果运行条件返回为假，该节点被跳过，状态为Skipped。","type":"string","example":"”{{inputs.parameters.skip}} == false“"},"WithItems":{"description":"将工作流节点扩展为多个工作流节点。","type":"array","items":{"description":"数据集中的一项，会扩展为一个工作流节点。","type":"string","example":"abc"}},"WithParam":{"description":"指向一个参数，该参数的值是一个数组，数组的每一项会扩展为一个工作流节点。","type":"string","example":"\"{{pipelines.generate.outputs.result}}\""},"WithSequence":{"description":"指向一个数字序列，序列中的每一项会扩展为一个工作流节点。","type":"object","properties":{"Start":{"description":"数字序列的起始数字。","type":"integer","format":"int32","example":"1"},"End":{"description":"数字序列的结束数字。\n\n","type":"integer","format":"int32","example":"10"},"Format":{"description":"对数字序列的值进行格式化。","type":"string","example":"\"2020-05-%d\""}}},"Parallelism":{"description":"节点并行度上限。","type":"integer","format":"int32","example":"2"}}},"StatusInfo":{"title":"node 运行状态","description":"节点的执行状态信息。\n\n","type":"object","properties":{"FinishedAt":{"title":"结束时间","description":"节点执行的结束时间。\n\n","type":"string","example":"2021-10-15T10:40:54.000Z"},"StartedAt":{"title":"开始时间","description":"节点执行的开始时间。\n\n","type":"string","example":"2021-10-15T10:39:58.000Z"},"Status":{"title":"状态","description":"节点的运行状态，可能值：\n- Succeeded：运行成功。\n- Running：运行中。\n- Failed：运行失败。\n- Skipped：跳过（前序节点失败导致）。\n- ReadyToSchedule：准备运行（前序节点未完成导致）。\n- Unknown：未知。","type":"string","example":"Succeeded"},"Conditions":{"description":"节点的运行状况列表。","type":"array","items":{"description":"节点的详细运行状况。","type":"object","example":"{\"ArtifactArchived\": \"true\"}"}},"Progress":{"description":"节点的运行进度。","type":"string","example":"9/9"}}}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"0a981ea816**********42244e7ba2\\\",\\n  \\\"ApiVersion\\\": \\\"core/v1\\\",\\n  \\\"Metadata\\\": {\\n    \\\"NodeId\\\": \\\"node-wcs9z********27ps3\\\",\\n    \\\"Provider\\\": \\\"15577********904\\\",\\n    \\\"Name\\\": \\\"flow-ebppc********5lwea\\\",\\n    \\\"Version\\\": \\\"v1\\\",\\n    \\\"Identifier\\\": \\\"composite-pipeline\\\",\\n    \\\"NodeType\\\": \\\"Dag\\\",\\n    \\\"RelatedNodeIds\\\": [\\n      \\\"node-wcs9z********27ps3\\\"\\n    ],\\n    \\\"DisplayName\\\": \\\"flow-ebppc********5lwea\\\"\\n  },\\n  \\\"Spec\\\": {\\n    \\\"HasPipelines\\\": true,\\n    \\\"Dependencies\\\": [\\n      \\\"\\\\\\\"single-node-sub1\\\\\\\"\\\"\\n    ],\\n    \\\"Pipelines\\\": [\\n      {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      }\\n    ],\\n    \\\"Inputs\\\": {\\n      \\\"Artifacts\\\": [\\n        {\\n          \\\"Name\\\": \\\"input\\\",\\n          \\\"Value\\\": \\\"******\\\"\\n        }\\n      ],\\n      \\\"Parameters\\\": [\\n        {\\n          \\\"Name\\\": \\\"inputTable\\\",\\n          \\\"Value\\\": \\\"******\\\"\\n        }\\n      ]\\n    },\\n    \\\"Outputs\\\": {\\n      \\\"Artifacts\\\": [\\n        {\\n          \\\"Name\\\": \\\"output\\\",\\n          \\\"Value\\\": \\\"******\\\"\\n        }\\n      ],\\n      \\\"Parameters\\\": [\\n        {\\n          \\\"Name\\\": \\\"outputTable\\\",\\n          \\\"Value\\\": \\\"******\\\"\\n        }\\n      ]\\n    },\\n    \\\"When\\\": \\\"”{{inputs.parameters.skip}} == false“\\\",\\n    \\\"WithItems\\\": [\\n      \\\"abc\\\"\\n    ],\\n    \\\"WithParam\\\": \\\"\\\\\\\"{{pipelines.generate.outputs.result}}\\\\\\\"\\\",\\n    \\\"WithSequence\\\": {\\n      \\\"Start\\\": 1,\\n      \\\"End\\\": 10,\\n      \\\"Format\\\": \\\"\\\\\\\"2020-05-%d\\\\\\\"\\\"\\n    },\\n    \\\"Parallelism\\\": 2\\n  },\\n  \\\"StatusInfo\\\": {\\n    \\\"FinishedAt\\\": \\\"2021-10-15T10:40:54.000Z\\\",\\n    \\\"StartedAt\\\": \\\"2021-10-15T10:39:58.000Z\\\",\\n    \\\"Status\\\": \\\"Succeeded\\\",\\n    \\\"Conditions\\\": [\\n      {\\n        \\\"ArtifactArchived\\\": \\\"true\\\"\\n      }\\n    ],\\n    \\\"Progress\\\": \\\"9/9\\\"\\n  }\\n}\",\"type\":\"json\"}]","title":"获取工作流任务节点信息\t","description":"PAIFlow支持复合形式的工作流，这些工作流在运行时也会体现为复合形式的节点。想要获取到这类节点的详细信息，可以传入Depth参数（默认值为2），可以递归地获取到所查询节点及其内含有的Depth层数的子节点的详细信息。\n\n工作流的每次运行会存在一个虚拟的根节点，这个根节点可以通过GetRun接口返回获取。调用GetNode接口查询该根节点，可以获取到对应运行的所有节点的详细信息及其组织结构。"}