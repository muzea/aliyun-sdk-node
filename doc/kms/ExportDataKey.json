{"methods":["post","get"],"schemes":["https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"CiphertextBlob","in":"query","schema":{"description":"主密钥（CMK）加密的数据密钥的密文。","type":"string","required":true,"docRequired":true,"example":"ODZhOWVmZDktM2QxNi00ODk0LWJkNGYtMWZjNDNmM2YyYWJmS7FmDBBQ0BkKsQrtRnidtPwirmDcS0ZuJCU41xxAAWk4Z8qsADfbV0b+i6kQmlvj79dJdGOvtX69Uycs901q********"}},{"name":"EncryptionContext","in":"query","style":"json","schema":{"description":"key/value的JSON字符串。EncryptionContext是使用CMK加密数据密钥时传入的加密上下文，详情请参见[EncryptionContext说明](~~42975~~)。","type":"object","required":false,"example":"{\"Example\":\"Example\"}"}},{"name":"PublicKeyBlob","in":"query","schema":{"description":"Base64格式的公钥。","type":"string","required":true,"docRequired":true,"example":"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAndKfC2ReLL2+y8a0+ZBBeAft/uBYo86GZiYJuflqgUzKxpyuvlo3uQkBv6b+nx+0tz8g8v7GhpPWMSW5L9mNHYsvYFsa7jTxsYdt17yj6GlUHPuMIs8hr5qbwl38IHU1iIa7nYWwE2fb3ePOvLDACRJVgGpU0yxioW80d2QD+9aU4jF5dlAahcfgsNzo2CXzCUc1+xbmNuq7Rp+H9VJB9dyYOwqnW3RhOLBo21FzpORapf0UiRlrHRpk1V6ez+aE1dofaYh/9bh0m6ioxj7j5hpZbWccuEZTMBKd+cbuBkRhJzc6Tti6qwZbDiu4fUwbZS0Tqpuo1UadiyxMW********"}},{"name":"WrappingKeySpec","in":"query","schema":{"description":"PublicKeyBlob的密钥类型。密钥类型详情，请参见[非对称密钥简介](~~148147~~)。  \n取值：\n\n- RSA_2048\n- EC_SM2  \n  \n","type":"string","required":true,"docRequired":true,"example":"RSA_2048"}},{"name":"WrappingAlgorithm","in":"query","schema":{"description":"使用PublicKeyBlob所指定的公钥，加密（Wrap）数据密钥时的加密算法。算法详情，请参见[AsymmetricDecrypt](~~148130~~)。  \n取值：\n\n- RSAES_OAEP_SHA_256\n- RSAES_OAEP_SHA_1\n- SM2PKE  \n  \n","type":"string","required":true,"docRequired":true,"example":"RSAES_OAEP_SHA_256"}}],"responses":{"200":{"schema":{"type":"object","properties":{"KeyVersionId":{"description":"用于解密传入的数据密钥密文的密钥版本标识符。","type":"string","example":"2ab1a983-7072-4bbc-a582-584b5bd8****"},"KeyId":{"description":"解密传入的数据密钥密文使用的主密钥ID。  \n主密钥的全局唯一标识符。","type":"string","example":"202b9877-5a25-46e3-a763-e20791b5****"},"RequestId":{"description":"请求ID。","type":"string","example":"4bd560a1-729e-45f1-a3d9-b2a33d61046b"},"ExportedDataKey":{"description":"公钥加密保护导出的数据密钥。","type":"string","example":"BQKP+1zK6+ZEMxTP5qaVzcsgXtWplYBKm0NXdSnB5FzliFxE1bSiu4dnEIlca2JpeH7yz1/S6fed630H+hIH6DoM25fTLNcKj+mFB0Xnh9m2+HN59Mn4qyTfcUeadnfCXSWcGBouhXFwcdd2rJ3n337bzTf4jm659gZu3L0i6PLuxM9p7mqdwO0cKJPfGVfhnfMz+f4alMg79WB/NNyE2lyX7/qxvV49ObNrrJbKSFiz8Djocaf0IESNLMbfYI5bXjWkJlX92DQbKhibtQW8ZOJ//ZC6t0AWcUoKL6QDm/dg5koQalcleRinpB+QadFm894sLbVZ9+N4GVs*******"}}}}},"errorCodes":{"400":[{"errorCode":"InvalidParameter","errorMessage":"The specified parameter is not valid."}],"404":[{"errorCode":"InvalidAccessKeyId.NotFound","errorMessage":"The Access Key ID provided does not exist in our records."}],"500":[{"errorCode":"InternalFailure","errorMessage":"Internal Failure."}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"KeyVersionId\\\": \\\"2ab1a983-7072-4bbc-a582-584b5bd8****\\\",\\n  \\\"KeyId\\\": \\\"202b9877-5a25-46e3-a763-e20791b5****\\\",\\n  \\\"RequestId\\\": \\\"4bd560a1-729e-45f1-a3d9-b2a33d61046b\\\",\\n  \\\"ExportedDataKey\\\": \\\"BQKP+1zK6+ZEMxTP5qaVzcsgXtWplYBKm0NXdSnB5FzliFxE1bSiu4dnEIlca2JpeH7yz1/S6fed630H+hIH6DoM25fTLNcKj+mFB0Xnh9m2+HN59Mn4qyTfcUeadnfCXSWcGBouhXFwcdd2rJ3n337bzTf4jm659gZu3L0i6PLuxM9p7mqdwO0cKJPfGVfhnfMz+f4alMg79WB/NNyE2lyX7/qxvV49ObNrrJbKSFiz8Djocaf0IESNLMbfYI5bXjWkJlX92DQbKhibtQW8ZOJ//ZC6t0AWcUoKL6QDm/dg5koQalcleRinpB+QadFm894sLbVZ9+N4GVs*******\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<ExportDataKeyResponse>\\n    <KeyVersionId>2ab1a983-7072-4bbc-a582-584b5bd8****</KeyVersionId>\\n    <KeyId>202b9877-5a25-46e3-a763-e20791b5****</KeyId>\\n    <RequestId>4bd560a1-729e-45f1-a3d9-b2a33d61046b</RequestId>\\n    <ExportedDataKey>BQKP+1zK6+ZEMxTP5qaVzcsgXtWplYBKm0NXdSnB5FzliFxE1bSiu4dnEIlca2JpeH7yz1/S6fed630H+hIH6DoM25fTLNcKj+mFB0Xnh9m2+HN59Mn4qyTfcUeadnfCXSWcGBouhXFwcdd2rJ3n337bzTf4jm659gZu3L0i6PLuxM9p7mqdwO0cKJPfGVfhnfMz+f4alMg79WB/NNyE2lyX7/qxvV49ObNrrJbKSFiz8Djocaf0IESNLMbfYI5bXjWkJlX92DQbKhibtQW8ZOJ//ZC6t0AWcUoKL6QDm/dg5koQalcleRinpB+QadFm894sLbVZ9+N4GVs*******</ExportedDataKey>\\n</ExportDataKeyResponse>\",\"errorExample\":\"\"}]","title":"使用传入的公钥加密导出数据密钥","summary":"调用ExportDataKey接口使用传入的公钥加密导出数据密钥。","description":"### 注意事项\n\n- 非KMS实例中的密钥：进行密码运算时，仅支持通过阿里云SDK调用OpenAPI。\n\n- KMS实例中的密钥：进行密码运算时，支持如下两种方式。\n\n  - 方式一（推荐）：通过KMS实例SDK调用KMS实例API。详细介绍，请参见[KMS实例SDK](~~601593~~)、[KMS实例API](~~601485~~)。\n  - 方式二：通过阿里云SDK调用OpenAPI，但认证方式仅支持可信实体为阿里云服务的RAM角色。详细信息，请参见[创建可信实体为阿里云服务的RAM角色](~~116800~~)。\n\n### QPS限制\n本接口的单用户QPS限制为750次/秒。超过限制，API调用将会被限流，这可能影响您的业务，请合理调用。\n\n\n### 详细说明\n调用[GenerateDataKeyWithoutPlaintext](~~134043~~)获取主密钥（CMK）加密保护的数据密钥。当您需要将数据密钥分发到其它地域（Region）或者密码模块时，您可以调用ExportDataKey接口，返回指定公钥加密数据密钥的密文。\n\n将公钥加密数据密钥的密文，导入到公钥对应私钥所在的密码模块，可实现KMS到密码模块的密钥分发，保障了数据密钥分发过程的安全性。该密钥导入到密码模块后，可用于实现相应数据的加解密运算。","requestParamsDescription":" ","responseParamsDescription":" ","extraInfo":" "}