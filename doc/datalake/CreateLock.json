{"summary":"创建一个指定的元数据锁。","path":"/api/metastore/catalogs/databases/tables/locks","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"readAndWrite","deprecated":false,"systemTags":{},"parameters":[{"name":"Body","in":"body","style":"json","schema":{"title":"body","description":"body","type":"object","properties":{"LockObjList":{"title":"LockObjList","description":"LockObjList","type":"array","items":{"required":false,"$ref":"#/components/schemas/LockObj"},"required":false,"example":"{\"databaseName\":\"db\",\"tableName\":\"test\"}"}},"required":false}}],"responses":{"200":{"schema":{"title":"lock response","description":"lock response","type":"object","properties":{"Code":{"title":"Code","description":"Code","type":"string","example":"OK"},"Message":{"title":"Message","description":"Message","type":"string","example":"."},"RequestId":{"title":"RequestId","description":"RequestId","type":"string","example":"73201200-4C1A-4FEF-BD6B-C0DA7994FFA2"},"Success":{"title":"Success","description":"Success","type":"boolean","example":"True"},"LockStatus":{"description":"状态描述","example":"{\"lockId\":12323,\"lockStatus\":\"ACQUIRED\"}","$ref":"#/components/schemas/LockStatus"}}}},"5XX":{}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"Code\\\": \\\"OK\\\",\\n  \\\"Message\\\": \\\".\\\",\\n  \\\"RequestId\\\": \\\"73201200-4C1A-4FEF-BD6B-C0DA7994FFA2\\\",\\n  \\\"Success\\\": true,\\n  \\\"LockStatus\\\": {\\n    \\\"LockId\\\": 0,\\n    \\\"LockState\\\": \\\"\\\"\\n  }\\n}\",\"type\":\"json\"}]","title":"创建元数据锁","requestParamsDescription":"1. 当前LockObjList只支持size为1，也就是只能获取一个对象锁\n2. 当前LockObj中只支持table锁，目前不支持partition级别的锁","responseParamsDescription":"- code：错误码\n- message：错误信息\n- requestId：标记当前请求唯一id\n- Success：true/false，判定请求是否成功\n- LockStatus：如果success，该字段有值，否则为空。LockStatus中有两个字段：lockId、Lockstate，如果lockstate为Acquired，那么lockid有值，否则为空","extraInfo":"****获取到lockid之后，如何在createtable、update table使用该lock？**\n\n下面以CreateTable接口为例，需要在header中把lock获取的lockid传递进去，这样才能使用lock。\n\n> 另外需要注意，lock有事务语义，只有传入lock，按照事务隔离性才能获取当前事务的状态，否则看到到是事务提交前的状态。\n\n> 比如一个请求对表已经加了lock，同时delete了改表，但是如果事务没有提交（也就是没有unlock），这个时候又来了一个请求，要去createtable，如果没有带上lock，那么发现表示存在的，因为看到的是事务提交之前的状态，所以创建失败。如果createtable，带上这个lock，那么就进入事务中，就可以看到这个表已经delete了，那么createtable就能创建成功。\n\n\n```\nCreateTableRequest request = new CreateTableRequest();\nrequest.catalogId = catalogId;\nrequest.databaseName = databaseName;\nrequest.tableInput = table;\n\nRuntimeOptions runtime = new RuntimeOptions();\nMap<String, String> headers = new HashMap();\n\n//需要在建表或者update的表中的header中设置lockid\nheaders.put(\"metastore-lock-id\", String.valueOf(lockId));\n\nCreateTableResponseBody response = client.createTableWithOptions(request, headers, runtime).body;\nreturn new ResultModel<>(response.success, response.code, response.message,\n        response.requestId);\n```\n"}