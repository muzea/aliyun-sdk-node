{"summary":"在指定租户下创建一个访问数据库的账号。","methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"create"},"parameters":[{"name":"InstanceId","in":"formData","schema":{"title":"Oceanbase集群ID。","description":"OceanBase 集群 ID。","type":"string","required":true,"docRequired":true,"example":"ob317v4uif****"}},{"name":"TenantId","in":"formData","schema":{"title":"租户ID。","description":"租户 ID。","type":"string","required":true,"docRequired":true,"example":"t4pnum****"}},{"name":"UserName","in":"formData","schema":{"title":"数据库账号名称。 不能使用某些预留关键字，如 SYS、root等。","description":"数据库账号名称。  \n不能使用某些预留关键字，如 SYS、root 等。","type":"string","required":true,"docRequired":true,"example":"pay_test"}},{"name":"UserType","in":"formData","schema":{"title":"数据库账户的类型 Admin：超级账户 Normal：普通账户","description":"用户类型。  \n\n- Normal：普通账户。\n- Admin：超级账户。\n- ReadonlyAccount：只读账户，仅 MySQL 租户包含只读账户。","type":"string","required":true,"docRequired":true,"example":"Normal"}},{"name":"UserPassword","in":"formData","schema":{"title":"数据库账号访问密码。 必须包含大写英文字符、小写英文字符、数字、特殊字符占三种，长度为 10-32 位； 特殊字符为：!@#$%^&* ()_ +-=","description":"数据库账号访问密码。\n\n> <br>必须包含大写英文字符、小写英文字符、数字、特殊字符占三种，长度为 10-32 位； 特殊字符为：!@#$%^\\*()_+-=","type":"string","required":true,"docRequired":true,"example":"!Aliyun4Oceanbase"}},{"name":"Roles","in":"formData","schema":{"title":"用户的角色信息。 对于Oracle模式：无需填写。 对于MySQL模式：超级账户默认为ALL PRIVILEGES，无需填写。 普通用户填写账户的信息，其为Json格式的字符串，默认为一个数组，数组内包含schema（Oracle模式）或Database（MySQL模式)信息和角色信息（Role）。 角色包含以下几类： 读写权限（ReadWrite）：ALL PRIVILEGES ； 只读权限（ReadOnly）：SELECT DDL权限（DDL）：CREATE,DROP,ALTER,SHOW VIEW,CREATE VIEW DML权限：SELECT,INSERT,UPDATE,DELETE,SHOW VIEW； DML权限（DML）：SELECT,INSERT,UPDATE,DELETE,SHOW VIEW。","description":"用户的角色信息。  \n普通用户填写账户的信息，其为 JSON 格式的字符串，默认为一个数组，数组内包含 Database（MySQL 模式）信息和角色信息（Role）。角色包含以下几类：  \n  - 读写权限（ReadWrite）：ALL PRIVILEGES。\n  - 只读权限（ReadOnly）：SELECT。\n  - DDL 权限（DDL）：CREATE,DROP,ALTER,SHOW VIEW,CREATE VIEW。\n- DML 权限：SELECT, INSERT, UPDATE, DELETE, SHOW VIEW。\n- DML 权限（DML）：SELECT,INSERT,UPDATE,DELETE,SHOW VIEW。\n\n> <br><ul><li> Oracle 模式：无需填写。</li><li> MySQL 模式：超级账户默认为 ALL PRIVILEGES，无需填写。  </li></ul>","type":"string","required":false,"docRequired":false,"example":"[{\"Database\":\"oceanbase1\",\"Role\":\"readwrite\"},{\"Database\":\"oceanbase2\",\"Role\":\"readonly\"}]"}},{"name":"Description","in":"formData","schema":{"title":"数据库描述信息。","description":"数据库描述信息。","type":"string","required":false,"example":"this is a test database"}},{"name":"EncryptionType","in":"formData","schema":{"title":"加密方式。","description":"加密方式。","type":"string","required":false,"example":"RAS"}}],"responses":{"200":{"schema":{"title":"请求的返回结果","description":"请求的返回结果。","type":"object","properties":{"RequestId":{"title":"请求ID。","description":"请求 ID。","type":"string","example":"EE205C00-30E4-****-****-87E3A8A2AA0C"},"TenantUser":{"description":"租户中的数据库账号列表信息。","type":"object","properties":{"UserType":{"description":"用户类型。\n- Normal：普通账户。\n- Admin：超级账户。\n- ReadonlyAccount：只读账户，仅 MySQL 租户包含只读账户。","type":"string","example":"Normal"},"Roles":{"title":"账户对应的角色权限信息","description":"账户对应的角色权限信息","type":"array","items":{"type":"object","properties":{"Database":{"title":"数据库名称","description":"数据库名称。","type":"string","example":"db_pay1"},"Role":{"title":"拥有的角色。 对于Oracle模式，角色为schema级别，其可分为 - ReadWrite：读写权限，包括CREATE TABLE CREATE VIEW CREATE PROCEDURE CREATE SYNONYM CREATE SEQUENCE CREATE TRIGGER CREATE TYPE CREATE SESSION EXECUTE ANY PROCEDURE CREATE ANY OUTLINE ALTER ANY OUTLINE DROP ANY OUTLINE CREATE ANY PROCEDURE ALTER ANY PROCEDURE DROP ANY PROCEDURE CREATE ANY SEQUENCE ALTER ANY SEQUENCE DROP ANY SEQUENCE CREATE ANY TYPE ALTER ANY TYPE DROP ANY TYPE SYSKM CREATE ANY TRIGGER ALTER ANY TRIGGER DROP ANY TRIGGER CREATE PROFILE ALTER PROFILE DROP PROFILE； - ReadOnly：只读权限，SELECT\n对于MySQL模式，角色为数据库（Database）级别，其有以下几类： - ReadWrite：读写权限，包括ALL PRIVILEGES； - ReadOnly：只读权限，包括SELECT - DDL: DDL权限，包括CREATE,DROP,ALTER,SHOW VIEW,CREATE VIEW - DML: DML权限，包括SELECT,INSERT,UPDATE,DELETE,SHOW VIEW。\n* 另外Oracle账户对自己的schema有默认的读写权限，这里不会列出。","description":"拥有的角色。 \n- Oracle 模式，角色为 Schema 级别，其可分为 \n   - ReadWrite：读写权限，包括 CREATE TABLE, CREATE VIEW, CREATE PROCEDURE, CREATE SYNONYM, CREATE SEQUENCE, CREATE TRIGGER, CREATE TYPE, CREATE SESSION EXECUTE ANY PROCEDURE, CREATE ANY OUTLINE, ALTER ANY OUTLINE, DROP ANY OUTLINE, CREATE ANY PROCEDURE, ALTER ANY PROCEDURE, DROP ANY PROCEDURE, CREATE ANY SEQUENCE, ALTER ANY SEQUENCE, DROP ANY SEQUENCE, CREATE ANY TYPE, ALTER ANY TYPE, DROP ANY TYPE SYSKM, CREATE ANY TRIGGER, ALTER ANY TRIGGER, DROP ANY TRIGGER, CREATE PROFILE, ALTER PROFILE, DROP PROFILE；\n  - ReadOnly：只读权限，SELECT。\n- MySQL 模式，角色为数据库（Database）级别，其包括以下几类：\n   - ReadWrite：读写权限，包括 ALL PRIVILEGES。\n   - ReadOnly：只读权限，包括 SELECT。\n   - DDL：DDL 权限，包括 CREATE, DROP, ALTER, SHOW VIEW, CREATE VIEW。\n   - DML：DML 权限，包括 SELECT, INSERT, UPDATE, DELETE, SHOW VIEW。\n> Oracle 账户对自己的 Schema 有默认的读写权限，此处不会列出。","type":"string","example":"ReadOnly"}}},"example":""},"UserStatus":{"title":"数据库账号的状态。 - Locked：锁定 - ONLINE：解锁 创建完的账户默认为ONLINE状态","description":"数据库账号的状态。\n- LOCKED：锁定。\n- ONLINE：解锁。\n> 创建完成的账户默认状态为 ONLINE。","type":"string","example":"ONLINE"},"UserName":{"title":"数据库账号名称。","description":"数据库账号名称。","type":"string","example":"pay_test"}}}}}}},"errorCodes":{"500":[{"errorCode":"InternalError","errorMessage":"The request processing has failed due to some unknown error."}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"EE205C00-30E4-****-****-87E3A8A2AA0C\\\",\\n  \\\"TenantUser\\\": {\\n    \\\"UserType\\\": \\\"Normal\\\",\\n    \\\"Roles\\\": [\\n      {\\n        \\\"Database\\\": \\\"db_pay1\\\",\\n        \\\"Role\\\": \\\"ReadOnly\\\"\\n      }\\n    ],\\n    \\\"UserStatus\\\": \\\"ONLINE\\\",\\n    \\\"UserName\\\": \\\"pay_test\\\"\\n  }\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<CreateTenantUserResponse>\\n    <TenantUser>\\n        <UserType>Normal</UserType>\\n        <Roles>\\n            <Database>db_pay1</Database>\\n            <Role>ReadOnly</Role>\\n        </Roles>\\n        <UserStatus>ONLINE</UserStatus>\\n        <UserName>pay_test</UserName>\\n    </TenantUser>\\n    <RequestId>EE205C00-30E4-XXXX-XXXX-87E3A8A2AA0C</RequestId>\\n</CreateTenantUserResponse>\",\"errorExample\":\"\"}]","title":"创建租户用户","requestParamsDescription":"有关请求 Endpoint 列表，请参见 API 参考 > 调用方式。"}