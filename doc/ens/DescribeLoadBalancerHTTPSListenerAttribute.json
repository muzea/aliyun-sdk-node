{"summary":"调用DescribeLoadBalancerHTTPSListenerAttribute查询HTTPS监听配置。","methods":["get","post"],"schemes":["http","https"],"security":[{"AK":[]}],"deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"ListenerPort","in":"query","schema":{"description":"需要查询的监听端口。取值：**1**~**65535**。","type":"integer","format":"int32","required":true,"maximum":"65535","minimum":"0","example":"443"}},{"name":"LoadBalancerId","in":"query","schema":{"description":"负载均衡实例的ID。\n\n","type":"string","required":true,"example":"lb-5qoxu2rsr0ytanpn4r3i****"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"RequestId":{"title":"Id of the request","description":"请求ID。","type":"string","example":"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E"},"ListenerPort":{"description":"负载均衡实例前端使用的端口。取值：**1**~**65535**。","type":"integer","format":"int32","example":"8080"},"Status":{"description":"当前监听的状态。取值：\n\n- **Running**：正常运行。\n- **Stopped**：运行停止。\n- **Starting**：启动中。\n- **Configuring**：配置中。\n- **Stopping**：运行停止中。\n","type":"string","example":"Running"},"Bandwidth":{"description":"负载均衡带宽峰值，默认值为-1（表示不限速）。","type":"integer","format":"int32","example":"50"},"Scheduler":{"description":"调度算法。取值：\n- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。\n- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。\n- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。\n- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。\n- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。\n- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。\n","type":"string","example":"wrr"},"HealthCheck":{"description":"是否开启健康检查。取值：\n- **on**：开启。\n- **off**：关闭。\n","type":"string","example":"on"},"HealthyThreshold":{"description":"健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**。\n> HealthCheck值为on时才会有效。\n","type":"integer","format":"int32","example":"3"},"UnhealthyThreshold":{"description":"健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**。\n> HealthCheck值为on时才会有效。\n","type":"integer","format":"int32","example":"3"},"HealthCheckTimeout":{"description":"接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。\n- 默认值：5秒。\n- 取值：**1**~**300**。\n- 单位：秒。\n>- HealthCheck值为on时才会有效。\n>- 如果HealthCHeckTimeout的值小于HealthCheckInterval的值，则HealthCHeckTimeout无效，超时时间为HealthCheckInterval的值。","type":"integer","format":"int32","example":"5"},"HealthCheckConnectPort":{"description":"健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。\n> HealthCheck值为on时才会有效。\n","type":"integer","format":"int32","example":"9902"},"HealthCheckInterval":{"description":"健康检查的时间间隔。取值：**1**~**50**，单位：秒。\n\n> 在HealthCheck值为on时才会有效。\n","type":"integer","format":"int32","example":"5"},"Description":{"description":"设置监听的描述信息。长度限制为**1**~**80**个字符。","type":"string","example":"abc"},"ListenerForward":{"description":"是否开启HTTP至HTTPS的转发。取值：\n\n- on：开启。\n- off：关闭。\n","type":"string","example":"off"},"ForwardPort":{"description":"HTTP至HTTPS的监听转发端口。\n\n","type":"integer","format":"int32","example":"0"},"RequestTimeout":{"description":"指定请求超时时间，默认值：60秒，取值：**1**~**180**，单位：秒。\n> 在超时时间内后端服务器一直没有响应，负载均衡将放弃等待，给客户端返回HTTP的504错误码。\n","type":"integer","format":"int32","example":"60"},"IdleTimeout":{"description":"指定连接空闲超时时间，默认值：15秒，取值：**1**~**60**，单位：秒。\n> 在超时时间内一直没有访问请求，负载均衡会暂时中断当前连接，直到一下次请求来临时重新建立新的连接。\n","type":"integer","format":"int32","example":"15"},"HealthCheckHttpCode":{"description":"健康检查正常时的HTTP状态码。取值：\n\n- **http_2xx**（默认值）。\n- **http_3xx**。\n- **http_4xx**。\n- **http_5xx**。\n\n> HealthCheck值为on时才会有效。\n","type":"string","example":"http_2xx"},"HealthCheckDomain":{"description":"用于健康检查的域名。\n\n> 在HealthCheck值为on时才会有效。\n","type":"string","example":"www.test.com"},"HealthCheckURI":{"description":"用于健康检查的URI。长度限制为**1**~**80**。\n- URL不能只有`/`，但必须以`/`开头。\n- HealthCheck值为on时才会有效。","type":"string","example":"/checkpreload.htm"},"ServerCertificateId":{"description":"服务器证书的ID。\n\n","type":"string","example":"60276**"},"HealthCheckMethod":{"description":"监听HTTP类型健康检查的健康检查方法。取值：\n\n- **head**：只请求页面的首部。\n- **get**：请求指定的页面信息，并返回实体主体。\n\n> HealthCheck值为on时才会有效。\n","type":"string","example":"head"}}}}},"errorCodes":{"400":[{"errorCode":"LoadBalancerNotFound","errorMessage":"The input parameter loadBalancerId that is not found."},{"errorCode":"ens.interface.error","errorMessage":"An error occurred while call the API."},{"errorCode":"NoPermission","errorMessage":"Permission denied."},{"errorCode":"InvalidParameter.%s","errorMessage":"The specified field %s invalid. Please check it again."}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\\",\\n  \\\"ListenerPort\\\": 8080,\\n  \\\"Status\\\": \\\"Running\\\",\\n  \\\"Bandwidth\\\": 50,\\n  \\\"Scheduler\\\": \\\"wrr\\\",\\n  \\\"HealthCheck\\\": \\\"on\\\",\\n  \\\"HealthyThreshold\\\": 3,\\n  \\\"UnhealthyThreshold\\\": 3,\\n  \\\"HealthCheckTimeout\\\": 5,\\n  \\\"HealthCheckConnectPort\\\": 9902,\\n  \\\"HealthCheckInterval\\\": 5,\\n  \\\"Description\\\": \\\"abc\\\",\\n  \\\"ListenerForward\\\": \\\"off\\\",\\n  \\\"ForwardPort\\\": 0,\\n  \\\"RequestTimeout\\\": 60,\\n  \\\"IdleTimeout\\\": 15,\\n  \\\"HealthCheckHttpCode\\\": \\\"http_2xx\\\",\\n  \\\"HealthCheckDomain\\\": \\\"www.test.com\\\",\\n  \\\"HealthCheckURI\\\": \\\"/checkpreload.htm\\\",\\n  \\\"ServerCertificateId\\\": \\\"60276**\\\",\\n  \\\"HealthCheckMethod\\\": \\\"head\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeLoadBalancerHTTPSListenerAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <ListenerPort>8080</ListenerPort>\\n    <Status>Running</Status>\\n    <Bandwidth>50</Bandwidth>\\n    <Scheduler>wrr</Scheduler>\\n    <HealthCheck>on</HealthCheck>\\n    <HealthyThreshold>3</HealthyThreshold>\\n    <UnhealthyThreshold>3</UnhealthyThreshold>\\n    <HealthCheckTimeout>5</HealthCheckTimeout>\\n    <HealthCheckConnectPort>9902</HealthCheckConnectPort>\\n    <HealthCheckInterval>5</HealthCheckInterval>\\n    <Description>abc</Description>\\n    <ListenerForward>off</ListenerForward>\\n    <ForwardPort>0</ForwardPort>\\n    <RequestTimeout>60</RequestTimeout>\\n    <IdleTimeout>15</IdleTimeout>\\n    <HealthCheckHttpCode>http_2xx</HealthCheckHttpCode>\\n    <HealthCheckDomain>www.test.com</HealthCheckDomain>\\n    <HealthCheckURI>/checkpreload.htm</HealthCheckURI>\\n    <ServerCertificateId>6027667</ServerCertificateId>\\n    <HealthCheckMethod>head</HealthCheckMethod>\\n</DescribeLoadBalancerHTTPSListenerAttributeResponse>\",\"errorExample\":\"\"}]","title":"查询HTTPS监听属性","description":"- API调用频率：100次/秒。\n- 单用户调用频率：10次/秒。"}