{"summary":"调用DescribeLoadBalancerTCPListenerAttribute查询TCP监听配置。","methods":["get","post"],"schemes":["http","https"],"security":[{"AK":[]}],"deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"ListenerPort","in":"query","schema":{"description":"需要查询的监听端口。取值：**1**~**65535**。","type":"integer","format":"int32","required":true,"maximum":"65535","minimum":"0","example":"80"}},{"name":"LoadBalancerId","in":"query","schema":{"description":"负载均衡实例的ID。","type":"string","required":true,"example":"lb-5snthcyu1x10g7tywj7iu****"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"RequestId":{"title":"Id of the request","description":"请求ID。","type":"string","example":"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E"},"ListenerPort":{"description":"负载均衡实例前端使用的端口。","type":"integer","format":"int32","example":"80"},"Status":{"description":"当前监听的状态。取值：\n\n- **Running**：正常运行。\n- **Stopped**：运行停止。\n- **Starting**：启动中。\n- **Configuring**：配置中。\n- **Stopping**：运行停止中。","type":"string","example":"Stopped"},"Bandwidth":{"description":"负载均衡带宽峰值，默认值为-1（表示不限速）。","type":"integer","format":"int32","example":"-1"},"Scheduler":{"description":"调度算法。取值：\n- **wrr**：权重值越高的后端服务器，被轮询到的次数（概率）也越高。\n- **wlc**：除了根据每台后端服务器设定的权重值来进行轮询，同时还考虑后端服务器的实际负载（即连接数）。当权重值相同时，当前连接数越小的后端服务器被轮询到的次数（概率）也越高。\n- **rr**：按照访问顺序依次将外部请求依序分发到后端服务器。\n- **sch**：基于源IP地址的一致性Hash，相同的源地址会调度到相同的后端服务器。\n- **qch**：基于QUIC Connection ID一致性Hash，相同的QUIC Connection ID会调度到相同的后端服务器。\n- **iqch**：针对iQUIC CID的特定三个字节进行一致Hash，第2~第4三个字节相同的会调度到相同的后端服务器。\n","type":"string","example":"wrr"},"PersistenceTimeout":{"description":"会话保持的超时时间。\n\n- 默认值：0，表示关闭会话保持。\n- 取值：**0**~**3600**。\n- 单位：秒。","type":"integer","format":"int32","example":"0"},"EstablishedTimeout":{"description":"连接超时时间，取值：**10**~**900**，单位：秒。","type":"integer","format":"int32","example":"500"},"HealthCheck":{"description":"是否开启健康检查。取值：\n\n- **on**：开启。\n- **off**：关闭。","type":"string","example":"on"},"HealthyThreshold":{"description":"健康检查连续成功多少次后，将后端服务器的健康检查状态由fail（后台服务器不可达）判定为success（后台服务器可达）。取值：**2**~**10**。\n> HealthCheck值为on时才会有效。\n","type":"integer","format":"int32","example":"4"},"UnhealthyThreshold":{"description":"健康检查连续失败多少次后，将后端服务器的健康检查状态由success（后台服务器可达）判定为fail（后台服务器不可达）。取值：**2**~**10**。\n\n> HealthCheck值为on时才会有效。\n","type":"integer","format":"int32","example":"4"},"HealthCheckConnectTimeout":{"description":"接收来自运行状况检查的响应需要等待的时间。如果后端ENS在指定的时间内没有响应，则判定为健康检查失败。\n- 默认值：5秒。\n- 取值：**1**~**300**。\n- 单位：秒。\n> - HealthCheck值为on时才会有效。\n>- 如果HealthCheckConnectTimeout的值小于HealthCheckInterval的值，则HealthCheckConnectTimeout无效，超时时间为HealthCheckInterval的值。","type":"integer","format":"int32","example":"100"},"HealthCheckInterval":{"description":"健康检查的时间间隔。取值：**1**~**50**，单位：秒。","type":"integer","format":"int32","example":"5"},"Description":{"description":"监听名称。","type":"string","example":"example"},"HealthCheckHttpCode":{"description":"健康检查正常时的HTTP状态码。取值：\n\n- **http_2xx**（默认值）。\n- **http_3xx**。\n- **http_4xx**。\n- **http_5xx**。\n\n> HealthCheck值为on时才会有效。","type":"string","example":"http_2xx"},"HealthCheckDomain":{"description":"用于健康检查的域名。\n> HealthCheck值为on时才会有效。\n","type":"string","example":"example.com"},"HealthCheckURI":{"description":"用于健康检查的URI。长度限制为**1**~**80**。\n> - URL不能只有`/`，但必须以`/`开头。\n>- HealthCheck值为on时才会有效。","type":"string","example":"/example/index.html"},"HealthCheckType":{"description":"健康检查类型。取值：\n- **tcp**（默认值）。\n- **http**。\n","type":"string","example":"tcp"},"BackendServerPort":{"description":"负载均衡实例后端服务器使用的端口，取值：**1**~**65535**。","type":"integer","format":"int32","example":"8080"},"HealthCheckConnectPort":{"description":"健康检查使用的端口，取值：**1**~**65535**。不设置此参数时，表示使用后端服务端口（BackendServerPort）。\n> HealthCheck值为on时才会有效。\n","type":"integer","format":"int32","example":"8000"},"EipTransmit":{"description":"是否开启EIP透传，取值：\n\n- **on**：开启。\n- **off**（默认值）：关闭。","type":"string","example":"on"}}}}},"errorCodes":{"400":[{"errorCode":"ens.interface.error","errorMessage":"An error occurred while call the API."},{"errorCode":"LoadBalancerNotFound","errorMessage":"The input parameter loadBalancerId that is not found.\t"},{"errorCode":"ListenerNotFound","errorMessage":"Listener is not found."},{"errorCode":"NoPermission","errorMessage":"Permission denied."},{"errorCode":"InvalidParameter.%s","errorMessage":"The specified field %s invalid. Please check it again."}]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E\\\",\\n  \\\"ListenerPort\\\": 80,\\n  \\\"Status\\\": \\\"Stopped\\\",\\n  \\\"Bandwidth\\\": -1,\\n  \\\"Scheduler\\\": \\\"wrr\\\",\\n  \\\"PersistenceTimeout\\\": 0,\\n  \\\"EstablishedTimeout\\\": 500,\\n  \\\"HealthCheck\\\": \\\"on\\\",\\n  \\\"HealthyThreshold\\\": 4,\\n  \\\"UnhealthyThreshold\\\": 4,\\n  \\\"HealthCheckConnectTimeout\\\": 100,\\n  \\\"HealthCheckInterval\\\": 5,\\n  \\\"Description\\\": \\\"example\\\",\\n  \\\"HealthCheckHttpCode\\\": \\\"http_2xx\\\",\\n  \\\"HealthCheckDomain\\\": \\\"example.com\\\",\\n  \\\"HealthCheckURI\\\": \\\"/example/index.html\\\",\\n  \\\"HealthCheckType\\\": \\\"tcp\\\",\\n  \\\"BackendServerPort\\\": 8080,\\n  \\\"HealthCheckConnectPort\\\": 8000,\\n  \\\"EipTransmit\\\": \\\"on\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<DescribeLoadBalancerTCPListenerAttributeResponse>\\n    <RequestId>473469C7-AA6F-4DC5-B3DB-A3DC0DE3C83E</RequestId>\\n    <ListenerPort>80</ListenerPort>\\n    <Status>Stopped</Status>\\n    <Bandwidth>5</Bandwidth>\\n    <Scheduler>wrr</Scheduler>\\n    <PersistenceTimeout>0</PersistenceTimeout>\\n    <EstablishedTimeout>500</EstablishedTimeout>\\n    <HealthCheck>on</HealthCheck>\\n    <HealthyThreshold>4</HealthyThreshold>\\n    <UnhealthyThreshold>4</UnhealthyThreshold>\\n    <HealthCheckConnectTimeout>100</HealthCheckConnectTimeout>\\n    <HealthCheckInterval>5</HealthCheckInterval>\\n    <Description>example</Description>\\n    <HealthCheckHttpCode>http_2xx</HealthCheckHttpCode>\\n    <HealthCheckDomain>example.com</HealthCheckDomain>\\n    <HealthCheckURI>/example/index.html</HealthCheckURI>\\n    <HealthCheckType>tcp</HealthCheckType>\\n    <BackendServerPort>8080</BackendServerPort>\\n    <HealthCheckConnectPort>8000</HealthCheckConnectPort>\\n    <EipTransmit>on</EipTransmit>\\n</DescribeLoadBalancerTCPListenerAttributeResponse>\",\"errorExample\":\"\"}]","title":"查询TCP监听属性","description":"- API调用频率：100次/秒。\n- 单用户调用频率：10次/秒。"}