{"summary":"使用本地文件或公网可免密访问的文件链接异步上传文档，服务端对文档做Loader、Chunk、Embedding然后入库，最大支持200MB。","methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"create","chargeType":"paid"},"parameters":[{"name":"DBInstanceId","in":"query","schema":{"description":"开启了向量引擎优化加速的实例ID。\n\n> 您可以调用[DescribeDBInstances](~~86911~~)接口查看目标地域下所有的AnalyticDB PostgreSQL实例的详情，包括实例ID。","type":"string","required":true,"example":"gp-bp12ga6v69h86****"}},{"name":"Collection","in":"formData","schema":{"description":"文档库名称。\n\n\n> 由[CreateDocumentCollection](~~2618448~~)接口创建。您可以调用[ListDocumentCollections](~~2618452~~)接口查看已经创建的文档库。","type":"string","required":true,"example":"document"}},{"name":"Namespace","in":"formData","schema":{"description":"命名空间，默认为public。\n\n> 您可以通过CreateNamespace接口创建，通过ListNamespaces接口查看列表。","type":"string","required":false,"example":"mynamespace","default":"public"}},{"name":"NamespacePassword","in":"formData","schema":{"description":"命名空间对应的密码。\n\n> 本值为CreateNamespace接口指定。","type":"string","required":true,"example":"testpassword"}},{"name":"RegionId","in":"query","schema":{"description":"实例所在的地域ID。","type":"string","required":true,"example":"cn-hangzhou"}},{"name":"FileName","in":"formData","schema":{"description":"文件名。\n\n><notice>\n\n- 文件建议带有文档类型后缀，如`.json`、`.md`或`.pdf`。如果不带后缀，将使用默认的非结构化加载器加载。\n- 图片文件必须带有文件后缀，当前支持的图片后缀：`bmp`、`jpg`、`jpeg`、`png`和`tiff`。\n- 图片文件支持上传压缩包，压缩包必须带有文件后缀，支持的压缩包格式：`tar`、`gz`和`zip`。\n\n</notice>","type":"string","required":true,"example":"mydoc.txt"}},{"name":"FileUrl","in":"formData","schema":{"description":"公网可访问的文档URL地址。\n\n> \n> - 建议使用SDK调用此接口，SDK帮封装了UploadDocumentAsyncAdvance方法可直接上传本地文件。\n> - 如果是图片压缩包地址，当前压缩包里的图片数目最多为100张。","type":"string","required":true,"example":"https://xx/mydoc.txt","isFileTransferUrl":true}},{"name":"Metadata","in":"formData","style":"json","schema":{"description":"元数据信息，需和创建文档库（CreateDocumentCollection）时指定的Metadata字段一致。","type":"object","required":false,"additionalProperties":{"type":"any","description":"元数据信息，需和创建文档库（CreateDocumentCollection）时指定的Metadata字段一致。","example":"{\"title\":\"mytitle\",\"page\":1}"}}},{"name":"ChunkSize","in":"formData","schema":{"description":"处理大型数据的切分策略：数据拆分成较小的部分时每个块的大小。最大值2048。","type":"integer","format":"int32","required":false,"example":"250"}},{"name":"ChunkOverlap","in":"formData","schema":{"description":"处理大型数据的切分策略：在分块处理时，连续的块之间重叠的数据量。最大值不能超过ChunkSize。\n\n> 这是为了防止数据被截断而丢失上下文信息。例如，在处理一个长文本时，您可能希望确保两个连续的文本块有一定量的重叠文本，这样模型就可以更好地理解两个块之间的上下文关系。","type":"integer","format":"int32","required":false,"example":"50"}},{"name":"Separators","in":"formData","style":"json","schema":{"description":"处理大型数据的切分策略：分隔符。\n\n> - Seprators是影响切分效果的关键参数，且和TextSplitterName指定的切分器相关。\n> - 一般情况下不许指定，服务端会按照TextSplitterName自动适配。","type":"array","items":{"description":"分隔符。","type":"string","required":false,"example":"。"},"required":false}},{"name":"DryRun","in":"formData","schema":{"description":"是否只做文档理解和切分，不做向量化和入库。默认为false。\n\n> 当不确定文档切分效果时，可先设置此值为true查看切分效果进行调优。","type":"boolean","required":false,"example":"false","default":"false"}},{"name":"ZhTitleEnhance","in":"formData","schema":{"description":"是否开启中文标题加强。\n\n> 文档理解时，通过增加标题判断，判断哪些文本为标题，并在metadata中进行标记， 然后将文本与往上一级的标题进行拼合，实现文本信息的增强。","type":"boolean","required":false,"example":"false"}},{"name":"TextSplitterName","in":"formData","schema":{"description":"切分器名称。取值说明：\n\n- **ChineseRecursiveTextSplitter**（默认值）：继承于RecursiveCharacterTextSplitter，默认以`[\"\\n\\n\",\"\\n\", \"。|！|？\",\"\\.\\s|\\!\\s|\\?\\s\", \"；|;\\s\", \"，|,\\s\"]`作为分隔符，使用正则匹配，中文比RecursiveCharacterTextSplitter效果更好一些。\n- **RecursiveCharacterTextSplitter**：默认以`[\"\\n\\n\", \"\\n\", \" \", \"\"]`作为分隔符。可以支持`c++/go/java/js/php/proto/python/rst/ruby/rust/scala/swift/markdown/latex/html/sol/csharp`等多种代码语言的切分。\n- **SpacyTextSplitter**：默认分隔符为`\\n\\n`，使用Spacy库的en_core_web_sm模型来分隔；对全英文文档支持较好。\n- **MarkdownHeaderTextSplitter**：针对markdown类型，使用` [ (\"#\", \"head1\"),  (\"##\", \"head2\"),  (\"###\", \"head3\"), (\"####\", \"head4\") ]`来切分。","type":"string","required":false,"example":"ChineseRecursiveTextSplitter"}},{"name":"DocumentLoaderName","in":"formData","schema":{"description":"建议无需指定，会按照文件扩展名自动匹配加载器，支持的列表如下：\n- UnstructuredHTMLLoader：`.html`\n- UnstructuredMarkdownLoader：`.md`\n- PyMuPDFLoader：`.pdf`\n- PyPDFLoader：`.pdf`\n- RapidOCRPDFLoader：`.pdf`\n- PDFWithImageRefLoader: `.pdf` （具有图文关联功能）\n- JSONLoader：`.json`\n- CSVLoader：`.csv`\n- RapidOCRLoader：`.png`、.`jpg`、`.jpeg`或`.bmp`\n- UnstructuredFileLoader：`.eml`、`.msg`、`.rst`、`.txt`、`.docx`、`.epub`、`.odt`、`.pptx`或`.tsv`","type":"string","required":false,"example":"PyMuPDFLoader"}}],"responses":{"200":{"schema":{"type":"object","properties":{"RequestId":{"description":"请求ID。","type":"string","example":"ABB39CC3-4488-4857-905D-2E4A051D0521"},"Message":{"description":"返回信息。","type":"string","example":"success"},"Status":{"description":"创建状态，取值说明：\n- **success**：成功\n- **fail**：失败","type":"string","example":"success"},"JobId":{"description":"任务ID，用于后续查看任务状态或者取消任务。","type":"string","example":"231460f8-75dc-405e-a669-0c5204887e91"}}}}},"staticInfo":{"returnType":"asynchronous","callback":"gpdb::2016-05-03::GetUploadDocumentJob","callbackInterval":2000,"maxCallbackTimes":1000},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"ABB39CC3-4488-4857-905D-2E4A051D0521\\\",\\n  \\\"Message\\\": \\\"success\\\",\\n  \\\"Status\\\": \\\"success\\\",\\n  \\\"JobId\\\": \\\"231460f8-75dc-405e-a669-0c5204887e91\\\"\\n}\",\"type\":\"json\"}]","title":"异步上传文档","description":"服务端会自动按照文档后缀进行load和chunk，并按照创建文档库（CreateDocumentCollection）时指定的embedding模型向量化，然后写入指定的文档库中。支持多种格式的文本、图片多模态embedding。\n\n相关API接口：\n - 通过GetUploadDocumentJob接口查看上传进度和结果。\n- 通过CancelUploadDocumentJob接口取消上传任务。\n\n><notice>\n\n- 上传文档后会进入排队处理，同一个用户（子账号也视为主账号用户）的Pending+Running处理的文档数不能超过20。\n- 文本文档切分后条数最大100,000条。\n- 当文档库使用的是OnePeace模型时，单个用户当前上传和查询图片可以使用的配额为10000。></notice>"}