{"summary":"创建文档库。","methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"create"},"parameters":[{"name":"DBInstanceId","in":"query","schema":{"description":"实例ID。\n\n> 您可以调用[DescribeDBInstances](~~86911~~)接口查看目标地域下所有的AnalyticDB PostgreSQL实例的详情，包括实例ID。","type":"string","required":true,"example":"gp-xxxxxxxxx"}},{"name":"ManagerAccount","in":"query","schema":{"description":"具有rds_superuser权限的管理账号名称。\n\n> 您可以通过控制台->账号管理来创建账号，或者通过[CreateAccount](~~2361789~~)接口创建。","type":"string","required":true,"example":"testaccount"}},{"name":"ManagerAccountPassword","in":"query","schema":{"description":"管理账号密码。","type":"string","required":true,"example":"testpassword"}},{"name":"Namespace","in":"query","schema":{"description":"命名空间，默认为public。\n\n> 您可以通过[CreateNamespace](~~2401495~~)接口创建，通过[ListNamespaces](~~2401502~~)接口查看列表。","type":"string","required":false,"example":"mynamespace","default":"public"}},{"name":"Collection","in":"query","schema":{"description":"要创建的文档库名称。\n\n> 名称需符合PostgreSQL对象名限制。","type":"string","required":true,"example":"document"}},{"name":"RegionId","in":"query","schema":{"description":"实例所在地域ID。","type":"string","required":true,"example":"cn-hangzhou"}},{"name":"EmbeddingModel","in":"query","schema":{"description":"向量化算法。\n\n> 支持的算法：\n> - text-embedding-v1: 1536维\n> - text-embedding-v2: 1536维\n> - text2vec: 1024维\n> - m3e-base: 768维\n> - m3e-small: 512维\n> - multimodal-embedding-one-peace-v1: 1536维, 图片向量化算法\n> - clip-vit-b-32：CLIP ViT-B/32模型, 512维, 图片向量化算法\n> - clip-vit-b-16：CLIP ViT-B/16模型, 512维, 图片向量化算法\n> - clip-vit-l-14：CLIP ViT-L/14模型, 768维, 图片向量化算法\n> - clip-vit-l-14-336px：CLIP ViT-L/14@336px模型, 768维, 图片向量化算法\n> - clip-rn50：CLIP RN50模型, 1024维, 图片向量化算法\n> - clip-rn101：CLIP RN101模型, 512维, 图片向量化算法\n> - clip-rn50x4：CLIP RN50x4模型, 640维, 图片向量化算法\n> - clip-rn50x16：CLIP RN50x16模型, 768维, 图片向量化算法\n> - clip-rn50x64：CLIP RN50x64模型, 1024维, 图片向量化算法","type":"string","required":false,"example":"text-embedding-v1","default":"text-embedding-v1","enum":[]}},{"name":"FullTextRetrievalFields","in":"query","schema":{"description":"用于全文检索的字段，多个字段用英文逗号（,）分隔，且字段必须属于Metadata里定义的key。","type":"string","required":false,"example":"title,page"}},{"name":"Metadata","in":"query","schema":{"description":"向量数据的元信息，为MAP格式的JSON字符串。其中key代表字段名，value代表数据类型。\n><warning>id、vector、doc_name、content、loader_metadata、source、to_tsvector字段为保留字段，禁止使用。></warning>","type":"string","required":false,"example":"{\"title\":\"text\",\"page\":\"int\"}"}},{"name":"Parser","in":"query","schema":{"description":"用于全文检索的分词器，默认为zh_cn。","type":"string","required":false,"example":"zh_cn","default":"zh_cn"}},{"name":"Metrics","in":"query","schema":{"description":"向量构建索引时的方法\n\n取值说明：\n- **l2**：欧氏距离。\n- **ip**：点积（内积）距离。\n- **cosine**（默认）：余弦相似度。","type":"string","required":false,"example":"cosine","default":"cosine"}},{"name":"HnswM","in":"query","schema":{"description":"HNSW算法中的最大邻居数，范围为1～1000。接口会根据向量维度自动设置此值，一般不需要手动设置。\n\n\n> 建议根据向量维度来设置：\n>- 小于等于384：16\n>- 大于384小于等于768：32\n>- 大于768小于等于1024：64\n>- 大于1024：128","type":"integer","format":"int32","required":false,"maximum":"1000","minimum":"0","example":"64","enum":[]}},{"name":"PqEnable","in":"query","schema":{"description":"索引是否开启PQ(Product quantization)算法加速，数据量大于50w时建议开启。取值说明：\n- 0：关闭。\n- 1：开启(默认)。","type":"integer","format":"int32","required":false,"example":"1","enum":[]}},{"name":"ExternalStorage","in":"query","schema":{"description":"是否使用mmap构建HNSW索引，默认为0。如果数据不需要删除，且对上传数据的速度性能有要求时，建议设置为1。\n\n> \n> - 为0时，默认会采用段页式存储构建索引，这种模式可以使用PostgreSQL中的shared_buffer做缓存，支持删除和更新等操作。\n> - 为1时，该索引会采用mmap构建索引，该模式不支持删除更新等操作。","type":"integer","format":"int32","required":false,"example":"0","enum":["0","1"]}}],"responses":{"200":{"schema":{"type":"object","properties":{"RequestId":{"description":"请求ID。","type":"string","example":"ABB39CC3-4488-4857-905D-2E4A051D0521"},"Message":{"description":"返回信息。","type":"string","example":"Successful"},"Status":{"description":"API执行状态，取值如下：\n- **success**：执行成功。\n- **fail**：执行失败。","type":"string","example":"successs"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"ABB39CC3-4488-4857-905D-2E4A051D0521\\\",\\n  \\\"Message\\\": \\\"Successful\\\",\\n  \\\"Status\\\": \\\"successs\\\"\\n}\",\"type\":\"json\"}]","title":"创建文档库"}