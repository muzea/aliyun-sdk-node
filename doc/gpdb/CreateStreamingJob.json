{"summary":"创建实时数据同步任务。","methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free"},"parameters":[{"name":"RegionId","in":"query","schema":{"description":"地域ID。\n\n> 您可以调用[DescribeRegions](~~86912~~)接口查看可用的地域ID。","type":"string","required":false,"example":"cn-beijing"}},{"name":"DBInstanceId","in":"query","schema":{"description":"实例ID。","type":"string","required":true,"example":"gp-bp10g78o9807yv9h3"}},{"name":"DataSourceId","in":"query","schema":{"description":"数据源ID。","type":"string","required":true,"example":"1"}},{"name":"JobDescription","in":"query","schema":{"description":"任务描述。","type":"string","required":false,"example":"test-job"}},{"name":"JobName","in":"query","schema":{"description":"任务名称。","type":"string","required":true,"example":"test-job"}},{"name":"Mode","in":"query","schema":{"description":"配置模式\n1. basic模式需要指定一些配置字段\n1. professional支持提交yaml文件","type":"string","required":false,"enumValueTitles":{},"example":"basic / professional","enum":["basic","professional"]}},{"name":"SrcColumns","in":"query","style":"json","schema":{"description":"源端数据字段列表。","type":"array","items":{"description":"源端数据字段键值。","type":"string","required":false,"example":"src_column_1"},"required":false}},{"name":"DestColumns","in":"query","style":"json","schema":{"description":"目标数据表映射字段列表。","type":"array","items":{"description":"目标表里面的映射字段键值。","type":"string","required":false,"example":"dest_column_1"},"required":false}},{"name":"Account","in":"query","schema":{"description":"目标数据库账号。","type":"string","required":false,"example":"test-account"}},{"name":"Password","in":"query","schema":{"description":"目标数据库密码。","type":"string","required":false,"example":"pwd123"}},{"name":"DestDatabase","in":"query","schema":{"description":"目标数据库名称。","type":"string","required":false,"example":"dest-db"}},{"name":"DestSchema","in":"query","schema":{"description":"目标命名空间。","type":"string","required":false,"example":"dest-schema"}},{"name":"DestTable","in":"query","schema":{"description":"目标表名称。","type":"string","required":false,"example":"dest-table"}},{"name":"WriteMode","in":"query","schema":{"description":"写入模式。","type":"string","required":false,"enumValueTitles":{"MERGE":"MERGE","INSERT":"INSERT","UPDATE":"UPDATE"},"example":"INSERT/UPDATE/MERGE","enum":["insert","update","merge"]}},{"name":"TryRun","in":"query","schema":{"description":"是否测试实时任务，取值：\n\n- true\n\n- false\n\n默认值：false。","type":"boolean","required":false,"example":"true","default":"false"}},{"name":"JobConfig","in":"query","schema":{"description":"任务配置文件，专业模式必填。","type":"string","required":false,"example":"DATABASE: adbpgss_test\nUSER: adbpgss_test\nPASSWORD: adbpgssTest\nHOST: gp-xxx-master.gpdb.rds-aliyun-pre.rds.aliyuncs.com\nPORT: 5432\nKAFKA:\n  INPUT:\n    SOURCE:\n      BROKERS: broker1:9092,broker2:9092,broker3:9092\n      TOPIC: testtopic\n      FALLBACK_OFFSET: earliest\n    KEY:\n      COLUMNS:\n      - NAME: customer_id\n        TYPE: int\n      FORMAT: delimited\n      DELIMITED_OPTION:\n        DELIMITER: '|'\n    VALUE:\n      COLUMNS:\n      - TYPE: integer\n        NAME: l_orderkey\n      - TYPE: integer\n        NAME: l_partkey\n      - TYPE: integer\n        NAME: l_suppkey\n      - TYPE: integer\n        NAME: l_linenumber\n      - TYPE: decimal\n        NAME: l_quantity\n      - TYPE: decimal\n        NAME: l_extendedprice\n      - TYPE: decimal\n        NAME: l_discount\n      - TYPE: decimal\n        NAME: l_tax\n      - TYPE: char\n        NAME: l_returnflag\n      - TYPE: char\n        NAME: l_linestatus\n      - TYPE: date\n        NAME: l_shipdate\n      - TYPE: date\n        NAME: l_commitdate\n      - TYPE: date\n        NAME: l_receiptdate\n      - TYPE: text\n        NAME: l_shipinstruct\n      - TYPE: text\n        NAME: l_shipmode\n      - TYPE: text\n        NAME: l_comment\n      FORMAT: delimited\n      DELIMITED_OPTION:\n        DELIMITER: '|'\n    ERROR_LIMIT: 10\n  OUTPUT:\n    SCHEMA: adbpgss_test\n    TABLE: write_with_insert_plaintext\n    MODE: MERGE\n    MATCH_COLUMNS:\n    - l_orderkey\n    - l_partkey\n    - l_suppkey\n    UPDATE_COLUMNS:\n    - l_linenumber\n    - l_quantity\n    - l_extendedprice\n    - l_discount\n    - l_tax\n    - l_returnflag\n    - l_linestatus\n    - l_shipdate\n    - l_commitdate\n    - l_receiptdate\n    - l_shipinstruct\n    - l_shipmode\n    - l_comment\n    MAPPING:\n    - EXPRESSION: l_orderkey\n      NAME: l_orderkey\n    - EXPRESSION: l_partkey\n      NAME: l_partkey\n    - EXPRESSION: l_suppkey\n      NAME: l_suppkey\n    - EXPRESSION: l_linenumber\n      NAME: l_linenumber\n    - EXPRESSION: l_quantity\n      NAME: l_quantity\n    - EXPRESSION: l_extendedprice\n      NAME: l_extendedprice\n    - EXPRESSION: l_discount\n      NAME: l_discount\n    - EXPRESSION: l_tax\n      NAME: l_tax\n    - EXPRESSION: l_returnflag\n      NAME: l_returnflag\n    - EXPRESSION: l_linestatus\n      NAME: l_linestatus\n    - EXPRESSION: l_shipdate\n      NAME: l_shipdate\n    - EXPRESSION: l_commitdate\n      NAME: l_commitdate\n    - EXPRESSION: l_receiptdate\n      NAME: l_receiptdate\n    - EXPRESSION: l_shipinstruct\n      NAME: l_shipinstruct\n    - EXPRESSION: l_shipmode\n      NAME: l_shipmode\n    - EXPRESSION: l_comment\n      NAME: l_comment\n  COMMIT:\n    MAX_ROW: 1000\n    MINIMAL_INTERVAL: 1000\n    CONSISTENCY: ATLEAST\n  POLL:\n    BATCHSIZE: 1000\n    TIMEOUT: 1000\n  PROPERTIES:\n    group.id: testgroup\n"}},{"name":"GroupName","in":"query","schema":{"description":"kafka分组名称","type":"string","required":false,"example":"group_name。"}},{"name":"FallbackOffset","in":"query","schema":{"description":"FallbackOffset 回退点位，回退偏移量\n\n- FallbackOffset参数定义了当consumer没有请求需要消费的位点或者请求的消费的位点超出当前kafka集群的记录的位点信息的时候的行为。可以选择从earliest（最新）或者latest（最晚）位点开始消费。","type":"string","required":false,"enumValueTitles":{"EARLIEST":"EARLIEST","LATEST":"LATEST"},"example":"EARLIEST /  LATEST","enum":["earliest","latest"]}},{"name":"MatchColumns","in":"query","style":"json","schema":{"description":"匹配列，通常为目标表的所有主键列，此配置内所有列的值相同即视为两行数据为重复数据。","type":"array","items":{"description":"匹配字段键值。","type":"string","required":false,"example":"column_1"},"required":false}},{"name":"UpdateColumns","in":"query","style":"json","schema":{"description":"更新列，通常为目标表的所有非主键列，当通过MatchColumns确定数据重复时，通过更新UpdateColumns列的值，产生使新数据覆盖旧数据的效果。","type":"array","items":{"description":"更新字段键值。","type":"string","required":false,"example":"column_1"},"required":false}},{"name":"ErrorLimitCount","in":"query","schema":{"description":"kafka中的数据与adbpg目标表不匹配造时会造成写入失败，此值为允许错误行的行数，超出后会造成任务失败。","type":"integer","format":"int64","required":false,"example":"5"}},{"name":"Consistency","in":"query","schema":{"description":"投递保证。","type":"string","required":false,"example":"ATLEAST / EXACTLY","enum":["ATLEAST","EXACTLY"]}}],"responses":{"200":{"schema":{"type":"object","properties":{"RequestId":{"description":"请求ID。","type":"string","example":"B4CAF581-2AC7-41AD-8940-D56DF7AADF5B"},"JobId":{"description":"任务ID。","type":"integer","format":"int32","example":"1"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"B4CAF581-2AC7-41AD-8940-D56DF7AADF5B\\\",\\n  \\\"JobId\\\": 1\\n}\",\"type\":\"json\"}]","title":"创建实时数据同步任务"}