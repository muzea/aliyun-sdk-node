{"summary":"查询实时数据同步服务","methods":["post","get"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"delete","riskType":"none","chargeType":"free"},"parameters":[{"name":"RegionId","in":"query","schema":{"description":"地域ID。\n\n> 您可以调用[DescribeRegions](~~86912~~)接口查看可用的地域ID。","type":"string","required":false,"example":"cn-beijing"}},{"name":"JobId","in":"query","schema":{"description":"任务ID。","type":"integer","format":"int32","required":true,"example":"1"}},{"name":"DBInstanceId","in":"query","schema":{"description":"实例ID。","type":"string","required":true,"example":"gp-bp10g78o9807yv9h3"}}],"responses":{"200":{"schema":{"type":"object","properties":{"RequestId":{"description":"请求ID。","type":"string","example":"B4CAF581-2AC7-41AD-8940-D56DF7AADF5B"},"JobId":{"description":"任务ID。","type":"string","example":"1"},"JobName":{"description":"任务名称。","type":"string","example":"test-job"},"JobDescription":{"description":"任务描述。","type":"string","example":"test_job"},"DataSourceId":{"description":"数据源ID。","type":"string","example":"2"},"SrcColumns":{"description":"源端字段列表。","type":"array","items":{"description":"源端数据字段键值。","type":"string","example":"src_column_1"}},"DestColumns":{"description":"目标数据表映射字段列表。","type":"array","items":{"description":"目标表里面的映射字段键值。","type":"string","example":"dest_column_1"}},"MatchColumns":{"description":"匹配列，通常为目标表的所有主键列，此配置内所有列的值相同即视为两行数据为重复数据。","type":"array","items":{"description":"匹配字段键值。","type":"string","example":"column_1"}},"UpdateColumns":{"description":"更新列，通常为目标表的所有非主键列，当通过MatchColumns确定数据重复时，通过更新UpdateColumns列的值，产生使新数据覆盖旧数据的效果。","type":"array","items":{"description":"更新字段键值。","type":"string","example":"column_1"}},"Account":{"description":"目标数据库账号。","type":"string","example":"test-account"},"Password":{"description":"目标数据库密码。","type":"string","example":"pwd123"},"DestDatabase":{"description":"目标数据库名称。","type":"string","example":"dest-db"},"DestSchema":{"description":"目标命名空间。","type":"string","example":"dest-schema"},"DestTable":{"description":"目标表名称。","type":"string","example":"dest-table"},"WriteMode":{"description":"写入模式。","type":"string","example":"INSERT/UPDATE/MERGE"},"Mode":{"description":"配置模式\n1. basic模式需要指定一些配置字段\n1. professional支持提交yaml文件","type":"string","example":"basic/professional"},"JobConfig":{"description":"任务配置文件。","type":"string","example":"DATABASE: adbpgss_test\nUSER: adbpgss_test\nPASSWORD: adbpgssTest\nHOST: gp-xxx-master.gpdb.rds-aliyun-pre.rds.aliyuncs.com\nPORT: 5432\nKAFKA:\n  INPUT:\n    SOURCE:\n      BROKERS: broker1:9092,broker2:9092,broker3:9092\n      TOPIC: testtopic\n      FALLBACK_OFFSET: earliest\n    KEY:\n      COLUMNS:\n      - NAME: customer_id\n        TYPE: int\n      FORMAT: delimited\n      DELIMITED_OPTION:\n        DELIMITER: '|'\n    VALUE:\n      COLUMNS:\n      - TYPE: integer\n        NAME: l_orderkey\n      - TYPE: integer\n        NAME: l_partkey\n      - TYPE: integer\n        NAME: l_suppkey\n      - TYPE: integer\n        NAME: l_linenumber\n      - TYPE: decimal\n        NAME: l_quantity\n      - TYPE: decimal\n        NAME: l_extendedprice\n      - TYPE: decimal\n        NAME: l_discount\n      - TYPE: decimal\n        NAME: l_tax\n      - TYPE: char\n        NAME: l_returnflag\n      - TYPE: char\n        NAME: l_linestatus\n      - TYPE: date\n        NAME: l_shipdate\n      - TYPE: date\n        NAME: l_commitdate\n      - TYPE: date\n        NAME: l_receiptdate\n      - TYPE: text\n        NAME: l_shipinstruct\n      - TYPE: text\n        NAME: l_shipmode\n      - TYPE: text\n        NAME: l_comment\n      FORMAT: delimited\n      DELIMITED_OPTION:\n        DELIMITER: '|'\n    ERROR_LIMIT: 10\n  OUTPUT:\n    SCHEMA: adbpgss_test\n    TABLE: write_with_insert_plaintext\n    MODE: MERGE\n    MATCH_COLUMNS:\n    - l_orderkey\n    - l_partkey\n    - l_suppkey\n    UPDATE_COLUMNS:\n    - l_linenumber\n    - l_quantity\n    - l_extendedprice\n    - l_discount\n    - l_tax\n    - l_returnflag\n    - l_linestatus\n    - l_shipdate\n    - l_commitdate\n    - l_receiptdate\n    - l_shipinstruct\n    - l_shipmode\n    - l_comment\n    MAPPING:\n    - EXPRESSION: l_orderkey\n      NAME: l_orderkey\n    - EXPRESSION: l_partkey\n      NAME: l_partkey\n    - EXPRESSION: l_suppkey\n      NAME: l_suppkey\n    - EXPRESSION: l_linenumber\n      NAME: l_linenumber\n    - EXPRESSION: l_quantity\n      NAME: l_quantity\n    - EXPRESSION: l_extendedprice\n      NAME: l_extendedprice\n    - EXPRESSION: l_discount\n      NAME: l_discount\n    - EXPRESSION: l_tax\n      NAME: l_tax\n    - EXPRESSION: l_returnflag\n      NAME: l_returnflag\n    - EXPRESSION: l_linestatus\n      NAME: l_linestatus\n    - EXPRESSION: l_shipdate\n      NAME: l_shipdate\n    - EXPRESSION: l_commitdate\n      NAME: l_commitdate\n    - EXPRESSION: l_receiptdate\n      NAME: l_receiptdate\n    - EXPRESSION: l_shipinstruct\n      NAME: l_shipinstruct\n    - EXPRESSION: l_shipmode\n      NAME: l_shipmode\n    - EXPRESSION: l_comment\n      NAME: l_comment\n  COMMIT:\n    MAX_ROW: 1000\n    MINIMAL_INTERVAL: 1000\n    CONSISTENCY: ATLEAST\n  POLL:\n    BATCHSIZE: 1000\n    TIMEOUT: 1000\n  PROPERTIES:\n    group.id: testgroup"},"Status":{"description":"服务状态，取值：\n\n- Init：初始化中\n\n- Running：运行中\n\n- Exception：异常\n\n- Paused：暂停","type":"string","example":"Running"},"ErrorMessage":{"description":"服务状态信息，例如异常情况，则显示异常原因。正常Running状态下空值。","type":"string","example":"\"\""},"CreateTime":{"description":"创建时间。","type":"string","format":"iso8601_normal","example":"2019-09-08T16:00:00Z"},"ModifyTime":{"description":"最后修改时间。","type":"string","format":"iso8601_normal","example":"2019-09-08T17:00:00Z"},"GroupName":{"description":"kafka分组名称","type":"string","example":"test_group"},"Consistency":{"description":"投递保证。","type":"string","example":"ATLEAST / EXACTLY"},"ErrorLimitCount":{"description":"kafka中的数据与adbpg目标表不匹配造时会造成写入失败，此值为允许错误行的行数，超出后会造成任务失败。","type":"integer","format":"int32","example":"5"},"FallbackOffset":{"description":"FallbackOffset 回退点位，回退偏移量\n\n- FallbackOffset参数定义了当consumer没有请求需要消费的位点或者请求的消费的位点超出当前kafka集群的记录的位点信息的时候的行为。可以选择从earliest（最新）或者latest（最晚）位点开始消费。","type":"string","example":"EARLIEST /  LATEST"},"DataSourceName":{"description":"数据源名称。","type":"string","example":"test_kafka"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"B4CAF581-2AC7-41AD-8940-D56DF7AADF5B\\\",\\n  \\\"JobId\\\": \\\"1\\\",\\n  \\\"JobName\\\": \\\"test-job\\\",\\n  \\\"JobDescription\\\": \\\"test_job\\\",\\n  \\\"DataSourceId\\\": \\\"2\\\",\\n  \\\"SrcColumns\\\": [\\n    \\\"src_column_1\\\"\\n  ],\\n  \\\"DestColumns\\\": [\\n    \\\"dest_column_1\\\"\\n  ],\\n  \\\"MatchColumns\\\": [\\n    \\\"column_1\\\"\\n  ],\\n  \\\"UpdateColumns\\\": [\\n    \\\"column_1\\\"\\n  ],\\n  \\\"Account\\\": \\\"test-account\\\",\\n  \\\"Password\\\": \\\"pwd123\\\",\\n  \\\"DestDatabase\\\": \\\"dest-db\\\",\\n  \\\"DestSchema\\\": \\\"dest-schema\\\",\\n  \\\"DestTable\\\": \\\"dest-table\\\",\\n  \\\"WriteMode\\\": \\\"INSERT/UPDATE/MERGE\\\",\\n  \\\"Mode\\\": \\\"basic/professional\\\",\\n  \\\"JobConfig\\\": \\\"DATABASE: adbpgss_test\\\\nUSER: adbpgss_test\\\\nPASSWORD: adbpgssTest\\\\nHOST: gp-xxx-master.gpdb.rds-aliyun-pre.rds.aliyuncs.com\\\\nPORT: 5432\\\\nKAFKA:\\\\n  INPUT:\\\\n    SOURCE:\\\\n      BROKERS: broker1:9092,broker2:9092,broker3:9092\\\\n      TOPIC: testtopic\\\\n      FALLBACK_OFFSET: earliest\\\\n    KEY:\\\\n      COLUMNS:\\\\n      - NAME: customer_id\\\\n        TYPE: int\\\\n      FORMAT: delimited\\\\n      DELIMITED_OPTION:\\\\n        DELIMITER: '|'\\\\n    VALUE:\\\\n      COLUMNS:\\\\n      - TYPE: integer\\\\n        NAME: l_orderkey\\\\n      - TYPE: integer\\\\n        NAME: l_partkey\\\\n      - TYPE: integer\\\\n        NAME: l_suppkey\\\\n      - TYPE: integer\\\\n        NAME: l_linenumber\\\\n      - TYPE: decimal\\\\n        NAME: l_quantity\\\\n      - TYPE: decimal\\\\n        NAME: l_extendedprice\\\\n      - TYPE: decimal\\\\n        NAME: l_discount\\\\n      - TYPE: decimal\\\\n        NAME: l_tax\\\\n      - TYPE: char\\\\n        NAME: l_returnflag\\\\n      - TYPE: char\\\\n        NAME: l_linestatus\\\\n      - TYPE: date\\\\n        NAME: l_shipdate\\\\n      - TYPE: date\\\\n        NAME: l_commitdate\\\\n      - TYPE: date\\\\n        NAME: l_receiptdate\\\\n      - TYPE: text\\\\n        NAME: l_shipinstruct\\\\n      - TYPE: text\\\\n        NAME: l_shipmode\\\\n      - TYPE: text\\\\n        NAME: l_comment\\\\n      FORMAT: delimited\\\\n      DELIMITED_OPTION:\\\\n        DELIMITER: '|'\\\\n    ERROR_LIMIT: 10\\\\n  OUTPUT:\\\\n    SCHEMA: adbpgss_test\\\\n    TABLE: write_with_insert_plaintext\\\\n    MODE: MERGE\\\\n    MATCH_COLUMNS:\\\\n    - l_orderkey\\\\n    - l_partkey\\\\n    - l_suppkey\\\\n    UPDATE_COLUMNS:\\\\n    - l_linenumber\\\\n    - l_quantity\\\\n    - l_extendedprice\\\\n    - l_discount\\\\n    - l_tax\\\\n    - l_returnflag\\\\n    - l_linestatus\\\\n    - l_shipdate\\\\n    - l_commitdate\\\\n    - l_receiptdate\\\\n    - l_shipinstruct\\\\n    - l_shipmode\\\\n    - l_comment\\\\n    MAPPING:\\\\n    - EXPRESSION: l_orderkey\\\\n      NAME: l_orderkey\\\\n    - EXPRESSION: l_partkey\\\\n      NAME: l_partkey\\\\n    - EXPRESSION: l_suppkey\\\\n      NAME: l_suppkey\\\\n    - EXPRESSION: l_linenumber\\\\n      NAME: l_linenumber\\\\n    - EXPRESSION: l_quantity\\\\n      NAME: l_quantity\\\\n    - EXPRESSION: l_extendedprice\\\\n      NAME: l_extendedprice\\\\n    - EXPRESSION: l_discount\\\\n      NAME: l_discount\\\\n    - EXPRESSION: l_tax\\\\n      NAME: l_tax\\\\n    - EXPRESSION: l_returnflag\\\\n      NAME: l_returnflag\\\\n    - EXPRESSION: l_linestatus\\\\n      NAME: l_linestatus\\\\n    - EXPRESSION: l_shipdate\\\\n      NAME: l_shipdate\\\\n    - EXPRESSION: l_commitdate\\\\n      NAME: l_commitdate\\\\n    - EXPRESSION: l_receiptdate\\\\n      NAME: l_receiptdate\\\\n    - EXPRESSION: l_shipinstruct\\\\n      NAME: l_shipinstruct\\\\n    - EXPRESSION: l_shipmode\\\\n      NAME: l_shipmode\\\\n    - EXPRESSION: l_comment\\\\n      NAME: l_comment\\\\n  COMMIT:\\\\n    MAX_ROW: 1000\\\\n    MINIMAL_INTERVAL: 1000\\\\n    CONSISTENCY: ATLEAST\\\\n  POLL:\\\\n    BATCHSIZE: 1000\\\\n    TIMEOUT: 1000\\\\n  PROPERTIES:\\\\n    group.id: testgroup\\\",\\n  \\\"Status\\\": \\\"Running\\\",\\n  \\\"ErrorMessage\\\": \\\"\\\\\\\"\\\\\\\"\\\",\\n  \\\"CreateTime\\\": \\\"2019-09-08T16:00:00Z\\\",\\n  \\\"ModifyTime\\\": \\\"2019-09-08T17:00:00Z\\\",\\n  \\\"GroupName\\\": \\\"test_group\\\",\\n  \\\"Consistency\\\": \\\"ATLEAST / EXACTLY\\\",\\n  \\\"ErrorLimitCount\\\": 5,\\n  \\\"FallbackOffset\\\": \\\"EARLIEST /  LATEST\\\",\\n  \\\"DataSourceName\\\": \\\"test_kafka\\\"\\n}\",\"type\":\"json\"}]","title":"查询实时数据同步任务"}