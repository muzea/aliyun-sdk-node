{"summary":"查询应用监控中，某个应用的全部自定义设置（如调用链采样设置、Agent开关等）。","methods":["get","post"],"schemes":["https"],"security":[{"AK":[]}],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free"},"parameters":[{"name":"Pid","in":"query","schema":{"description":"应用ID。\n\n在ARMS控制台的**应用监控**>**应用列表**页面单击目标应用名称。此时浏览器地址栏中的URL即包含应用的pid，格式为pid=xxx。由于浏览器进行了编码，因此需要对pid稍作修改。例如，如果URL中包含的pid为xxx%4074xxx，则需要将%40替换为@，即：xxx@74xxx。","type":"string","required":true,"example":"a2n80plglh@745eddxxx\n"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"RequestId":{"description":"请求ID。","type":"string","example":"78901766-3806-4E96-8E47-CFEF59E4****\n"},"Data":{"description":"应用的自定义配置，格式为一个JSON字符串，每个配置的含义见**返回参数补充说明**。","type":"string","example":"{\"profiler\":{\"enable\":true}}"},"Message":{"description":"返回信息。","type":"string","example":"查询应用配置成功"},"Code":{"description":"接口状态码。","type":"integer","format":"int64","enumValueTitles":{"2xx":"成功","3xx":"重定向","4xx":"请求错误","5xx":"服务器错误"},"example":"200"},"Success":{"description":"查询是否成功。","type":"boolean","enumValueTitles":{"true":"成功","false":"失败"},"example":"true"}}}}},"errorCodes":{"400":[{"errorCode":"ParameterPidMissing","errorMessage":"You must specify pid."}],"404":[{"errorCode":"AppNotExist","errorMessage":"The application does not exist."}],"500":[{"errorCode":"InternalError","errorMessage":"Internal error. Please try again. Contact the DingTalk service account if the issue persists after multiple retries."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"RequestId\\\": \\\"78901766-3806-4E96-8E47-CFEF59E4****\\\\n\\\",\\n  \\\"Data\\\": \\\"{\\\\\\\"profiler\\\\\\\":{\\\\\\\"enable\\\\\\\":true}}\\\",\\n  \\\"Message\\\": \\\"查询应用配置成功\\\",\\n  \\\"Code\\\": 200,\\n  \\\"Success\\\": true\\n}\",\"type\":\"json\"}]","title":"查询应用监控自定义设置","responseParamsDescription":"在返回的自定义配置中，各个JSONPath与对应的开关如下所示。\n（注：由于修改时机不同，返回的自定义配置中**可能不存在某项配置**，此时默认值将生效）\n\n**采样设置说明** \n\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 采样策略 | profiler.sampling.useSamplingStrategyV2 | boolean | 取值：<br />- `true`：自适应采样。<br />- `false`：固定采样率。 | false |\n| 采样率百分比  | profiler.sampling.rate | double | 0~100之间。<br />固定采样率模式下生效。 | 10 |\n| 全采样接口名 | profiler.sampling.v2config.spanNames4FullSampleStr | String | 全采样接口名，多个由英文逗号分隔。 | 空字符串 |\n| 全采样接口前缀  | profiler.sampling.v2config.spanNamePrefixes4FullSampleStr | String | 全采样接口前缀。 | 空字符串 |\n| 全采样接口后缀 | profiler.sampling.v2config.spanNameSuffixes4FullSampleStr | String | 全采样接口后缀。 | 空字符串 |\n\n**探针开关设置说明**\n\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 应用监控启停 | profiler.enable | boolean | 取值：<br />- `true`：开启应用监控。<br />- `false`：关闭应用监控。 | true |\n| dubbo插件开关 | profiler.dubbo.enable | boolean | 取值：<br />- `true`：开启dubbo插件。<br />- `false`：关闭dubbo插件。 | true |\n| mongodb插件开关 | profiler.mongodb.enable | boolean | 取值：<br />- `true`：开启mongodb插件。<br />- `false`：关闭mongodb插件。 | true |\n| hsf插件开关 | profiler.hsf.enable | boolean | 取值：<br />- `true`：开启hsf插件。<br />- `false`：关闭hsf插件。 | true |\n| httpclient3插件开关 | profiler.httpclient3.enable | boolean | 取值：<br />- `true`：开启httpclient3插件。<br />- `false`：关闭httpclient3插件。 | true |\n| httpclient4插件开关 | profiler.httpclient4.enable | boolean | 取值：<br />- `true`：开启httpclient4插件。<br />- `false`：关闭httpclient4插件。 | true |\n| jdkhttp插件开关 | profiler.jdkhttp.enable | boolean | 取值：<br />- `true`：开启jdkhttp插件。<br />- `false`：关闭jdkhttp插件。 | true |\n| jetty插件开关 | profiler.jetty.enable | boolean | 取值：<br />- `true`：开启jetty插件。<br />- `false`：关闭jetty插件。 | true |\n| mybatis插件开关 | profiler.mybatis.enable | boolean | 取值：<br />- `true`：开启mybatis插件。<br />- `false`：关闭mybatis插件。 | true |\n| mysql插件开关 | profiler.mysql.enable | boolean | 取值：<br />- `true`：开启mysql插件。<br />- `false`：关闭mysql插件。 | true |\n| okhttp插件开关 | profiler.okhttp.enable | boolean | 取值：<br />- `true`：开启okhttp插件。<br />- `false`：关闭okhttp插件。 | true |\n| oracle插件开关 | profiler.oracle.enable | boolean | 取值：<br />- `true`：开启oracle插件。<br />- `false`：关闭oracle插件。 | true |\n| postgresql插件开关 | profiler.postgresql.enable | boolean | 取值：<br />- `true`：开启postgresql插件。<br />- `false`：关闭postgresql插件。 | true |\n| redis插件开关 | profiler.redis.enable | boolean | 取值：<br />- `true`：开启redis插件。<br />- `false`：关闭redis插件。 | true |\n| spring插件开关 | profiler.spring.enable | boolean | 取值：<br />- `true`：开启spring插件。<br />- `false`：关闭spring插件。 | true |\n| springboot插件开关 | profiler.springboot.enable | boolean | 取值：<br />- `true`：开启springboot插件。<br />- `false`：关闭springboot插件。 | true |\n| tomcat插件开关 | profiler.tomcat.enable | boolean | 取值：<br />- `true`：开启tomcat插件。<br />- `false`：关闭tomcat插件。 | true |\n| lettuce插件开关 | profiler.lettuce.enable | boolean | 取值：<br />- `true`：开启lettuce插件。<br />- `false`：关闭lettuce插件。 | true |\n| grpc插件开关 | profiler.grpc.enable | boolean | 取值：<br />- `true`：开启grpc插件。<br />- `false`：关闭grpc插件。 | true |\n| thrift插件开关 | profiler.thrift.enable | boolean | 取值：<br />- `true`：开启thrift插件。<br />- `false`：关闭thrift插件。 | true |\n| hystrix插件开关 | profiler.hystrix.enable | boolean | 取值：<br />- `true`：开启hystrix插件。<br />- `false`：关闭hystrix插件。 | true |\n| rxjava插件开关 | profiler.rxjava.enable | boolean | 取值：<br />- `true`：开启rxjava插件。<br />- `false`：关闭rxjava插件。 | true |\n| memcached插件开关 | profiler.memcached.enable | boolean | 取值：<br />- `true`：开启memcached插件。<br />- `false`：关闭memcached插件。 | true |\n| druid插件开关 | profiler.jdbc.druid.enable | boolean | 取值：<br />- `true`：开启druid插件。<br />- `false`：关闭druid插件。 | true |\n| weblogic插件开关 | profiler.weblogic.enable | boolean | 取值：<br />- `true`：开启weblogic插件。<br />- `false`：关闭weblogic插件。 | true |\n| elasticjob插件开关 | profiler.elasticjob.enable | boolean | 取值：<br />- `true`：开启elasticjob插件。<br />- `false`：关闭elasticjob插件。 | true |\n| elasticsearch插件开关 | profiler.elasticsearch.enable | boolean | 取值：<br />- `true`：开启elasticsearch插件。<br />- `false`：关闭elasticsearch插件。 | true |\n| hikaricp插件开关 | profiler.jdbc.hikaricp.enable | boolean | 取值：<br />- `true`：开启hikaricp插件。<br />- `false`：关闭hikaricp插件。 | true |\n| influxdb插件开关 | profiler.influxdb.enable | boolean | 取值：<br />- `true`：开启influxdb插件。<br />- `false`：关闭influxdb插件。 | true |\n| kafka插件开关 | profiler.kafka.enable | boolean | 取值：<br />- `true`：开启kafka插件。<br />- `false`：关闭kafka插件。 | true |\n| netty插件开关 | profiler.netty.enable | boolean | 取值：<br />- `true`：开启netty插件。<br />- `false`：关闭netty插件。 | true |\n| play插件开关 | profiler.play.enable | boolean | 取值：<br />- `true`：开启play插件。<br />- `false`：关闭play插件。 | true |\n| reactor插件开关 | profiler.reactor.enable | boolean | 取值：<br />- `true`：开启reactor插件。<br />- `false`：关闭reactor插件。 | true |\n| redisson插件开关 | profiler.redis.redisson.enable | boolean | 取值：<br />- `true`：开启redisson插件。<br />- `false`：关闭redisson插件。 | true |\n| rabbitmq插件开关 | profiler.rabbitmq.client.enable | boolean | 取值：<br />- `true`：开启rabbitmq插件。<br />- `false`：关闭rabbitmq插件。 | true |\n| schedulerx插件开关 | profiler.schedulerx.enable | boolean | 取值：<br />- `true`：开启schedulerx插件。<br />- `false`：关闭schedulerx插件。 | true |\n| undertow插件开关 | profiler.undertow.enable | boolean | 取值：<br />- `true`：开启undertow插件。<br />- `false`：关闭undertow插件。 | true |\n| vertx插件开关 | profiler.vertx.enable | boolean | 取值：<br />- `true`：开启vertx插件。<br />- `false`：关闭vertx插件。 | true |\n| xxljob插件开关 | profiler.xxljob.enable | boolean | 取值：<br />- `true`：开启xxljob插件。<br />- `false`：关闭xxljob插件。 | true |\n| onsclient插件开关 | profiler.onsclient.enable | boolean | 取值：<br />- `true`：开启onsclient插件。<br />- `false`：关闭onsclient插件。 | true |\n| quartz插件开关 | profiler.quartz.enable | boolean | 取值：<br />- `true`：开启quartz插件。<br />- `false`：关闭quartz插件。 | true |\n| servlet插件开关 | profiler.servlet.enable | boolean | 取值：<br />- `true`：开启servlet插件。<br />- `false`：关闭servlet插件。 | true |\n| liberty插件开关 | profiler.liberty.enable | boolean | 取值：<br />- `true`：开启liberty插件。<br />- `false`：关闭liberty插件。 | true |\n| akka插件开关 | profiler.akka.enable | boolean | 取值：<br />- `true`：开启akka插件。<br />- `false`：关闭akka插件。 | true |\n| cassandra插件开关 | profiler.cassandra.enable | boolean | 取值：<br />- `true`：开启cassandra插件。<br />- `false`：关闭cassandra插件。 | true |\n| opentelemetry插件开关 | profiler.opentelemetry.enable | boolean | 取值：<br />- `true`：开启opentelemetry插件。<br />- `false`：关闭opentelemetry插件。 | true |\n| googlehttpclient插件开关 | profiler.googlehttpclient.enable | boolean | 取值：<br />- `true`：开启googlehttpclient插件。<br />- `false`：关闭googlehttpclient插件。 | true |\n| ning插件开关 | profiler.ning.asynchttpclient.enable | boolean | 取值：<br />- `true`：开启ning插件。<br />- `false`：关闭ning插件。 | true |\n\n**线程分析设置说明**\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 线程分析总控开关 | profiler.tprof.enableJvmThreadStatistic | boolean | 取值：<br />- `true`：开启线程分析。<br />- `false`：关闭线程分析。 | true |\n| 定期保存本地方法栈信息 | profiler.tprof.enableThreadStackRecorder | boolean | 取值：<br />- `true`：开启定期保存本地方法栈。<br />- `false`：关闭定期保存本地方法栈。 | false |\n| 高耗时调用阈值 | profiler.tprof. threadProfilerSlowInteractionRt | int | 单位ms，高于该阈值的调用会自动保存本地方法栈。 | 2000 |\n\n**应用日志关联配置说明**\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 日志源 | profiler.logSource | String | 取值：<br />- `sls`：日志服务SLS。 | sls |\n| 自动关联业务日志与TraceId | profiler.logging.enable | boolean | 取值：<br />- `true`：开启关联功能。<br />- `false`：关闭关联功能。 | true |\n| 日志自动填充TraceId | profiler.logging.injectTraceId2Log.enable | boolean | 取值：<br />- `true`：开启自动填充功能。<br />- `false`：关闭自动填充功能。<br />探针版本**大于等于4.1.6**生效。 | true |\n| 日志自动填充SpanId | profiler.logging.injectSpanId2Log.enable | boolean | 取值：<br />- `true`：开启自动填充功能。<br />- `false`：关闭自动填充功能。<br />探针版本**大于等于4.1.6**生效。 | true |\n| 日志服务绑定-区域 | profiler.SLS.regionId | String | 关联日志源所在的地域。 | 空字符串 |\n| 日志服务绑定-Project | profiler.SLS.project | String | 关联日志源所属Project。 | 空字符串 |\n| 日志服务绑定-Logstore | profiler.SLS.logStore | String | 关联日志源Logstore。 | 空字符串 |\n| 日志服务绑定-关联索引 | profiler.SLS.index | String | 关联日志源索引。 | 空字符串 |\n\n**URL收敛配置说明**\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 收敛URL | profiler.convergence.enable | boolean | 取值：<br />- `true`：开启收敛URL功能。<br />- `false`：关闭收敛URL功能。 | true |\n| 收敛阈值 | profiler.convergence.minServerSize | long | 大于此阈值进行收敛。 | 1000 |\n| 收敛规则 | profiler.convergence.pattern | String | 每条规则是一个正则表达式。<br />例：`/service/(.*?)/demo`。<br />多个规则之间以英文逗号分隔。 | 空字符串 |\n\n**Arthas配置说明**\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| Arthas开关 | profiler.arthas.enable | boolean | 取值：<br />- `true`：开启Arthas功能。<br />- `false`：关闭Arthas功能。 | false |\n| 生效实时IP | profiler.arthas.enableIps | string | 开启Arthas功能的生效IP，多个IP用英文逗号分隔。<br />**空字符串表示对所有IP生效。** | 空字符串 |\n\n**持续剖析配置说明**\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 总开关 | profiler.cp.enable | boolean | 取值：<br />- `true`：开启持续剖析功能。<br />- `false`：关闭持续剖析功能。<br />*该开关开启后，有两种配置模式，见下表。 | false |\n| CPU热点 | profiler.cp.cpuEnable | boolean | 取值：<br />- `true`：开启CPU热点功能。<br />- `false`：关闭CPU热点功能。 | false |\n| 内存热点 | profiler.cp.allocEnable | boolean | 取值：<br />- `true`：开启内存热点功能。<br />- `false`：关闭内存热点功能。 | false |\n| 内存热点 | profiler.cp. wallClockEnable | boolean | 取值：<br />- `true`：开启代码热点功能。<br />- `false`：关闭代码热点功能。 | false |\n\n<table>\n<tr><th bgcolor=#F5F5F5>模式</th><th bgcolor=#F5F5F5>Key</th><th bgcolor=#F5F5F5>字段说明</th><th bgcolor=#F5F5F5>Value</th></tr>\n<tr><td rowspan=2>IP白名单</td><td>cp.allowIPs</td><td>IP白名单</td><td>指定开启持续剖析的实例IP，多个IP请使用英文逗号（,）分割。<br />示例：192.168.0.1,192.168.0.2</td></tr>\n<tr><td>cp.allowNetwork</td><td>网段地址</td><td>请传递空字符串，否则将无法正常使用。</td></tr>\n<tr><td rowspan=2>网段地址</td><td>cp.allowIPs</td><td>IP白名单</td><td>请传递空字符串，否则将无法正常使用。</td></tr>\n<tr><td>cp.allowNetwork</td><td>网段地址</td><td>命中此网段地址范围的IP实例打开该功能。<br />示例：192.168.2.0/24</td></tr>\n</table>\n\n**信息脱敏配置说明**\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 脱敏开关 | profiler.sanitizer.enable | boolean | 取值：<br />- `true`：开启脱敏功能。<br />- `false`：关闭脱敏功能。 | true |\n| 脱敏规则 | profiler.sanitizer.keys | String | 对敏感key包含词的匹配规则，不区分大小写，多个IP用英文逗号分隔。 | true |\n\n**接口调用配置说明**\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 慢调用阈值 | profiler.thresholds.interface | long | 单位ms，高于该阈值的响应时间会被标记为慢调用。 | 500 |\n| 异常白名单 | profiler.exception.whitelist | String | 指定异常名正则表达式，白名单命中的异常不参与异常相关图表的统计，多个规则用英文逗号分隔。 | 空字符串 |\n| 异常过滤父类继承 | profiler.exception.filterByParentClass | boolean | 取值：<br />- `true`：开启该功能。<br />- `false`：关闭该功能。<br />打开后，异常过滤中可配置父类异常。<br />探针版本**大于等于4.1.6**生效。 | true |\n| HTTP状态码白名单 | profiler.error.skip | String | 指定忽略错误的HTTP状态码，白名单设置中的状态码将在错误统计中被忽略，多个状态码用英文逗号分隔。 | 空字符串 |\n| 无效接口调用过滤 | profiler.defined.excludeurl | String | 指定忽略的接口调用，每条规则是一个正则表达式，多个状态码用英文逗号分隔。 | /\\*\\*/\\*.jpg,/\\*\\*/\\*.png,/\\*\\*/\\*.js,<br />/\\*\\*/\\*.jpeg,/\\*\\*/\\*.pdf,/\\*\\*/\\*.xlsx,<br />/\\*\\*/\\*.txt,/\\*\\*/\\*.docs,/\\*\\*/\\*.gif,<br />/\\*\\*/\\*.csv |\n\n**数据库调用配置说明**\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 慢SQL阈值 | profiler.thresholds.sql | long | 单位ms，高于该阈值的SQL调用会被标记为慢调用。 | 500 |\n| 采集SQL最大保留长度 | profiler.callsql.maxLength | long | 当SQL语句大于该阈值的时候，会被截断。 | 1024 |\n| 展示SQL中的变量绑定值 | profiler.jdbc.tracesqlbindvalue | boolean | 取值：<br />- `true`：开启该功能。<br />- `false`：关闭该功能。<br />开启后会捕获PrepareStatement参数绑定的变量值，并在页面展示。**仅支持MySQL**。 | false |\n| 展示SQL中的常量值 | profiler.jdbc. tracesqlraw | boolean | 取值：<br />- `true`：开启该功能。<br />- `false`：关闭该功能。<br />开启后捕获原始SQL语句。 | false |\n\n**调用链透传协议配置说明**\n\n****注：调用链透传协议配置仅在探针版本大于等于4.1.x时生效。****\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 透传协议 | profiler.trace.protocol.name | String | 取值：<br />- `Unset`：未设置。<br />- `W3C `：OpenTelemetry - W3C。<br />- `SkyWalking `：SkyWalking。<br />- `Zipkin `：Zipkin - B3。<br />- `Jaeger `：Jaeger。<br />- `EagleEye `：EagleEye。 | Unset |\n| 透传模式 | profiler.trace.protocol. strategy | String | 取值：<br />- `PriorityUse `：优先。<br />- `ForceUse `：强制。 | PriorityUse |\n\n**高级配置说明**\n| 配置说明 | JSONPath | Type | 备注 | 默认值 |\n|---|---|---|---|---|\n| 探针每秒最大链路采集量 | profiler.thresholds.limit | int | 保护性手段，防止大流量场景下因为链路采集影响业务正常运行。 | 100 |\n| 方法堆栈最大保留长度 | profiler.callstack.maxLength | int | 超出长度的方法栈将会在采集的时候被截断。<br />探针版本**大于等于4.0.0**已弃用该配置。 | 128 |\n| 同类异常堆栈区分深度 | profiler.exception.stacktrace | int | 基于此堆栈深度识别同类型的异常。 | 2 |\n| 请求入参最大展示长度 | profiler.param.maxLength | int | 请求入参最大展示的长度。 | 512 |\n| 自定义RabbitMQ消费者 | profiler.rabbitmq.client.consumer.classes | String | 指定RabbitMQ消费者的全类名，多个消费者用英文逗号分隔。<br />探针版本**大于等于4.0.0**已弃用该配置。 | 空字符串 |\n| 自定义Kafka消费方法 | profiler.kafka.consumer.entryPoint | String | 指定kafka消费者的消费。<br />探针版本**大于等于4.0.0**已弃用该配置。 | 空字符串 |\n| kafka发送消息自动透传上下文 | profiler.kafka.enableInjectKafkaHeaders | boolean | 发送时是否自动往kafka消息中添加若干个Header用以将发送链路以及消费链路关联。<br />探针版本**大于等于4.0.0**已弃用该配置。 | false |\n| 异步透传扫描包名 | profiler.thread.match.package | String | 当对应包名下的Runnable/Callable/Supplier在创建时，会自动捕获Trace上下文并传递到新线程。多个包名可采用英文逗号（,）分隔。<br />探针版本**大于等于4.0.0**已弃用该配置。 | 空字符串 |\n| HTTP返回结果中包含TraceId | profiler.responseInject.enable | boolean | 取值：<br />- `true`：开启返回TraceId的开关。<br />- `false`：关闭返回TraceId的开关。 | false |"}