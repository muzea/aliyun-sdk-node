{"summary":"上传离线文本质检数据（纯文本会话）：适用于在线坐席场景。\n推荐使用UploadDataV4接口。\nUploadDataV4与UploadData的差异：1、V4仅支持POST请求。2、V4支持更长的JsonStr。","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","riskType":"high","chargeType":"paid"},"parameters":[{"name":"JsonStr","in":"formData","schema":{"description":"jsonStr是一个JSON字符串，里面是该接口所有的自定义参数，具体内容参见下方的jsonStr属性说明。","type":"string","required":true,"docRequired":true,"example":"xxx"}},{"name":"BaseMeAgentId","in":"formData","schema":{"title":"业务空间Id","description":"业务空间Id，用于区分多业务空间场景下选择指定业务空间，默认为默认业务空间。","type":"integer","format":"int64","required":false,"example":"123456"}}],"responses":{"200":{"schema":{"description":"返回参数","type":"object","properties":{"Code":{"description":"结果代码，200表示成功，若为别的值则表示失败，调用方可根据此字段判断失败原因。","type":"string","example":"200"},"Message":{"description":"出错时表示出错详情，成功时为successful。","type":"string","example":"successful"},"Data":{"description":"该任务的taskId。","type":"string","example":"6F5934C7-C223-4F0F-BBF3-5B3594***"},"RequestId":{"description":"请求ID，请求唯一标识，可以用来定位追踪请求。","type":"string","example":"6F5934C7-C223-4F0F-BBF3-5B3594***"},"Success":{"description":"请求是否成功，调用方可根据此字段来判断请求是否成功：true表示成功；false/null表示失败。","type":"boolean","example":"true"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"Code\\\": \\\"200\\\",\\n  \\\"Message\\\": \\\"successful\\\",\\n  \\\"Data\\\": \\\"6F5934C7-C223-4F0F-BBF3-5B3594***\\\",\\n  \\\"RequestId\\\": \\\"6F5934C7-C223-4F0F-BBF3-5B3594***\\\",\\n  \\\"Success\\\": true\\n}\",\"type\":\"json\"}]","title":"上传文本质检V4","description":"调用UploadData.json上传文本质检数据，文本通常来源于在线客服、工单等，接口会返回taskId，您可以通过3种方式获取结果：\n- 消息通知：详情请查看[消息队列](https://help.aliyun.com/document_detail/213237.html)，收到消息后再通过GetResult接口获取详细结果。（推荐）\n- 回调：通过在请求参数中指定callbackUrl，在任务完成后由系统主动发起回调；接到回调后再通过GetResult接口获取详细结果。\n- 轮询：通过此接口返回的任务ID轮询GetResult接口异步获取结果，判断返回中的status是否完成。（不推荐）。","requestParamsDescription":"## jsonStr属性说明：\n\n| 属性         | 值类型  | 是否必须 | 说明                                                         |\n| ------------ | ------- | -------- | ------------------------------------------------------------ |\n| isSchemeData | Integer | 否       | 是否将数据上传至新版智能对话分析，取值：0（否）；1（是），默认值为0。 |\n| tickets      | List    | 是       | 待检文本数据信息，每个元素是一个完整对话，详见下方**jsonStr.tickets属性说明。** |\n| ruleIds      | List    | 否       | 规则ID列表，用于指定录音文件使用哪些规则进行质检分析，若不指定，则会过所有规则；注意：单个文件允许最大规则数为100，如果超过100，则会截取前100个规则。（只能使用离线质检规则，不可使用实时质检规则） **（新版不适用，仅旧版智能对话分析适用）** |\n| business     | String  | 否       | 业务线名称，用于分类统计，此请求中的数据应该都属于一个业务线。 |\n| callbackUrl  | String  | 否       | 回调地址，不指定则不回调，请保证回调地址与SCA应用的连通性，不支持IP；质检分析完成后会发起回调；详细说明请查看下方的**回调参数说明** |\n\n## jsonStr.tickets属性说明：\n\n| 属性                | 值类型  | 是否必须 | 说明                                                         |\n| ------------------- | ------- | -------- | ------------------------------------------------------------ |\n| dialogue            | List    | 是       | 待检文本对话，详见下方**dialogue属性说明。**                 |\n| tid                 | String  | 否       | 本段对话ID，注意不要重复；若不提供，则会随机生成一个UUID。   |\n| fileName            | String  | 否       | 文本名称。                                                   |\n| customerServiceId   | Long    | 否       | 客服ID。可从控制台-基础设置-人员管理页面获取，正确填入客服ID，客服登录控制塔时可以查看与自己关联的文件。 |\n| customerServiceName | String  | 否       | 客服姓名。                                                   |\n| skillGroupId        | String  | 否       | 坐席所在技能组ID。                                           |\n| skillGroupName      | String  | 否       | 坐席所在技能组名称。                                         |\n| callType            | Integer | 否       | 呼叫类型，可选值：1（呼出）；3（呼入）。适用于您本地已经安装有录音转文本服务，直接将文本上传到SCA系统时的场景，来指定该通话的呼叫类型。 |\n| sessionGroupId      | String  | 否       | 会话组ID，通常把同一个客服和同一个客户的会话称之为一个会话组，当传入会话组ID后，可在会话组结果页查看会话组维度的质检结果。**（仅新版智能对话分析适用）** |\n| customerId          | String  | 否       | 客户ID。**（仅新版智能对话分析适用）**                       |\n| customerName        | String  | 否       | 客户姓名。**（仅新版智能对话分析适用）**                     |\n| schemeTaskConfigId  | String  | 否       | 手动指定的质检任务ID（手动指定后则会使用指定的质检任务进行质检） 。**（仅新版智能对话分析适用）** |\n| remark1             | String  | 否       | 自定义数据1，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark2             | String  | 否       | 自定义数据2，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark3             | String  | 否       | 自定义数据3，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark4             | String  | 否       | 自定义数据4，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark5             | Long    | 否       | 自定义数据5，可以存放与您业务相关的自定义字段，格式为有符号的long型。 |\n| remark6             | String  | 否       | 自定义数据6，可以存放与您业务相关的自定义字段，最大长度为1024字符。 |\n| remark7             | String  | 否       | 自定义数据7，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark8             | String  | 否       | 自定义数据8，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark9             | String  | 否       | 自定义数据9，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark10            | String  | 否       | 自定义数据10，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark11            | String  | 否       | 自定义数据11，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark12            | String  | 否       | 自定义数据12，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark13            | String  | 否       | 自定义数据13，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark14            | Long    | 否       | 自定义数据14，可以存放与您业务相关的自定义字段，格式为有符号的long型。 |\n| remark15            | Long    | 否       | 自定义数据15，可以存放与您业务相关的自定义字段，格式为有符号的long型。 |\n| remark16            | String  | 否       | 自定义数据16，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark17            | String  | 否       | 自定义数据17，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark18            | String  | 否       | 自定义数据18，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark19            | String  | 否       | 自定义数据19，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark20            | String  | 否       | 自定义数据20，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark21            | String  | 否       | 自定义数据21，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark22            | String  | 否       | 自定义数据22，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark23            | String  | 否       | 自定义数据23，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark24            | String  | 否       | 自定义数据24，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| remark25            | String  | 否       | 自定义数据25，可以存放与您业务相关的自定义字段，最大长度为64字符。 |\n| jsonParamStr        | String  | 否       | 更多自定义字段，格式为JSON字符串，key为字段名称，value为字段内容，示例：{\"客户等级\": 3,\"渠道\":\"官网\"}。 |\n\n## dialogue属性说明：\n\n| 属性                | 值类型  | 是否必须 | 说明                                                         |\n| ------------------- | ------- | -------- | ------------------------------------------------------------ |\n| role                | String  | 是       | 对话内容角色，取值：客服、客户。                             |\n| customerServiceType | Integer | 否       | 区分角色是人工还是机器人，取值：0（人工），1（机器人），默认值：0。该字段作用：若为机器人，则在复核页面展示的头像为机器人头像。 |\n| identity            | String  | 否       | 对话角色的具体身份标识。                                     |\n| words               | String  | 是       | 这个角色说的一句话，仅支持UTF-8编码，若句子包含表情包，请查看下方**表情包显示说明** |\n| type                | String  | 否       | 当前句子类型，取值：TEXT（文本）；AUDIO（语音）；IMAGE（图片），图片可在复核详情页显示，音频可在复核详情页中播放，默认为TEXT，当为AUDIO或IMAGE时，words字段中传入对应资源的URL地址即可。（**仅新版智能对话分析适用**） |\n| begin               | Integer | 是       | 本句话的开始时间，是相对起始点的开始时间偏移，单位ms。       |\n| end                 | Integer | 是       | 本句话的结束时间，是相对起始点的结束时间偏移，单位ms。       |\n| beginTime           | Date    | 是       | 这句话的开始时间，示例值：2019-11-25 15:37:16。              |\n\n## 表情包显示说明\n在复核详情页查看对话详情时，仅支持通用Emoji表情包的展示，上传时，需将表情替换为UTF8字符集的字符，例如&#128512；笑脸表情对应的字符为`&#128512;`，以&#开头，分号结尾，相关文档说明：[Emoji字符对照表](https://www.runoob.com/charsets/ref-emoji.html)，[HTML页面展示字符说明](https://www.runoob.com/charsets/ref-html-symbols.html)\n\n## 回调参数说明\n假设调用方传入的回调地址是：`http://aliyun.com/callback`，那么回调时的完整URL为`http://aliyun.com/callback?taskId=xxx&timestamp=xxx&signature=xxx&event=xxx`，其中：\n\n- taskId：为任务id\n- timestamp：为调用时的时间戳，单位：毫秒\n- aliUid：为调用方阿里云主账号uid\n- signature：为签名，调用方可用来判断请求是否来自阿里云；计算说明：将`taskId=xxx&timestamp=xxx&aliUid=xxx`，进行md5+base64加密，注意顺序；调用方接到回调后，taskId和timestamp可以从回调URL中获取，aliUid即为阿里云主账号ID。通过计算来比对自己计算出的signature，与URL中的signature是否一致，详见下方Java代码示例。\n- event：为事件名称，调用方可用来判断是什么事件触发的回调，取值为TaskComplete：任务完成时的回调；\n\n```\npublic static void signature() {\n    long timestamp = System.currentTimeMillis();\n    String taskId = \"xxxx\";\n    String aliUid = \"xxxxx\";\n    // 将 taskId=xxx&timestamp=xxx&aliUid=xxx 进行md5 + base64加密，放在signature字段\n    String signature;\n    try {\n        signature = URLEncoder.encode(md5Base64(\"taskId=\" + taskId + \"&timestamp=\" + timestamp + \"&aliUid=\" + aliUid), \"utf-8\");\n        System.out.println(signature);\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n}\n\npublic static String md5Base64(String str) throws NoSuchAlgorithmException {\n    //string 编码必须为utf-8\n    byte[] utfBytes = str.getBytes(StandardCharsets.UTF_8);\n    MessageDigest mdTemp = MessageDigest.getInstance(\"MD5\");\n    mdTemp.update(utfBytes);\n    byte[] md5Bytes = mdTemp.digest();\n    return Base64.encodeBase64String(md5Bytes);\n}\n```"}