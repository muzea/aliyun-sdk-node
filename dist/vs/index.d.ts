interface VS {
    BatchBindTemplate(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "InstanceType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "TemplateId": string;
        "ApplyAll"?: boolean;
        "Replace"?: boolean;
    }): Promise<{}>;
    BatchBindTemplates(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "InstanceType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "TemplateId": string;
        "ApplyAll"?: boolean;
        "Replace"?: boolean;
    }): Promise<{}>;
    BatchDeleteDevices(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    BatchForbidVsStream(query: {
        "RegionId"?: string;
        "Channel": string;
        "LiveStreamType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
        "Oneshot"?: string;
        "ControlStreamAction"?: string;
        "ResumeTime"?: string;
    }): Promise<{}>;
    BatchResumeVsStream(query: {
        "RegionId"?: string;
        "Channel": string;
        "LiveStreamType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
        "ControlStreamAction"?: string;
    }): Promise<{}>;
    BatchStartDevices(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    BatchStartStreams(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    BatchStopDevices(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "StartTime"?: string;
    }): Promise<{}>;
    BatchStopStreams(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "StartTime"?: string;
    }): Promise<{}>;
    BatchUnbindTemplate(query: {
        "RegionId"?: string;
        "InstanceType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "InstanceId": string;
        "TemplateId"?: string;
        "TemplateType"?: string;
    }): Promise<{}>;
    BatchUnbindTemplates(query: {
        "RegionId"?: string;
        "InstanceType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "InstanceId": string;
        "TemplateId"?: string;
        "TemplateType"?: string;
    }): Promise<{}>;
    BindTemplate(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "InstanceType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "TemplateId": string;
        "ApplyAll"?: boolean;
        "Replace"?: boolean;
    }): Promise<{}>;
    CreateDevice(query: {
        "RegionId"?: string;
        "Type": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "GroupId": string;
        "Name"?: string;
        "Description"?: string;
        "ParentId"?: string;
        "AutoStart"?: boolean;
        "GbId"?: string;
        "Ip"?: string;
        "Port"?: number;
        "Url"?: string;
        "Username"?: string;
        "Password"?: string;
        "Vendor"?: string;
    }): Promise<{}>;
    CreateGroup(query: {
        "RegionId"?: string;
        "InProtocol": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Name": string;
        "Description"?: string;
        "App"?: string;
        "Region"?: string;
        "OutProtocol"?: string;
        "PushDomain"?: string;
        "PlayDomain"?: string;
        "LazyPull"?: boolean;
        "Callback"?: string;
    }): Promise<{}>;
    CreateTemplate(query: {
        "RegionId"?: string;
        "Type": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Name": string;
        "Description"?: string;
        "Region"?: string;
        "OssBucket"?: string;
        "OssEndpoint"?: string;
        "OssFilePrefix"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: number;
        "Retention"?: number;
        "FileFormat"?: string;
        "JpgOverwrite"?: string;
        "JpgSequence"?: string;
        "Mp4"?: string;
        "Flv"?: string;
        "HlsM3u8"?: string;
        "HlsTs"?: string;
        "Callback"?: string;
    }): Promise<{}>;
    DeleteDevice(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    DeleteGroup(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    DeleteTemplate(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    DeleteVsStreamsNotifyUrlConfig(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
    }): Promise<{}>;
    DescribeDevice(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "IncludeStats"?: boolean;
    }): Promise<{}>;
    DescribeDevices(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "Id"?: string;
        "Name"?: string;
        "Type"?: string;
        "GroupId"?: string;
        "ParentId"?: string;
        "GbId"?: string;
        "Status"?: string;
        "Vendor"?: string;
        "SortBy"?: string;
        "SortDirection"?: string;
        "PageSize"?: number;
        "PageNum"?: number;
        "IncludeStats"?: boolean;
    }): Promise<{}>;
    DescribeGroup(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "IncludeStats"?: boolean;
    }): Promise<{}>;
    DescribeGroups(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "Id"?: string;
        "Name"?: string;
        "Region"?: string;
        "InProtocol"?: string;
        "Status"?: string;
        "SortBy"?: string;
        "SortDirection"?: string;
        "PageSize"?: number;
        "PageNum"?: number;
        "IncludeStats"?: boolean;
    }): Promise<{}>;
    DescribeRecords(query: {
        "RegionId"?: string;
        "StreamId": string;
        "StartTime": string;
        "EndTime": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Type": string;
        "SortBy"?: string;
        "SortDirection"?: string;
        "PageSize"?: number;
        "PageNum"?: number;
    }): Promise<{}>;
    DescribeStream(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    DescribeStreamURL(query: {
        "RegionId"?: string;
        "OutProtocol": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "Type"?: string;
        "Location"?: string;
        "Auth"?: boolean;
        "AuthKey"?: string;
        "Expire"?: number;
    }): Promise<{}>;
    DescribeStreams(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "Id"?: string;
        "GroupId"?: string;
        "DeviceId"?: string;
        "ParentId"?: string;
        "Name"?: string;
        "Domain"?: string;
        "App"?: string;
        "SortBy"?: string;
        "SortDirection"?: string;
        "PageSize"?: number;
        "PageNum"?: number;
    }): Promise<{}>;
    DescribeTemplate(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    DescribeTemplates(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "Id"?: string;
        "Type"?: string;
        "InstanceId"?: string;
        "SortBy"?: string;
        "SortDirection"?: string;
        "PageSize"?: number;
        "PageNum"?: number;
    }): Promise<{}>;
    DescribeVsDomainBpsData(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
    }): Promise<{}>;
    DescribeVsDomainRecordData(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeVsDomainReqBpsData(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
    }): Promise<{}>;
    DescribeVsDomainReqTrafficData(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
    }): Promise<{}>;
    DescribeVsDomainSnapshotData(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeVsDomainTrafficData(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
    }): Promise<{}>;
    DescribeVsStreamsNotifyUrlConfig(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
    }): Promise<{}>;
    DescribeVsStreamsOnlineList(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
        "AppName"?: string;
        "StreamName"?: string;
        "PageSize"?: number;
        "PageNum"?: number;
        "StreamType"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "QueryType"?: string;
        "OrderBy"?: string;
    }): Promise<{}>;
    DescribeVsStreamsPublishList(query: {
        "RegionId"?: string;
        "StartTime": string;
        "EndTime": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
        "AppName"?: string;
        "StreamName"?: string;
        "PageSize"?: number;
        "PageNumber"?: number;
        "StreamType"?: string;
        "QueryType"?: string;
        "OrderBy"?: string;
    }): Promise<{}>;
    DescribeVsUpPeakPublishStreamData(query: {
        "RegionId"?: string;
        "EndTime": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "StartTime": string;
        "DomainSwitch"?: string;
        "DomainName"?: string;
    }): Promise<{}>;
    DescribeVsUserResourcePackage(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
    }): Promise<{}>;
    ForbidVsStream(query: {
        "RegionId"?: string;
        "AppName": string;
        "StreamName": string;
        "LiveStreamType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
        "Oneshot"?: string;
        "ControlStreamAction"?: string;
        "ResumeTime"?: string;
    }): Promise<{}>;
    ModifyDevice(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "Name"?: string;
        "Description"?: string;
        "GroupId"?: string;
        "ParentId"?: string;
        "Type"?: string;
        "AutoStart"?: boolean;
        "GbId"?: string;
        "Ip"?: string;
        "Port"?: number;
        "Url"?: string;
        "Username"?: string;
        "Password"?: string;
        "Vendor"?: string;
    }): Promise<{}>;
    ModifyGroup(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "Name"?: string;
        "Description"?: string;
        "Region"?: string;
        "InProtocol"?: string;
        "OutProtocol"?: string;
        "Enabled"?: boolean;
        "PushDomain"?: string;
        "PlayDomain"?: string;
        "LazyPull"?: boolean;
        "Callback"?: string;
    }): Promise<{}>;
    ModifyTemplate(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "Name"?: string;
        "Description"?: string;
        "Region"?: string;
        "OssBucket"?: string;
        "OssEndpoint"?: string;
        "OssFilePrefix"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: number;
        "Retention"?: number;
        "FileFormat"?: string;
        "JpgOverwrite"?: string;
        "JpgSequence"?: string;
        "Mp4"?: string;
        "Flv"?: string;
        "HlsM3u8"?: string;
        "HlsTs"?: string;
        "Callback"?: string;
    }): Promise<{}>;
    ResumeVsStream(query: {
        "RegionId"?: string;
        "AppName": string;
        "StreamName": string;
        "LiveStreamType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
        "ControlStreamAction"?: string;
    }): Promise<{}>;
    SetVsStreamsNotifyUrlConfig(query: {
        "RegionId"?: string;
        "NotifyUrl": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
        "AuthType"?: string;
        "AuthKey"?: string;
    }): Promise<{}>;
    StartDevice(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    StartStream(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    StopDevice(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "StartTime"?: string;
    }): Promise<{}>;
    StopStream(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "StartTime"?: string;
    }): Promise<{}>;
    UnbindTemplate(query: {
        "RegionId"?: string;
        "InstanceType": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "InstanceId": string;
        "TemplateId"?: string;
        "TemplateType"?: string;
    }): Promise<{}>;
    BatchDeleteVsDomainConfigs(query: {
        "RegionId"?: string;
        "FunctionNames": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainNames": string;
    }): Promise<{}>;
    BatchSetVsDomainConfigs(query: {
        "RegionId"?: string;
        "Functions": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainNames": string;
    }): Promise<{}>;
    DescribeDeviceChannels(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "PageSize"?: number;
        "PageNum"?: number;
    }): Promise<{}>;
    DescribeVodStreamURL(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Url": string;
        "TxId"?: string;
    }): Promise<{}>;
    DescribeVsCertificateDetail(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "CertName": string;
    }): Promise<{}>;
    DescribeVsCertificateList(query: {
        "RegionId"?: string;
        "ShowLog"?: string;
        "OwnerId"?: number;
        "DomainName"?: string;
    }): Promise<{}>;
    DescribeVsDomainCertificateInfo(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
    }): Promise<{}>;
    DescribeVsDomainConfigs(query: {
        "RegionId"?: string;
        "FunctionNames": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
    }): Promise<{}>;
    DescribeVsDomainDetail(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
    }): Promise<{}>;
    SetVsDomainCertificate(query: {
        "RegionId"?: string;
        "SSLProtocol": string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "DomainName": string;
        "CertName"?: string;
        "CertType"?: string;
        "SSLPub"?: string;
        "SSLPri"?: string;
        "Region"?: string;
        "ForceSet"?: string;
    }): Promise<{}>;
    SyncCatalogs(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    UnlockDevice(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
    }): Promise<{}>;
    ContinuousAdjust(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "Iris"?: string;
        "Focus"?: string;
    }): Promise<{}>;
    ContinuousMove(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "Pan"?: string;
        "Tilt"?: string;
        "Zoom"?: string;
    }): Promise<{}>;
    StopAdjust(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "Iris"?: boolean;
        "Focus"?: boolean;
    }): Promise<{}>;
    StopMove(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "ShowLog"?: string;
        "Id": string;
        "Pan"?: boolean;
        "Tilt"?: boolean;
        "Zoom"?: boolean;
    }): Promise<{}>;
}
export default VS;
