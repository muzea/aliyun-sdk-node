interface BATCHCOMPUTE {
    CancelImage(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    CreateCluster(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    CreateImage(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    DeleteApp(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    DeleteCluster(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    DeleteClusterInstance(query: {
        "RegionId"?: string;
        "GroupName": string;
        "InstanceId": string;
        "ClusterId": string;
    }): Promise<{}>;
    DeleteImage(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    DeleteJob(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    DeleteProject(query: {
        "RegionId"?: string;
        "ProjectName": string;
    }): Promise<{}>;
    GetApp(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    GetCluster(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    GetClusterInstance(query: {
        "RegionId"?: string;
        "GroupName": string;
        "InstanceId": string;
        "ClusterId": string;
    }): Promise<{}>;
    GetImage(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    GetInstance(query: {
        "RegionId"?: string;
        "TaskName": string;
        "InstanceId": string;
        "ResourceName": string;
    }): Promise<{}>;
    GetJob(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    GetJobDescription(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    GetQuota(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    GetTask(query: {
        "RegionId"?: string;
        "TaskName": string;
        "ResourceName": string;
    }): Promise<{}>;
    ListClusterInstances(query: {
        "RegionId"?: string;
        "GroupName": string;
        "ClusterId": string;
    }): Promise<{}>;
    ListClusters(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    ListImages(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    ListInstances(query: {
        "RegionId"?: string;
        "TaskName": string;
        "ResourceName": string;
    }): Promise<{}>;
    ListJobs(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    ListTasks(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    ModifyApp(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    PollForTask(query: {
        "RegionId"?: string;
        "WorkerId": string;
        "ClusterId": string;
    }): Promise<{}>;
    RecreateClusterInstance(query: {
        "RegionId"?: string;
        "GroupName": string;
        "InstanceId": string;
        "ClusterId": string;
    }): Promise<{}>;
    RenewClusterInstance(query: {
        "RegionId"?: string;
        "GroupName": string;
        "InstanceId": string;
        "ClusterId": string;
    }): Promise<{}>;
    ReportTaskStatus(query: {
        "RegionId"?: string;
        "WorkerId": string;
        "ClusterId": string;
    }): Promise<{}>;
    ReportWorkerStatus(query: {
        "RegionId"?: string;
        "WorkerId": string;
        "ClusterId": string;
    }): Promise<{}>;
    StartJob(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    StopJob(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    ListAvailableInstanceType(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    ChangeJobPriority(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
    CreateApp(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    CreateJob(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    ListApps(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    ListRegions(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    ModifyCluster(query: {
        "RegionId"?: string;
        "ResourceName": string;
    }): Promise<{}>;
}
export default BATCHCOMPUTE;
