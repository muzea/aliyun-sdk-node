interface CCC {
    CreateInstance(query: {
        "RegionId"?: string;
        "Name": string;
        "DomainName": string;
        "StorageMaxDays": number;
        "StorageMaxSize": number;
        "Description"?: string;
        "DirectoryId"?: string;
        "AdminRamId"?: string[];
        "PhoneNumbers"?: string[];
        "UserObject"?: string[];
        "PhoneNumber"?: string;
    }): Promise<{}>;
    CreateVoiceAppraise(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ContactFlowVersionId": string;
        "Content": string;
        "IsAppraise"?: boolean;
    }): Promise<{}>;
    DeleteJobGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobGroupId": string;
    }): Promise<{}>;
    DeleteSkillGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId": string;
    }): Promise<{}>;
    DeleteSurvey(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
        "SurveyId": string;
    }): Promise<{}>;
    DownloadOriginalStatisticsReport(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobGroupId": string;
    }): Promise<{}>;
    DownloadUnreachableContacts(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobGroupId": string;
    }): Promise<{}>;
    GetAgentState(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Dn"?: string;
        "AgentId"?: string;
    }): Promise<{}>;
    GetInstanceSummaryReportSinceMidnight(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    GetJob(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobId": string;
    }): Promise<{}>;
    GetJobDataUploadParams(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "FileName": string;
    }): Promise<{}>;
    GetJobGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobGroupId": string;
    }): Promise<{}>;
    GetJobStatusByCallId(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "CallId": string;
    }): Promise<{}>;
    GetJobTemplateDownloadParams(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
    }): Promise<{}>;
    GetServiceExtensions(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ServiceType": string;
    }): Promise<{}>;
    GetSurvey(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
        "SurveyId": string;
    }): Promise<{}>;
    LaunchShortMessageAppraise(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Acid": string;
        "ContactType": number;
        "PhoneNumbers": string;
        "SkillGroupId"?: string;
    }): Promise<{}>;
    ListAgentEvents(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "RamId": string[];
        "StartTime"?: number;
        "StopTime"?: number;
        "Event"?: string[];
    }): Promise<{}>;
    ListMedias(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber": number;
        "PageSize": number;
        "NamePrefix"?: string;
    }): Promise<{}>;
    ListPrivacyNumberCallDetails(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber": number;
        "PageSize": number;
        "StartTime"?: number;
        "EndTime"?: number;
        "ContactId"?: string;
        "AgentId"?: string;
        "AgentName"?: string;
    }): Promise<{}>;
    ModifySkillGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId": string;
        "Name": string;
        "Description"?: string;
        "RoutingStrategy"?: string;
        "OutboundPhoneNumberId"?: string[];
        "UserId"?: string[];
        "SkillLevel"?: number[];
        "AllowPrivateOutboundNumber"?: boolean;
    }): Promise<{}>;
    QueryRedialIndicator(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ContactId": string;
        "MockResponse"?: boolean;
    }): Promise<{}>;
    SendPredefinedShortMessage(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PhoneNumbers": string;
        "ConfigId": number;
        "TemplateParam"?: string;
    }): Promise<{}>;
    StartBack2BackCall(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Caller": string;
        "Callee": string;
        "WorkflowId"?: string;
        "CallCenterNumber"?: string;
    }): Promise<{}>;
    GetJobFileUploadUrl(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "FileName": string;
    }): Promise<{}>;
    ModifyCabInstance(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "InstanceName"?: string;
        "InstanceDescription"?: string;
        "MaxConcurrentConversation"?: number;
        "CallCenterInstanceId"?: string;
    }): Promise<{}>;
    AddAgentDevice(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ClientIp": string;
        "BrowserVersion": string;
        "ClientPort"?: string;
        "Remark"?: string;
    }): Promise<{}>;
    AddBulkPhoneNumbers(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Usage": string;
        "PhoneNumber": string[];
        "ContactFlowId"?: string;
        "SkillGroupId"?: string[];
    }): Promise<{}>;
    AddNumberToSkillGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId": string;
        "Number": string;
    }): Promise<{}>;
    AddPhoneNumber(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PhoneNumber": string;
        "Usage": string;
        "ContactFlowId"?: string;
    }): Promise<{}>;
    AssignJobs(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
        "JobsJson": string[];
        "GroupId"?: string;
        "StrategyJson"?: string;
        "CallingNumber"?: string[];
    }): Promise<{}>;
    AssignUsers(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "UserRamId": string[];
        "RoleId"?: string[];
        "SkillGroupId"?: string[];
        "SkillLevel"?: number[];
    }): Promise<{}>;
    CallOnlinePrivacyNumber(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "TelA": string;
        "TelB": string;
    }): Promise<{}>;
    CancelJobs(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "All": boolean;
        "ScenarioId"?: string;
        "GroupId"?: string;
        "JobId"?: string[];
        "JobReferenceId"?: string[];
    }): Promise<{}>;
    CommitContactFlowVersionModification(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ContactFlowVersionId": string;
        "Canvas": string;
        "Content": string;
    }): Promise<{}>;
    CreateBatchJobs(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "ScenarioId": string;
        "Submitted": boolean;
        "Description"?: string;
        "StrategyJson"?: string;
        "CallingNumber"?: string[];
        "JobFilePath"?: string;
    }): Promise<{}>;
    CreateCCCPostOrder(query: {
        "RegionId"?: string;
        "OwnerId": string;
    }): Promise<{}>;
    CreateCabInstance(query: {
        "RegionId"?: string;
        "InstanceName": string;
        "MaxConcurrentConversation": number;
        "InstanceDescription"?: string;
        "CallCenterInstanceId"?: string;
    }): Promise<{}>;
    CreateContactFlow(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "Type": string;
        "Canvas": string;
        "Content": string;
        "Description"?: string;
    }): Promise<{}>;
    CreateFault(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "AgentId": number;
        "ConnectId": string;
        "StartTime": number;
        "EndTime": number;
        "AgentOssFileName"?: string;
        "AgentFilePath"?: string;
        "CustomOssFileName"?: string;
        "CustomFilePath"?: string;
        "Description"?: string;
        "ClientIp"?: string;
        "ClientPort"?: string;
        "OperatingSystemVersion"?: string;
        "BrowserVersion"?: string;
        "MicrophoneList"?: string;
        "MicrophoneEquipment"?: string;
        "SpeakerList"?: string;
        "SpeakerEquipment"?: string;
        "ServiceIp"?: string;
        "ServicePort"?: string;
    }): Promise<{}>;
    CreateJobGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "Description"?: string;
        "ScenarioId"?: string;
        "StrategyJson"?: string;
        "CallingNumber"?: string[];
    }): Promise<{}>;
    CreateMedia(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "FileName": string;
        "Type": string;
        "OssFileName": string;
        "OssFilePath": string;
        "UploadResult": string;
        "Description"?: string;
        "Content"?: string;
    }): Promise<{}>;
    CreateScenario(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "Description"?: string;
        "StrategyJson"?: string;
        "Type"?: string;
        "SurveysJson"?: string[];
    }): Promise<{}>;
    CreateScenarioFromTemplate(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "TemplateId": string;
        "Description"?: string;
        "Variables"?: string;
    }): Promise<{}>;
    CreateSkillGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "Description"?: string;
        "RoutingStrategy"?: string;
        "OutboundPhoneNumberId"?: string[];
        "UserId"?: string[];
        "SkillLevel"?: number[];
        "AllowPrivateOutboundNumber"?: boolean;
    }): Promise<{}>;
    CreateSurvey(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
        "Name": string;
        "Description"?: string;
        "FlowJson"?: string;
        "Corpora"?: string;
        "SpeechOptimizationParam"?: string;
        "GlobalQuestions"?: string;
        "Role"?: string;
        "Round"?: number;
    }): Promise<{}>;
    CreateUser(query: {
        "RegionId"?: string;
        "DisplayName": string;
        "InstanceId": string;
        "LoginName": string;
        "Email": string;
        "RoleId": string[];
        "Phone"?: string;
        "PrivateOutboundNumberId"?: string;
        "SkillGroupId"?: string[];
        "SkillLevel"?: number[];
    }): Promise<{}>;
    DeleteInstance(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    DeleteMedia(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
    }): Promise<{}>;
    DialEx(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Caller": string;
        "Callee": string;
        "RoutPoint": string;
        "AnswerMode": number;
        "Provider"?: string;
    }): Promise<{}>;
    Dialogue(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "CallId": string;
        "CallType": string;
        "CallingNumber": string;
        "CalledNumber": string;
        "ScenarioId"?: string;
        "TaskId"?: string;
        "Utterance"?: string;
        "ActionKey"?: string;
        "ActionParams"?: string;
        "InstanceOwnerId"?: number;
    }): Promise<{}>;
    DownloadAllTypeRecording(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ContactId": string;
        "Channel"?: string;
    }): Promise<{}>;
    DownloadCabRecording(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "TaskId": string;
    }): Promise<{}>;
    DownloadRecording(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "FileName": string;
        "Channel"?: string;
    }): Promise<{}>;
    FindUsers(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Criteria": string;
        "PageNumber": number;
        "PageSize": number;
    }): Promise<{}>;
    GenerateAgentStatisticReport(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "StartDate": string;
        "EndDate": string;
        "PageNumber": number;
        "PageSize": number;
        "AgentId"?: string;
    }): Promise<{}>;
    GetCallMeasureSummaryReport(query: {
        "RegionId"?: string;
        "IntervalType": string;
        "Year": number;
        "Month": number;
        "Day"?: number;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    GetConfig(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "ObjectType": string;
        "ObjectId"?: string;
    }): Promise<{}>;
    GetContactIdentifyByOutBoundTaskId(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "OutboundTaskId": string;
    }): Promise<{}>;
    GetContactInfoByOutboundTaskId(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId": string;
        "OutboundTaskId": string;
    }): Promise<{}>;
    GetConversationDetailByContactId(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ContactId": string;
        "PageNumber": number;
        "PageSize": number;
    }): Promise<{}>;
    GetConversationList(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "TaskId": string;
    }): Promise<{}>;
    GetInstance(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    GetInstanceState(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    GetInstanceSummaryReport(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "StartTime": string;
        "EndTime": string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    GetInstanceSummaryReportByInterval(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "StartTime": string;
        "EndTime": string;
        "Interval"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    GetJobList(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobGroupId": string;
        "QueryAll": boolean;
        "PageNumber": number;
        "PageSize": number;
        "Status"?: number;
    }): Promise<{}>;
    GetJobsProgress(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId": string;
        "JobGroupId": string;
    }): Promise<{}>;
    GetNumberRegionInfo(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Number": string;
    }): Promise<{}>;
    GetRecordOssUploadParam(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "FileName": string;
    }): Promise<{}>;
    GetScenario(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
    }): Promise<{}>;
    GetSmsConfig(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Scenario": number[];
    }): Promise<{}>;
    GetTURNCredentials(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "UserName": string;
    }): Promise<{}>;
    GetTaskList(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobId": string;
    }): Promise<{}>;
    GetUser(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "UserId": string;
    }): Promise<{}>;
    LaunchAppraise(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Acid": string;
    }): Promise<{}>;
    ListAgentDevices(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "RamIds"?: string;
        "StartTime"?: number;
        "StopTime"?: number;
    }): Promise<{}>;
    ListAgentStates(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId"?: string;
        "AgentIds"?: string;
        "State"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListAgentSummaryReports(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "StartTime": string;
        "EndTime": string;
        "SkillGroupId"?: string;
        "AgentIds"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListAgentSummaryReportsByInterval(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "StartTime": string;
        "EndTime": string;
        "SkillGroupId"?: string;
        "AgentIds"?: string;
        "Interval"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListAgentSummaryReportsSinceMidnight(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId"?: string;
        "AgentIds"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListBasicStatisticsReportSubItems(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobGroupId": string;
        "Title": string;
        "PageNumber": number;
        "PageSize": number;
    }): Promise<{}>;
    ListCallDetailRecords(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber": number;
        "PageSize": number;
        "PhoneNumber"?: string;
        "StartTime"?: number;
        "StopTime"?: number;
        "Criteria"?: string;
        "ContactType"?: string;
        "ContactDisposition"?: string;
        "WithRecording"?: boolean;
        "ContactId"?: string;
        "OrderBy"?: string;
    }): Promise<{}>;
    ListCallEventDetailByContactId(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ContactId": string;
    }): Promise<{}>;
    ListCallMeasureSummaryReports(query: {
        "RegionId"?: string;
        "IntervalType": string;
    }): Promise<{}>;
    ListConfig(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ConfigItem"?: string[];
    }): Promise<{}>;
    ListContactFlows(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    ListInstancesOfUser(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    ListIvrTrackingDetail(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber": number;
        "PageSize": number;
        "ContactId"?: string;
        "StartTime"?: number;
        "StopTime"?: number;
        "CallingNumber"?: string;
        "CalledNumber"?: string;
    }): Promise<{}>;
    ListJobGroups(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber": number;
        "PageSize": number;
        "StartTime"?: number;
        "EndTime"?: number;
    }): Promise<{}>;
    ListJobStatus(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber": number;
        "PageSize": number;
        "ScenarioId"?: string;
        "GroupId"?: string;
        "StartTime"?: number;
        "EndTime"?: number;
        "TimeAlignment"?: string;
        "ContactName"?: string;
        "PhoneNumber"?: string;
    }): Promise<{}>;
    ListJobsByGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobGroupId": string;
        "PageNumber": number;
        "PageSize": number;
        "JobStatus"?: string;
        "JobFailureReason"?: string;
    }): Promise<{}>;
    ListOutboundPhoneNumberOfUser(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "UserId": string;
    }): Promise<{}>;
    ListPhoneNumbers(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "OutboundOnly": boolean;
    }): Promise<{}>;
    ListPrivilegesOfUser(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "UserId"?: string;
    }): Promise<{}>;
    ListRealTimeAgent(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    ListRecentCallRecords(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber": number;
        "PageSize": number;
        "StartTime"?: number;
        "StopTime"?: number;
        "Criteria"?: string;
    }): Promise<{}>;
    ListRecordingOfDualTrack(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "StartTime": number;
        "StopTime": number;
        "PageNumber": number;
        "PageSize": number;
        "ConnectId"?: string;
        "CallingNumber"?: string;
        "CalledNumber"?: string;
        "AgentId"?: string;
    }): Promise<{}>;
    ListRecordings(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber": number;
        "PageSize": number;
        "StopTime"?: number;
        "StartTime"?: number;
        "PhoneNumber"?: string;
        "AgentId"?: string;
        "Criteria"?: string;
    }): Promise<{}>;
    ListRecordingsByContactId(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ContactId": string;
    }): Promise<{}>;
    ListRoles(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    ListScenarioTemplates(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    ListScenarios(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    ListSkillGroupStates(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupIds"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListSkillGroupSummaryReports(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "StartTime": string;
        "EndTime": string;
        "SkillGroupIds"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListSkillGroupSummaryReportsByInterval(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "StartTime": string;
        "EndTime": string;
        "SkillGroupIds"?: string;
        "Interval"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListSkillGroupSummaryReportsSinceMidnight(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroups"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListSkillGroups(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    ListSkillGroupsOfUser(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "UserId": string;
    }): Promise<{}>;
    ListSurveys(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
    }): Promise<{}>;
    ListUnreachableContacts(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobGroupId": string;
        "PageNumber": number;
        "PageSize": number;
    }): Promise<{}>;
    ListUsers(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PageNumber": number;
        "PageSize": number;
    }): Promise<{}>;
    ListUsersOfSkillGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId": string;
        "PageNumber": number;
        "PageSize": number;
    }): Promise<{}>;
    ListVoiceAppraise(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    ModifyAgentDevice(query: {
        "RegionId"?: string;
        "IsLogin": number;
        "AgentDeviceId": number;
        "InstanceId": string;
    }): Promise<{}>;
    ModifyMedia(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "FileName": string;
        "Type": string;
        "OssFileName": string;
        "OssFilePath": string;
        "UploadResult": string;
        "Description"?: string;
        "Content"?: string;
    }): Promise<{}>;
    ModifyNotificationConfig(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ProducerId": string;
        "AccessPoint": string;
        "Topic": string;
        "Subscriptions": string[];
    }): Promise<{}>;
    ModifyPhoneNumber(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PhoneNumberId": string;
        "Usage": string;
        "ContactFlowId"?: string;
        "SkillGroupId"?: string[];
    }): Promise<{}>;
    ModifyPrivacyNumberCallDetail(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "CallId": string;
        "ContactId": string;
    }): Promise<{}>;
    ModifyScenario(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
        "Name"?: string;
        "Description"?: string;
        "Variables"?: string;
    }): Promise<{}>;
    ModifySkillGroupOfUser(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "UserId": string;
        "RoleId": string[];
        "SkillGroupId"?: string[];
        "SkillLevel"?: number[];
    }): Promise<{}>;
    ModifySkillGroupOutboundNumbers(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId": string;
        "OperationType": number;
        "OutboundPhoneNumberId": string[];
    }): Promise<{}>;
    ModifySurvey(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SurveyId": string;
        "ScenarioId": string;
        "Name"?: string;
        "Description"?: string;
        "FlowId"?: string;
        "FlowJson"?: string;
        "Corpora"?: string;
        "SpeechOptimizationParam"?: string;
        "GlobalQuestions"?: string;
        "Role"?: string;
        "Round"?: number;
    }): Promise<{}>;
    ModifyUser(query: {
        "RegionId"?: string;
        "DisplayName": string;
        "InstanceId": string;
        "UserId": string;
        "Phone": string;
        "Email": string;
        "RoleId": string[];
        "PrivateOutboundNumberId"?: string;
        "SkillGroupId"?: string[];
        "SkillLevel"?: number[];
    }): Promise<{}>;
    PickGlobalOutboundNumbers(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "CalleeNumber": string;
        "SkillGroupId": string[];
        "Count"?: number;
        "IsVirtual"?: boolean;
    }): Promise<{}>;
    PickLocalNumber(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "CalleeNumber": string;
        "CandidateNumber": string[];
    }): Promise<{}>;
    PickOutboundNumbers(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "CalleeNumber": string;
        "Count": number;
        "CandidateNumber": string[];
    }): Promise<{}>;
    PickOutboundNumbersByTags(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "CalleeNumber": string;
        "Count": number;
        "SkillGroupId": string[];
        "ServiceTag"?: string[];
        "PrioritizedCallerArea"?: string[];
    }): Promise<{}>;
    PreCreateMedia(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "FileName": string;
        "Type": string;
        "Description"?: string;
        "Content"?: string;
    }): Promise<{}>;
    PreModifyMedia(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Name": string;
        "FileName": string;
        "Type": string;
        "Description"?: string;
        "Content"?: string;
    }): Promise<{}>;
    PublishContactFlowVersion(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ContactFlowVersionId": string;
        "UseTianGong"?: boolean;
    }): Promise<{}>;
    PublishSurvey(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
        "SurveyId": string;
    }): Promise<{}>;
    RefreshToken(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    RemoveNumberFromSkillGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId": string;
        "Number": string;
    }): Promise<{}>;
    RemovePhoneNumber(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "PhoneNumberId": string;
    }): Promise<{}>;
    RemoveUsers(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "UserId": string[];
    }): Promise<{}>;
    RemoveUsersFromSkillGroup(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "SkillGroupId": string;
        "UserId": string[];
    }): Promise<{}>;
    RequestLoginInfo(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    ResumeJobs(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "All": boolean;
        "ScenarioId"?: string;
        "GroupId"?: string;
        "JobId"?: string[];
        "JobReferenceId"?: string[];
    }): Promise<{}>;
    SaveStats(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "RecordTime": number;
        "CallId": string;
        "CallerNumber": string;
        "CalleeNumber": string;
        "CallStartTime": number;
        "Stats": string;
        "Uid": string;
        "TenantId": string;
    }): Promise<{}>;
    SaveWebRTCStats(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "RecordTime": number;
        "CallId": string;
        "CallerNumber": string;
        "CalleeNumber": string;
        "CallStartTime": number;
        "Stats": string;
        "Uid": string;
        "TenantId": string;
    }): Promise<{}>;
    SimpleDial(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Caller": string;
        "Callee": string;
        "ContractFlowId": string;
    }): Promise<{}>;
    StartJob(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ScenarioId": string;
        "JobJson": string;
        "GroupId"?: string;
        "CallingNumber"?: string[];
        "SelfHostedCallCenter"?: boolean;
    }): Promise<{}>;
    SubmitBatchJobs(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "JobGroupId": string;
    }): Promise<{}>;
    SubmitCabRecording(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "TaskId": string;
        "MergedRecording": string;
        "InstanceOwnerId"?: number;
        "ResourceRecording"?: string;
    }): Promise<{}>;
    SuspendJobs(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "All": boolean;
        "ScenarioId"?: string;
        "GroupId"?: string;
        "JobId"?: string[];
        "JobReferenceId"?: string[];
    }): Promise<{}>;
    TwoPartiesCall(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "CalleeAgent": string;
        "CalleeCustomer": string;
        "Caller"?: string;
    }): Promise<{}>;
    GetAgentData(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "StartDay": string;
        "EndDay": string;
        "PageNumber": number;
        "PageSize": number;
        "UserId"?: string;
    }): Promise<{}>;
    GetTURNServerList(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    ResetUserStatus(query: {
        "RegionId"?: string;
        "InstanceId": string;
    }): Promise<{}>;
    GetRoutePoint(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "ContactFlowId": string;
    }): Promise<{}>;
}
export default CCC;
