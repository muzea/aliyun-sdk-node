interface CLOUDAUTH {
    CompareFaces(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
        "TargetImageType"?: string;
        "SourceImageType"?: string;
        "SourceImageValue"?: string;
        "TargetImageValue"?: string;
    }): Promise<{}>;
    CreateAuthKey(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
        "Lang"?: string;
        "BizType"?: string;
        "UserDeviceId"?: string;
        "Test"?: boolean;
        "AuthYears"?: number;
    }): Promise<{}>;
    CreateRPSDK(query: {
        "RegionId"?: string;
        "AppUrl": string;
        "SourceIp"?: string;
        "Lang"?: string;
        "Platform"?: string;
    }): Promise<{}>;
    CreateVerifySDK(query: {
        "RegionId"?: string;
        "AppUrl": string;
        "SourceIp"?: string;
        "Lang"?: string;
        "Platform"?: string;
    }): Promise<{}>;
    CreateVerifySetting(query: {
        "RegionId"?: string;
        "BizType": string;
        "BizName": string;
        "Solution": string;
        "SourceIp"?: string;
        "GuideStep"?: boolean;
        "PrivacyStep"?: boolean;
        "ResultStep"?: boolean;
    }): Promise<{}>;
    DescribeDeviceInfo(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
        "Lang"?: string;
        "TotalCount"?: number;
        "PageSize"?: number;
        "CurrentPage"?: number;
        "DeviceId"?: string;
        "BizType"?: string;
        "UserDeviceId"?: string;
        "ExpiredStartDay"?: string;
        "ExpiredEndDay"?: string;
    }): Promise<{}>;
    DescribeFaceUsage(query: {
        "RegionId"?: string;
        "StartDate": string;
        "EndDate": string;
        "SourceIp"?: string;
    }): Promise<{}>;
    DescribeOssUploadToken(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
    }): Promise<{}>;
    DescribeRPSDK(query: {
        "RegionId"?: string;
        "TaskId": string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeUploadInfo(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
    }): Promise<{}>;
    DescribeUserStatus(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
    }): Promise<{}>;
    DescribeVerifyRecords(query: {
        "RegionId"?: string;
        "PageSize": number;
        "CurrentPage": number;
        "SourceIp"?: string;
        "TotalCount"?: number;
        "BizType"?: string;
        "StartDate"?: string;
        "EndDate"?: string;
        "BizId"?: string;
        "IdCardNum"?: string;
        "StatusList"?: string;
        "QueryId"?: string;
    }): Promise<{}>;
    DescribeVerifyResult(query: {
        "RegionId"?: string;
        "BizId": string;
        "BizType": string;
        "SourceIp"?: string;
    }): Promise<{}>;
    DescribeVerifySDK(query: {
        "RegionId"?: string;
        "TaskId": string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeVerifySetting(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
    }): Promise<{}>;
    DescribeVerifyToken(query: {
        "RegionId"?: string;
        "BizType": string;
        "BizId": string;
        "SourceIp"?: string;
        "IdCardBackImageUrl"?: string;
        "FailedRedirectUrl"?: string;
        "FaceRetainedImageUrl"?: string;
        "CallbackSeed"?: string;
        "IdCardFrontImageUrl"?: string;
        "UserId"?: string;
        "Name"?: string;
        "IdCardNumber"?: string;
        "PassedRedirectUrl"?: string;
        "CallbackUrl"?: string;
    }): Promise<{}>;
    DescribeVerifyUsage(query: {
        "RegionId"?: string;
        "StartDate": string;
        "EndDate": string;
        "SourceIp"?: string;
        "BizType"?: string;
    }): Promise<{}>;
    DetectFaceAttributes(query: {
        "RegionId"?: string;
        "MaterialValue": string;
        "DontSaveDB": boolean;
        "ClientTag": string;
        "MaxNumPhotosPerCategory": number;
        "RetAttributes": string;
        "MaxFaceNum": number;
        "SourceIp"?: string;
    }): Promise<{}>;
    ModifyDeviceInfo(query: {
        "RegionId"?: string;
        "DeviceId": string;
        "SourceIp"?: string;
        "Lang"?: string;
        "UserDeviceId"?: string;
        "BizType"?: string;
        "Duration"?: string;
        "ExpiredDay"?: string;
    }): Promise<{}>;
    UpdateVerifySetting(query: {
        "RegionId"?: string;
        "BizType": string;
        "SourceIp"?: string;
        "BizName"?: string;
        "Solution"?: string;
        "GuideStep"?: boolean;
        "PrivacyStep"?: boolean;
        "ResultStep"?: boolean;
    }): Promise<{}>;
    VerifyMaterial(query: {
        "RegionId"?: string;
        "FaceImageUrl": string;
        "BizType": string;
        "BizId": string;
        "Name": string;
        "IdCardNumber": string;
        "SourceIp"?: string;
        "IdCardBackImageUrl"?: string;
        "IdCardFrontImageUrl"?: string;
        "UserId"?: string;
    }): Promise<{}>;
}
export default CLOUDAUTH;
