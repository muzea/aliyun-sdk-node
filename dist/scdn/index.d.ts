interface SCDN {
    AddScdnDomain(query: {
        "RegionId"?: string;
        "DomainName": string;
        "Sources": string;
        "ResourceGroupId"?: string;
        "CheckUrl"?: string;
        "Scope"?: string;
    }): Promise<{}>;
    BatchDeleteScdnDomainConfigs(query: {
        "RegionId"?: string;
        "DomainNames": string;
        "FunctionNames": string;
    }): Promise<{}>;
    BatchUpdateScdnDomain(query: {
        "RegionId"?: string;
        "DomainName": string;
        "Sources"?: string;
        "ResourceGroupId"?: string;
        "TopLevelDomain"?: string;
    }): Promise<{}>;
    CheckScdnService(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    DeleteScdnDomain(query: {
        "RegionId"?: string;
        "DomainName": string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeScdnCertificateDetail(query: {
        "RegionId"?: string;
        "CertName": string;
    }): Promise<{}>;
    DescribeScdnCertificateList(query: {
        "RegionId"?: string;
        "DomainName"?: string;
    }): Promise<{}>;
    DescribeScdnDomainBpsData(query: {
        "RegionId"?: string;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
    }): Promise<{}>;
    DescribeScdnDomainCertificateInfo(query: {
        "RegionId"?: string;
        "DomainName": string;
    }): Promise<{}>;
    DescribeScdnDomainCname(query: {
        "RegionId"?: string;
        "DomainName": string;
    }): Promise<{}>;
    DescribeScdnDomainConfigs(query: {
        "RegionId"?: string;
        "DomainName": string;
        "FunctionNames": string;
    }): Promise<{}>;
    DescribeScdnDomainDetail(query: {
        "RegionId"?: string;
        "DomainName": string;
    }): Promise<{}>;
    DescribeScdnDomainHitRateData(query: {
        "RegionId"?: string;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
    }): Promise<{}>;
    DescribeScdnDomainHttpCodeData(query: {
        "RegionId"?: string;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
    }): Promise<{}>;
    DescribeScdnDomainIspData(query: {
        "RegionId"?: string;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainLog(query: {
        "RegionId"?: string;
        "DomainName": string;
        "PageSize"?: number;
        "PageNumber"?: number;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainOriginBpsData(query: {
        "RegionId"?: string;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
    }): Promise<{}>;
    DescribeScdnDomainOriginTrafficData(query: {
        "RegionId"?: string;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
    }): Promise<{}>;
    DescribeScdnDomainPvData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainQpsData(query: {
        "RegionId"?: string;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
    }): Promise<{}>;
    DescribeScdnDomainRegionData(query: {
        "RegionId"?: string;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainTrafficData(query: {
        "RegionId"?: string;
        "DomainName"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
        "Interval"?: string;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
    }): Promise<{}>;
    DescribeScdnDomainUvData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnIpInfo(query: {
        "RegionId"?: string;
        "IP": string;
    }): Promise<{}>;
    DescribeScdnRefreshQuota(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    DescribeScdnRefreshTasks(query: {
        "RegionId"?: string;
        "TaskId"?: string;
        "ObjectPath"?: string;
        "PageNumber"?: number;
        "ObjectType"?: string;
        "DomainName"?: string;
        "Status"?: string;
        "PageSize"?: number;
        "StartTime"?: string;
        "EndTime"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeScdnService(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    DescribeScdnUserDomains(query: {
        "RegionId"?: string;
        "PageSize"?: number;
        "PageNumber"?: number;
        "DomainName"?: string;
        "DomainStatus"?: string;
        "DomainSearchType"?: string;
        "CheckDomainShow"?: boolean;
        "ResourceGroupId"?: string;
        "FuncId"?: string;
        "FuncFilter"?: string;
    }): Promise<{}>;
    DescribeScdnUserQuota(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    OpenScdnService(query: {
        "RegionId"?: string;
        "Bandwidth": number;
        "ProtectType": string;
        "DDoSBasic": number;
        "ElasticProtection": number;
        "CcProtection": number;
        "DomainCount": number;
        "StartDate"?: string;
        "EndDate"?: string;
    }): Promise<{}>;
    PreloadScdnObjectCaches(query: {
        "RegionId"?: string;
        "ObjectPath": string;
        "Area"?: string;
    }): Promise<{}>;
    RefreshScdnObjectCaches(query: {
        "RegionId"?: string;
        "ObjectPath": string;
        "ObjectType"?: string;
    }): Promise<{}>;
    SetDomainServerCertificate(query: {
        "RegionId"?: string;
        "DomainName": string;
        "SSLProtocol": string;
        "CertName"?: string;
        "SSLPub"?: string;
        "SSLPri"?: string;
        "Region"?: string;
    }): Promise<{}>;
    SetScdnDomainCertificate(query: {
        "RegionId"?: string;
        "DomainName": string;
        "SSLProtocol": string;
        "CertType"?: string;
        "CertName"?: string;
        "SSLPub"?: string;
        "SSLPri"?: string;
        "Region"?: string;
        "ForceSet"?: string;
    }): Promise<{}>;
    StartScdnDomain(query: {
        "RegionId"?: string;
        "DomainName": string;
    }): Promise<{}>;
    StopScdnDomain(query: {
        "RegionId"?: string;
        "DomainName": string;
    }): Promise<{}>;
    UpdateScdnDomain(query: {
        "RegionId"?: string;
        "DomainName": string;
        "Sources"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    BatchSetScdnDomainConfigs(query: {
        "RegionId"?: string;
        "DomainNames": string;
        "Functions": string;
        "OwnerId"?: number;
    }): Promise<{}>;
    DescribeScdnDomainRealTimeBpsData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainRealTimeByteHitRateData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainRealTimeHttpCodeData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "StartTime"?: string;
        "EndTime"?: string;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
    }): Promise<{}>;
    DescribeScdnDomainRealTimeQpsData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "IspNameEn"?: string;
        "LocationNameEn"?: string;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainRealTimeReqHitRateData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainRealTimeSrcBpsData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainRealTimeSrcTrafficData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainRealTimeTrafficData(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "StartTime"?: string;
        "EndTime"?: string;
    }): Promise<{}>;
    DescribeScdnDomainTopReferVisit(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "StartTime"?: string;
        "SortBy"?: string;
    }): Promise<{}>;
    DescribeScdnDomainTopUrlVisit(query: {
        "RegionId"?: string;
        "DomainName": string;
        "OwnerId"?: number;
        "StartTime"?: string;
        "SortBy"?: string;
    }): Promise<{}>;
    DescribeScdnTopDomainsByFlow(query: {
        "RegionId"?: string;
        "OwnerId"?: number;
        "StartTime"?: string;
        "EndTime"?: string;
        "Product"?: string;
        "Limit"?: number;
    }): Promise<{}>;
}
export default SCDN;
