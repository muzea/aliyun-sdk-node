interface OPENANALYTICS_OPEN {
    AddAccount(query: {
        "RegionId"?: string;
        "RegionID": string;
        "AccountName": string;
        "Password"?: string;
        "UseRandomPassword"?: boolean;
        "IsShort"?: boolean;
        "EnableKMS"?: boolean;
        "Remark"?: string;
    }): Promise<{}>;
    AddEndPoint(query: {
        "RegionId"?: string;
        "RegionID": string;
        "NetworkType": string;
        "VpcID": string;
        "Vswitch": string;
        "Zone": string;
        "Product"?: string;
    }): Promise<{}>;
    DeleteAccount(query: {
        "RegionId"?: string;
        "RegionID": string;
        "AccountName": string;
        "IsShort"?: boolean;
        "IsServiceUser"?: boolean;
    }): Promise<{}>;
    DescribeRegionList(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    GetConsolePermission(query: {
        "RegionId"?: string;
        "RegionID": string;
    }): Promise<{}>;
    GetEndPoint(query: {
        "RegionId"?: string;
        "RegionID": string;
        "EndPointID": string;
    }): Promise<{}>;
    GetEndPointByDomain(query: {
        "RegionId"?: string;
        "RegionID": string;
        "DomainURL": string;
    }): Promise<{}>;
    GetRegionStatus(query: {
        "RegionId"?: string;
        "RegionID": string;
    }): Promise<{}>;
    InitializeRegion(query: {
        "RegionId"?: string;
        "RegionID": string;
        "UseRandomPassword": boolean;
        "InitPassword"?: string;
        "EnableKMS"?: boolean;
    }): Promise<{}>;
    QueryAccountList(query: {
        "RegionId"?: string;
        "RegionID": string;
        "PageSize": number;
        "PageNumber": number;
    }): Promise<{}>;
    QueryDataSourceDef(query: {
        "RegionId"?: string;
        "RegionID": string;
    }): Promise<{}>;
    QueryEndPointList(query: {
        "RegionId"?: string;
        "RegionID": string;
    }): Promise<{}>;
    RemoveEndPoint(query: {
        "RegionId"?: string;
        "RegionID": string;
        "EndPointID": string;
    }): Promise<{}>;
    ResetMainPassword(query: {
        "RegionId"?: string;
        "RegionID": string;
        "UseRandomPassword": boolean;
        "InitPassword"?: string;
        "EnableKMS"?: boolean;
    }): Promise<{}>;
    SetAllowIP(query: {
        "RegionId"?: string;
        "RegionID": string;
        "NetworkType": string;
        "AllowIP": string;
        "Product"?: string;
        "Append"?: boolean;
    }): Promise<{}>;
    UnSubscribeRegion(query: {
        "RegionId"?: string;
        "RegionID": string;
    }): Promise<{}>;
    UpdateAccountPassword(query: {
        "RegionId"?: string;
        "RegionID": string;
        "AccountName": string;
        "IsShort"?: boolean;
        "Password"?: string;
        "EnableKMS"?: boolean;
        "UseRandomPassword"?: boolean;
    }): Promise<{}>;
    QueryDiscountList(query: {
        "RegionId"?: string;
        "PageSize": number;
        "PageNumber": number;
        "RegionID": string;
    }): Promise<{}>;
    QueryServiceAccountList(query: {
        "RegionId"?: string;
        "RegionID": string;
    }): Promise<{}>;
    QueryTaskSum(query: {
        "RegionId"?: string;
        "RegionID": string;
        "TwoDaysAgoBeginTs": string;
        "YesterdayBeginTs": string;
        "TodayBeginTs": string;
    }): Promise<{}>;
    GetAllowIP(query: {
        "RegionId"?: string;
        "RegionID": string;
        "NetworkType": string;
        "Product"?: string;
    }): Promise<{}>;
}
export default OPENANALYTICS_OPEN;
