interface DDOSBGP {
    AddIp(query: {
        "RegionId"?: string;
        "IpList": string;
        "InstanceId": string;
        "SourceIp"?: string;
        "ResourceRegionId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    CheckGrant(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DeleteBlackhole(query: {
        "RegionId"?: string;
        "Ip": string;
        "InstanceId": string;
        "SourceIp"?: string;
        "ResourceRegionId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DeleteIp(query: {
        "RegionId"?: string;
        "IpList": string;
        "InstanceId": string;
        "SourceIp"?: string;
        "ResourceRegionId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeDdosEvent(query: {
        "RegionId"?: string;
        "StartTime": number;
        "EndTime": number;
        "PageSize": number;
        "PageNo": number;
        "InstanceId": string;
        "SourceIp"?: string;
        "Ip"?: string;
        "ResourceRegionId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeInstanceList(query: {
        "RegionId"?: string;
        "PageNo": number;
        "PageSize": number;
        "SourceIp"?: string;
        "ResourceGroupId"?: string;
        "InstanceIdList"?: string;
        "Remark"?: string;
        "DdosRegionId"?: string;
        "IpVersion"?: string;
        "InstanceType"?: string;
        "Ip"?: string;
        "Orderby"?: string;
        "Orderdire"?: string;
        "Tag"?: string[];
    }): Promise<{}>;
    DescribeInstanceSpecs(query: {
        "RegionId"?: string;
        "InstanceIdList": string;
        "SourceIp"?: string;
        "Lang"?: string;
        "DdosRegionId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeOpEntities(query: {
        "RegionId"?: string;
        "CurrentPage": number;
        "PageSize": number;
        "StartTime": number;
        "EndTime": number;
        "SourceIp"?: string;
        "Lang"?: string;
        "OrderBy"?: string;
        "OrderDir"?: string;
        "InstanceId"?: string;
        "ResourceRegionId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribePackPaidTraffic(query: {
        "RegionId"?: string;
        "CurrentPage": number;
        "PageSize": number;
        "StartTime": number;
        "EndTime": number;
        "SourceIp"?: string;
        "InstanceId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeResourcePackInstances(query: {
        "RegionId"?: string;
        "PageSize": number;
        "CurrentPage": number;
        "SourceIp"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeResourcePackStatistics(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
        "DdosRegionId"?: string;
        "InstanceId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeResourcePackUsage(query: {
        "RegionId"?: string;
        "EndTime": number;
        "StartTime": number;
        "SourceIp"?: string;
        "InstanceId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeTraffic(query: {
        "RegionId"?: string;
        "StartTime": number;
        "EndTime": number;
        "Interval": number;
        "SourceIp"?: string;
        "InstanceId"?: string;
        "Ip"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    ModifyRemark(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "Remark": string;
        "SourceIp"?: string;
        "Lang"?: string;
        "ResourceRegionId"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeExcpetionCount(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "SourceIp"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribePackIpList(query: {
        "RegionId"?: string;
        "PageNo": number;
        "PageSize": number;
        "DdosRegionId": string;
        "InstanceId": string;
        "SourceIp"?: string;
        "Ip"?: string;
        "ProductName"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
    DescribeRegions(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
        "ResourceGroupId"?: string;
    }): Promise<{}>;
}
export default DDOSBGP;
