interface ANTIDDOS_PUBLIC {
    DescribeCap(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "InstanceType": string;
        "InstanceId": string;
        "BegTime": number;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeRegionDdosThreshold(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeTrafficInfo(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeBgpPackByIp(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "Ip": string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeBgpPackElasticThreshold(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeCreditInfo(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
    }): Promise<{}>;
    DescribeDdosCount(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "InstanceType": string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeDdosEventList(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "InstanceType": string;
        "InstanceId": string;
        "SourceIp"?: string;
        "Lang"?: string;
        "CurrentPage"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    DescribeDdosThreshold(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "DdosType": string;
        "InstanceType": string;
        "InstanceIds": string[];
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeFlexibleProtectionFlow(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
        "Lang"?: string;
        "Days"?: number;
    }): Promise<{}>;
    DescribeFlowgraph(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "InstanceType": string;
        "InstanceId": string;
        "SourceIp"?: string;
        "Lang"?: string;
        "Days"?: number;
    }): Promise<{}>;
    ModifyDdosStatus(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "InstanceType": string;
        "InstanceId": string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    ModifyDefenseThreshold(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "InstanceType": string;
        "InstanceId": string;
        "SourceIp"?: string;
        "Lang"?: string;
        "Bps"?: number;
        "Pps"?: number;
        "IsAuto"?: boolean;
    }): Promise<{}>;
    DescribeDdosCredit(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
    DescribeInstance(query: {
        "RegionId"?: string;
        "DdosRegionId": string;
        "InstanceType": string;
        "SourceIp"?: string;
        "Lang"?: string;
        "InstanceName"?: string;
        "DdosStatus"?: string;
        "InstanceId"?: string;
        "InstanceIp"?: string;
        "CurrentPage"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    DescribeRegions(query: {
        "RegionId"?: string;
        "SourceIp"?: string;
        "Lang"?: string;
    }): Promise<{}>;
}
export default ANTIDDOS_PUBLIC;
