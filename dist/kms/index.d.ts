interface KMS {
    CancelKeyDeletion(query: {
        "RegionId"?: string;
        "KeyId": string;
    }): Promise<{}>;
    CreateAlias(query: {
        "RegionId"?: string;
        "KeyId": string;
        "AliasName": string;
    }): Promise<{}>;
    CreateKey(query: {
        "RegionId"?: string;
        "Description"?: string;
        "KeyUsage"?: string;
        "Origin"?: string;
        "ProtectionLevel"?: string;
    }): Promise<{}>;
    Decrypt(query: {
        "RegionId"?: string;
        "CiphertextBlob": string;
        "EncryptionContext"?: string;
    }): Promise<{}>;
    DeleteAlias(query: {
        "RegionId"?: string;
        "AliasName": string;
    }): Promise<{}>;
    DeleteKeyMaterial(query: {
        "RegionId"?: string;
        "KeyId": string;
    }): Promise<{}>;
    DescribeKey(query: {
        "RegionId"?: string;
        "KeyId": string;
    }): Promise<{}>;
    DescribeRegions(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    DescribeService(query: {
        "RegionId"?: string;
    }): Promise<{}>;
    DisableKey(query: {
        "RegionId"?: string;
        "KeyId": string;
    }): Promise<{}>;
    EnableKey(query: {
        "RegionId"?: string;
        "KeyId": string;
    }): Promise<{}>;
    Encrypt(query: {
        "RegionId"?: string;
        "KeyId": string;
        "Plaintext": string;
        "EncryptionContext"?: string;
    }): Promise<{}>;
    GenerateDataKey(query: {
        "RegionId"?: string;
        "KeyId": string;
        "KeySpec"?: string;
        "NumberOfBytes"?: number;
        "EncryptionContext"?: string;
    }): Promise<{}>;
    GetParametersForImport(query: {
        "RegionId"?: string;
        "KeyId": string;
        "WrappingAlgorithm": string;
        "WrappingKeySpec": string;
    }): Promise<{}>;
    ImportKeyMaterial(query: {
        "RegionId"?: string;
        "KeyId": string;
        "EncryptedKeyMaterial": string;
        "ImportToken": string;
        "KeyMaterialExpireUnix": number;
    }): Promise<{}>;
    ListAliases(query: {
        "RegionId"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListAliasesByKeyId(query: {
        "RegionId"?: string;
        "KeyId": string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListKeys(query: {
        "RegionId"?: string;
        "PageNumber"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    ListResourceTags(query: {
        "RegionId"?: string;
        "KeyId": string;
    }): Promise<{}>;
    ScheduleKeyDeletion(query: {
        "RegionId"?: string;
        "KeyId": string;
        "PendingWindowInDays"?: number;
    }): Promise<{}>;
    TagResource(query: {
        "RegionId"?: string;
        "KeyId": string;
        "Tags": string;
    }): Promise<{}>;
    UntagResource(query: {
        "RegionId"?: string;
        "KeyId": string;
        "TagKeys": string;
    }): Promise<{}>;
    UpdateAlias(query: {
        "RegionId"?: string;
        "KeyId": string;
        "AliasName": string;
    }): Promise<{}>;
}
export default KMS;
