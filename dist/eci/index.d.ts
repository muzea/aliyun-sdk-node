import { CreateContainerGroupRequest } from "./CreateContainerGroup/req";
import { CreateContainerGroupResponse } from "./CreateContainerGroup/res";
import { DeleteContainerGroupRequest } from "./DeleteContainerGroup/req";
import { DeleteContainerGroupResponse } from "./DeleteContainerGroup/res";
import { DescribeContainerGroupsRequest } from "./DescribeContainerGroups/req";
import { DescribeContainerGroupsResponse } from "./DescribeContainerGroups/res";
import { DescribeContainerLogRequest } from "./DescribeContainerLog/req";
import { DescribeContainerLogResponse } from "./DescribeContainerLog/res";
import { CreateContainerGroupFromTemplateRequest } from "./CreateContainerGroupFromTemplate/req";
import { CreateContainerGroupFromTemplateResponse } from "./CreateContainerGroupFromTemplate/res";
import { DescribeContainerGroupMetricRequest } from "./DescribeContainerGroupMetric/req";
import { DescribeContainerGroupMetricResponse } from "./DescribeContainerGroupMetric/res";
import { DescribeContainerGroupPriceRequest } from "./DescribeContainerGroupPrice/req";
import { DescribeContainerGroupPriceResponse } from "./DescribeContainerGroupPrice/res";
import { DescribeMultiContainerGroupMetricRequest } from "./DescribeMultiContainerGroupMetric/req";
import { DescribeMultiContainerGroupMetricResponse } from "./DescribeMultiContainerGroupMetric/res";
import { ExecContainerCommandRequest } from "./ExecContainerCommand/req";
import { ExecContainerCommandResponse } from "./ExecContainerCommand/res";
import { ExportContainerGroupTemplateRequest } from "./ExportContainerGroupTemplate/req";
import { ExportContainerGroupTemplateResponse } from "./ExportContainerGroupTemplate/res";
import { RestartContainerGroupRequest } from "./RestartContainerGroup/req";
import { RestartContainerGroupResponse } from "./RestartContainerGroup/res";
import { UpdateContainerGroupRequest } from "./UpdateContainerGroup/req";
import { UpdateContainerGroupResponse } from "./UpdateContainerGroup/res";
import { UpdateContainerGroupByTemplateRequest } from "./UpdateContainerGroupByTemplate/req";
import { UpdateContainerGroupByTemplateResponse } from "./UpdateContainerGroupByTemplate/res";
import { CreateImageCacheRequest } from "./CreateImageCache/req";
import { CreateImageCacheResponse } from "./CreateImageCache/res";
import { DeleteImageCacheRequest } from "./DeleteImageCache/req";
import { DeleteImageCacheResponse } from "./DeleteImageCache/res";
import { DescribeImageCachesRequest } from "./DescribeImageCaches/req";
import { DescribeImageCachesResponse } from "./DescribeImageCaches/res";

interface ECI {
    CreateContainerGroup(query: CreateContainerGroupRequest): Promise<CreateContainerGroupResponse>;
    DeleteContainerGroup(query: DeleteContainerGroupRequest): Promise<DeleteContainerGroupResponse>;
    DescribeContainerGroups(query: DescribeContainerGroupsRequest): Promise<DescribeContainerGroupsResponse>;
    DescribeContainerLog(query: DescribeContainerLogRequest): Promise<DescribeContainerLogResponse>;
    CreateContainerGroupFromTemplate(query: CreateContainerGroupFromTemplateRequest): Promise<CreateContainerGroupFromTemplateResponse>;
    DescribeContainerGroupMetric(query: DescribeContainerGroupMetricRequest): Promise<DescribeContainerGroupMetricResponse>;
    DescribeContainerGroupPrice(query: DescribeContainerGroupPriceRequest): Promise<DescribeContainerGroupPriceResponse>;
    DescribeMultiContainerGroupMetric(query: DescribeMultiContainerGroupMetricRequest): Promise<DescribeMultiContainerGroupMetricResponse>;
    ExecContainerCommand(query: ExecContainerCommandRequest): Promise<ExecContainerCommandResponse>;
    ExportContainerGroupTemplate(query: ExportContainerGroupTemplateRequest): Promise<ExportContainerGroupTemplateResponse>;
    RestartContainerGroup(query: RestartContainerGroupRequest): Promise<RestartContainerGroupResponse>;
    UpdateContainerGroup(query: UpdateContainerGroupRequest): Promise<UpdateContainerGroupResponse>;
    UpdateContainerGroupByTemplate(query: UpdateContainerGroupByTemplateRequest): Promise<UpdateContainerGroupByTemplateResponse>;
    CreateImageCache(query: CreateImageCacheRequest): Promise<CreateImageCacheResponse>;
    DeleteImageCache(query: DeleteImageCacheRequest): Promise<DeleteImageCacheResponse>;
    DescribeImageCaches(query: DescribeImageCachesRequest): Promise<DescribeImageCachesResponse>;
}
export default ECI;
