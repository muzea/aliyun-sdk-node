import { AllocatePublicNetworkAddressRequest } from "./AllocatePublicNetworkAddress/req";
import { AllocatePublicNetworkAddressResponse } from "./AllocatePublicNetworkAddress/res";
import { CheckVersionsOfComponentsRequest } from "./CheckVersionsOfComponents/req";
import { CheckVersionsOfComponentsResponse } from "./CheckVersionsOfComponents/res";
import { CloseBackupRequest } from "./CloseBackup/req";
import { CloseBackupResponse } from "./CloseBackup/res";
import { CreateClusterRequest } from "./CreateCluster/req";
import { CreateClusterResponse } from "./CreateCluster/res";
import { CreateGlobalResourceRequest } from "./CreateGlobalResource/req";
import { CreateGlobalResourceResponse } from "./CreateGlobalResource/res";
import { CreateHbaseSlbServerRequest } from "./CreateHbaseSlbServer/req";
import { CreateHbaseSlbServerResponse } from "./CreateHbaseSlbServer/res";
import { CreateSubscriptionRequest } from "./CreateSubscription/req";
import { CreateSubscriptionResponse } from "./CreateSubscription/res";
import { DeleteClusterRequest } from "./DeleteCluster/req";
import { DeleteClusterResponse } from "./DeleteCluster/res";
import { DeleteGlobalResourceRequest } from "./DeleteGlobalResource/req";
import { DeleteGlobalResourceResponse } from "./DeleteGlobalResource/res";
import { DeleteHbaseSlbServerRequest } from "./DeleteHbaseSlbServer/req";
import { DeleteHbaseSlbServerResponse } from "./DeleteHbaseSlbServer/res";
import { DescribeBackupPolicyRequest } from "./DescribeBackupPolicy/req";
import { DescribeBackupPolicyResponse } from "./DescribeBackupPolicy/res";
import { DescribeBackupsRequest } from "./DescribeBackups/req";
import { DescribeBackupsResponse } from "./DescribeBackups/res";
import { DescribeClusterAttributeRequest } from "./DescribeClusterAttribute/req";
import { DescribeClusterAttributeResponse } from "./DescribeClusterAttribute/res";
import { DescribeClusterListRequest } from "./DescribeClusterList/req";
import { DescribeClusterListResponse } from "./DescribeClusterList/res";
import { DescribeClusterModelRequest } from "./DescribeClusterModel/req";
import { DescribeClusterModelResponse } from "./DescribeClusterModel/res";
import { DescribeClusterWhiteListRequest } from "./DescribeClusterWhiteList/req";
import { DescribeClusterWhiteListResponse } from "./DescribeClusterWhiteList/res";
import { DescribeColdStorageRequest } from "./DescribeColdStorage/req";
import { DescribeColdStorageResponse } from "./DescribeColdStorage/res";
import { DescribeMultiModDbAttributeRequest } from "./DescribeMultiModDbAttribute/req";
import { DescribeMultiModDbAttributeResponse } from "./DescribeMultiModDbAttribute/res";
import { DescribeRdsVSwitchsRequest } from "./DescribeRdsVSwitchs/req";
import { DescribeRdsVSwitchsResponse } from "./DescribeRdsVSwitchs/res";
import { DescribeRdsVpcsRequest } from "./DescribeRdsVpcs/req";
import { DescribeRdsVpcsResponse } from "./DescribeRdsVpcs/res";
import { DescribeRegionsRequest } from "./DescribeRegions/req";
import { DescribeRegionsResponse } from "./DescribeRegions/res";
import { DescribeSubscriptionInitializeProgressRequest } from "./DescribeSubscriptionInitializeProgress/req";
import { DescribeSubscriptionInitializeProgressResponse } from "./DescribeSubscriptionInitializeProgress/res";
import { DescribeSubscriptionPerformanceRequest } from "./DescribeSubscriptionPerformance/req";
import { DescribeSubscriptionPerformanceResponse } from "./DescribeSubscriptionPerformance/res";
import { DescribeSubscriptionPermissionRequest } from "./DescribeSubscriptionPermission/req";
import { DescribeSubscriptionPermissionResponse } from "./DescribeSubscriptionPermission/res";
import { DescribeSubscriptionsRequest } from "./DescribeSubscriptions/req";
import { DescribeSubscriptionsResponse } from "./DescribeSubscriptions/res";
import { ListClusterServiceConfigRequest } from "./ListClusterServiceConfig/req";
import { ListClusterServiceConfigResponse } from "./ListClusterServiceConfig/res";
import { ListClusterServiceConfigHistoryRequest } from "./ListClusterServiceConfigHistory/req";
import { ListClusterServiceConfigHistoryResponse } from "./ListClusterServiceConfigHistory/res";
import { ModifyBackupPolicyRequest } from "./ModifyBackupPolicy/req";
import { ModifyBackupPolicyResponse } from "./ModifyBackupPolicy/res";
import { ModifyClusterNameRequest } from "./ModifyClusterName/req";
import { ModifyClusterNameResponse } from "./ModifyClusterName/res";
import { ModifyClusterNetTypeRequest } from "./ModifyClusterNetType/req";
import { ModifyClusterNetTypeResponse } from "./ModifyClusterNetType/res";
import { ModifyClusterSecurityIpListRequest } from "./ModifyClusterSecurityIpList/req";
import { ModifyClusterSecurityIpListResponse } from "./ModifyClusterSecurityIpList/res";
import { ModifyClusterServiceConfigRequest } from "./ModifyClusterServiceConfig/req";
import { ModifyClusterServiceConfigResponse } from "./ModifyClusterServiceConfig/res";
import { ModifyHasRootPasswordRequest } from "./ModifyHasRootPassword/req";
import { ModifyHasRootPasswordResponse } from "./ModifyHasRootPassword/res";
import { ModifyRestartClusterRequest } from "./ModifyRestartCluster/req";
import { ModifyRestartClusterResponse } from "./ModifyRestartCluster/res";
import { ModifyRollbackHasForHbaseRequest } from "./ModifyRollbackHasForHbase/req";
import { ModifyRollbackHasForHbaseResponse } from "./ModifyRollbackHasForHbase/res";
import { ModifySubscriptionDescriptionRequest } from "./ModifySubscriptionDescription/req";
import { ModifySubscriptionDescriptionResponse } from "./ModifySubscriptionDescription/res";
import { ModifySubscriptionMappingRequest } from "./ModifySubscriptionMapping/req";
import { ModifySubscriptionMappingResponse } from "./ModifySubscriptionMapping/res";
import { ModifySubscriptionPermissionRequest } from "./ModifySubscriptionPermission/req";
import { ModifySubscriptionPermissionResponse } from "./ModifySubscriptionPermission/res";
import { ModifyUIProxyAccountPasswordRequest } from "./ModifyUIProxyAccountPassword/req";
import { ModifyUIProxyAccountPasswordResponse } from "./ModifyUIProxyAccountPassword/res";
import { ModifyUpgradeToHasForHbaseRequest } from "./ModifyUpgradeToHasForHbase/req";
import { ModifyUpgradeToHasForHbaseResponse } from "./ModifyUpgradeToHasForHbase/res";
import { MultimodAddComponentsRequest } from "./MultimodAddComponents/req";
import { MultimodAddComponentsResponse } from "./MultimodAddComponents/res";
import { OpenBackupRequest } from "./OpenBackup/req";
import { OpenBackupResponse } from "./OpenBackup/res";
import { QuerySparkRelateHBaseRequest } from "./QuerySparkRelateHBase/req";
import { QuerySparkRelateHBaseResponse } from "./QuerySparkRelateHBase/res";
import { QueryXpackRelatedDBRequest } from "./QueryXpackRelatedDB/req";
import { QueryXpackRelatedDBResponse } from "./QueryXpackRelatedDB/res";
import { ReleasePublicNetworkAddressRequest } from "./ReleasePublicNetworkAddress/req";
import { ReleasePublicNetworkAddressResponse } from "./ReleasePublicNetworkAddress/res";
import { ReleaseSubscriptionRequest } from "./ReleaseSubscription/req";
import { ReleaseSubscriptionResponse } from "./ReleaseSubscription/res";
import { ResizeClusterRequest } from "./ResizeCluster/req";
import { ResizeClusterResponse } from "./ResizeCluster/res";
import { SparkRelateHBaseRequest } from "./SparkRelateHBase/req";
import { SparkRelateHBaseResponse } from "./SparkRelateHBase/res";
import { UpgradeMinorVersionRequest } from "./UpgradeMinorVersion/req";
import { UpgradeMinorVersionResponse } from "./UpgradeMinorVersion/res";
import { XpackRelateDBRequest } from "./XpackRelateDB/req";
import { XpackRelateDBResponse } from "./XpackRelateDB/res";
import { DescribeClusterConnectAddrsRequest } from "./DescribeClusterConnectAddrs/req";
import { DescribeClusterConnectAddrsResponse } from "./DescribeClusterConnectAddrs/res";
import { ConvertClusterRequest } from "./ConvertCluster/req";
import { ConvertClusterResponse } from "./ConvertCluster/res";
import { RenewClusterRequest } from "./RenewCluster/req";
import { RenewClusterResponse } from "./RenewCluster/res";
import { ListHbaseInstancesRequest } from "./ListHbaseInstances/req";
import { ListHbaseInstancesResponse } from "./ListHbaseInstances/res";
import { TagResourcesRequest } from "./TagResources/req";
import { TagResourcesResponse } from "./TagResources/res";
import { UntagResourcesRequest } from "./UntagResources/req";
import { UntagResourcesResponse } from "./UntagResources/res";
import { ListTagResourcesRequest } from "./ListTagResources/req";
import { ListTagResourcesResponse } from "./ListTagResources/res";
import { DeleteServerlessInstanceRequest } from "./DeleteServerlessInstance/req";
import { DeleteServerlessInstanceResponse } from "./DeleteServerlessInstance/res";
import { DescribeServerlessInstanceRequest } from "./DescribeServerlessInstance/req";
import { DescribeServerlessInstanceResponse } from "./DescribeServerlessInstance/res";
import { EnableServerlessPublicConnectionRequest } from "./EnableServerlessPublicConnection/req";
import { EnableServerlessPublicConnectionResponse } from "./EnableServerlessPublicConnection/res";
import { GetMultimodeCmsUrlRequest } from "./GetMultimodeCmsUrl/req";
import { GetMultimodeCmsUrlResponse } from "./GetMultimodeCmsUrl/res";
import { QueryHBaseHaDBRequest } from "./QueryHBaseHaDB/req";
import { QueryHBaseHaDBResponse } from "./QueryHBaseHaDB/res";
import { RelateDbForHBaseHaRequest } from "./RelateDbForHBaseHa/req";
import { RelateDbForHBaseHaResponse } from "./RelateDbForHBaseHa/res";
import { AddUserHdfsInfoRequest } from "./AddUserHdfsInfo/req";
import { AddUserHdfsInfoResponse } from "./AddUserHdfsInfo/res";
import { DeleteUserHdfsInfoRequest } from "./DeleteUserHdfsInfo/req";
import { DeleteUserHdfsInfoResponse } from "./DeleteUserHdfsInfo/res";

interface HBASE {
    AllocatePublicNetworkAddress(query: AllocatePublicNetworkAddressRequest): Promise<AllocatePublicNetworkAddressResponse>;
    CheckVersionsOfComponents(query: CheckVersionsOfComponentsRequest): Promise<CheckVersionsOfComponentsResponse>;
    CloseBackup(query: CloseBackupRequest): Promise<CloseBackupResponse>;
    CreateCluster(query: CreateClusterRequest): Promise<CreateClusterResponse>;
    CreateGlobalResource(query: CreateGlobalResourceRequest): Promise<CreateGlobalResourceResponse>;
    CreateHbaseSlbServer(query: CreateHbaseSlbServerRequest): Promise<CreateHbaseSlbServerResponse>;
    CreateSubscription(query: CreateSubscriptionRequest): Promise<CreateSubscriptionResponse>;
    DeleteCluster(query: DeleteClusterRequest): Promise<DeleteClusterResponse>;
    DeleteGlobalResource(query: DeleteGlobalResourceRequest): Promise<DeleteGlobalResourceResponse>;
    DeleteHbaseSlbServer(query: DeleteHbaseSlbServerRequest): Promise<DeleteHbaseSlbServerResponse>;
    DescribeBackupPolicy(query: DescribeBackupPolicyRequest): Promise<DescribeBackupPolicyResponse>;
    DescribeBackups(query: DescribeBackupsRequest): Promise<DescribeBackupsResponse>;
    DescribeClusterAttribute(query: DescribeClusterAttributeRequest): Promise<DescribeClusterAttributeResponse>;
    DescribeClusterList(query: DescribeClusterListRequest): Promise<DescribeClusterListResponse>;
    DescribeClusterModel(query: DescribeClusterModelRequest): Promise<DescribeClusterModelResponse>;
    DescribeClusterWhiteList(query: DescribeClusterWhiteListRequest): Promise<DescribeClusterWhiteListResponse>;
    DescribeColdStorage(query: DescribeColdStorageRequest): Promise<DescribeColdStorageResponse>;
    DescribeMultiModDbAttribute(query: DescribeMultiModDbAttributeRequest): Promise<DescribeMultiModDbAttributeResponse>;
    DescribeRdsVSwitchs(query: DescribeRdsVSwitchsRequest): Promise<DescribeRdsVSwitchsResponse>;
    DescribeRdsVpcs(query: DescribeRdsVpcsRequest): Promise<DescribeRdsVpcsResponse>;
    DescribeRegions(query: DescribeRegionsRequest): Promise<DescribeRegionsResponse>;
    DescribeSubscriptionInitializeProgress(query: DescribeSubscriptionInitializeProgressRequest): Promise<DescribeSubscriptionInitializeProgressResponse>;
    DescribeSubscriptionPerformance(query: DescribeSubscriptionPerformanceRequest): Promise<DescribeSubscriptionPerformanceResponse>;
    DescribeSubscriptionPermission(query: DescribeSubscriptionPermissionRequest): Promise<DescribeSubscriptionPermissionResponse>;
    DescribeSubscriptions(query: DescribeSubscriptionsRequest): Promise<DescribeSubscriptionsResponse>;
    ListClusterServiceConfig(query: ListClusterServiceConfigRequest): Promise<ListClusterServiceConfigResponse>;
    ListClusterServiceConfigHistory(query: ListClusterServiceConfigHistoryRequest): Promise<ListClusterServiceConfigHistoryResponse>;
    ModifyBackupPolicy(query: ModifyBackupPolicyRequest): Promise<ModifyBackupPolicyResponse>;
    ModifyClusterName(query: ModifyClusterNameRequest): Promise<ModifyClusterNameResponse>;
    ModifyClusterNetType(query: ModifyClusterNetTypeRequest): Promise<ModifyClusterNetTypeResponse>;
    ModifyClusterSecurityIpList(query: ModifyClusterSecurityIpListRequest): Promise<ModifyClusterSecurityIpListResponse>;
    ModifyClusterServiceConfig(query: ModifyClusterServiceConfigRequest): Promise<ModifyClusterServiceConfigResponse>;
    ModifyHasRootPassword(query: ModifyHasRootPasswordRequest): Promise<ModifyHasRootPasswordResponse>;
    ModifyRestartCluster(query: ModifyRestartClusterRequest): Promise<ModifyRestartClusterResponse>;
    ModifyRollbackHasForHbase(query: ModifyRollbackHasForHbaseRequest): Promise<ModifyRollbackHasForHbaseResponse>;
    ModifySubscriptionDescription(query: ModifySubscriptionDescriptionRequest): Promise<ModifySubscriptionDescriptionResponse>;
    ModifySubscriptionMapping(query: ModifySubscriptionMappingRequest): Promise<ModifySubscriptionMappingResponse>;
    ModifySubscriptionPermission(query: ModifySubscriptionPermissionRequest): Promise<ModifySubscriptionPermissionResponse>;
    ModifyUIProxyAccountPassword(query: ModifyUIProxyAccountPasswordRequest): Promise<ModifyUIProxyAccountPasswordResponse>;
    ModifyUpgradeToHasForHbase(query: ModifyUpgradeToHasForHbaseRequest): Promise<ModifyUpgradeToHasForHbaseResponse>;
    MultimodAddComponents(query: MultimodAddComponentsRequest): Promise<MultimodAddComponentsResponse>;
    OpenBackup(query: OpenBackupRequest): Promise<OpenBackupResponse>;
    QuerySparkRelateHBase(query: QuerySparkRelateHBaseRequest): Promise<QuerySparkRelateHBaseResponse>;
    QueryXpackRelatedDB(query: QueryXpackRelatedDBRequest): Promise<QueryXpackRelatedDBResponse>;
    ReleasePublicNetworkAddress(query: ReleasePublicNetworkAddressRequest): Promise<ReleasePublicNetworkAddressResponse>;
    ReleaseSubscription(query: ReleaseSubscriptionRequest): Promise<ReleaseSubscriptionResponse>;
    ResizeCluster(query: ResizeClusterRequest): Promise<ResizeClusterResponse>;
    SparkRelateHBase(query: SparkRelateHBaseRequest): Promise<SparkRelateHBaseResponse>;
    UpgradeMinorVersion(query: UpgradeMinorVersionRequest): Promise<UpgradeMinorVersionResponse>;
    XpackRelateDB(query: XpackRelateDBRequest): Promise<XpackRelateDBResponse>;
    DescribeClusterConnectAddrs(query: DescribeClusterConnectAddrsRequest): Promise<DescribeClusterConnectAddrsResponse>;
    ConvertCluster(query: ConvertClusterRequest): Promise<ConvertClusterResponse>;
    RenewCluster(query: RenewClusterRequest): Promise<RenewClusterResponse>;
    ListHbaseInstances(query: ListHbaseInstancesRequest): Promise<ListHbaseInstancesResponse>;
    TagResources(query: TagResourcesRequest): Promise<TagResourcesResponse>;
    UntagResources(query: UntagResourcesRequest): Promise<UntagResourcesResponse>;
    ListTagResources(query: ListTagResourcesRequest): Promise<ListTagResourcesResponse>;
    DeleteServerlessInstance(query: DeleteServerlessInstanceRequest): Promise<DeleteServerlessInstanceResponse>;
    DescribeServerlessInstance(query: DescribeServerlessInstanceRequest): Promise<DescribeServerlessInstanceResponse>;
    EnableServerlessPublicConnection(query: EnableServerlessPublicConnectionRequest): Promise<EnableServerlessPublicConnectionResponse>;
    GetMultimodeCmsUrl(query: GetMultimodeCmsUrlRequest): Promise<GetMultimodeCmsUrlResponse>;
    QueryHBaseHaDB(query: QueryHBaseHaDBRequest): Promise<QueryHBaseHaDBResponse>;
    RelateDbForHBaseHa(query: RelateDbForHBaseHaRequest): Promise<RelateDbForHBaseHaResponse>;
    AddUserHdfsInfo(query: AddUserHdfsInfoRequest): Promise<AddUserHdfsInfoResponse>;
    DeleteUserHdfsInfo(query: DeleteUserHdfsInfoRequest): Promise<DeleteUserHdfsInfoResponse>;
}
export default HBASE;
