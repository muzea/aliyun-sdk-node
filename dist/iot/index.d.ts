interface IOT {
    BatchAddDeviceGroupRelations(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "GroupId": string;
        "Device"?: string[];
    }): Promise<{}>;
    BatchDeleteDeviceGroupRelations(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "GroupId": string;
        "Device"?: string[];
    }): Promise<{}>;
    ClearEdgeInstanceDriverConfigs(query: {
        "RegionId"?: string;
        "DriverId": string;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    CreateDeviceGroup(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "GroupName": string;
        "SuperGroupId"?: string;
        "GroupDesc"?: string;
    }): Promise<{}>;
    BatchBindDeviceToEdgeInstanceWithDriver(query: {
        "RegionId"?: string;
        "DriverId": string;
        "IotIds": string[];
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    BindDriverToEdgeInstance(query: {
        "RegionId"?: string;
        "DriverId": string;
        "InstanceId": string;
        "IotInstanceId"?: string;
        "OrderId"?: string;
    }): Promise<{}>;
    BatchCheckDeviceNames(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey": string;
        "DeviceName"?: string[];
    }): Promise<{}>;
    BatchGetDeviceDriver(query: {
        "RegionId"?: string;
        "IotIds": string[];
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    BatchGetDeviceState(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string[];
        "IotId"?: string[];
    }): Promise<{}>;
    BatchQueryDeviceDetail(query: {
        "RegionId"?: string;
        "DeviceName": string[];
        "ProductKey": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    BatchUpdateDeviceNickname(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "DeviceNicknameInfo": string[];
    }): Promise<{}>;
    BindGatewayToEdgeInstance(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "IotInstanceId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
        "IotId"?: string;
    }): Promise<{}>;
    CloseEdgeInstanceDeployment(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    CreateEdgeInstance(query: {
        "RegionId"?: string;
        "Name": string;
        "IotInstanceId"?: string;
        "Tags"?: string;
        "Spec"?: number;
    }): Promise<{}>;
    CreateRuleAction(query: {
        "RegionId"?: string;
        "Type": string;
        "Configuration": string;
        "IotInstanceId"?: string;
        "RuleId": number;
        "ErrorActionFlag"?: boolean;
    }): Promise<{}>;
    CreateTopicRouteTable(query: {
        "RegionId"?: string;
        "DstTopic": string[];
        "IotInstanceId"?: string;
        "SrcTopic": string;
    }): Promise<{}>;
    DeleteTopicRouteTable(query: {
        "RegionId"?: string;
        "DstTopic": string[];
        "IotInstanceId"?: string;
        "SrcTopic": string;
    }): Promise<{}>;
    BatchClearEdgeInstanceDeviceConfig(query: {
        "RegionId"?: string;
        "IotIds": string[];
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    BatchGetEdgeInstanceDeviceConfig(query: {
        "RegionId"?: string;
        "IotIds": string[];
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    BatchGetEdgeInstanceDriverConfigs(query: {
        "RegionId"?: string;
        "DriverIds": string[];
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    BatchRegisterDeviceWithApplyId(query: {
        "RegionId"?: string;
        "ApplyId": number;
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    BatchUnbindDeviceFromEdgeInstance(query: {
        "RegionId"?: string;
        "IotIds": string[];
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    CreateEdgeInstanceDeployment(query: {
        "RegionId"?: string;
        "Type": string;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    CreateProduct(query: {
        "RegionId"?: string;
        "NodeType": number;
        "IotInstanceId"?: string;
        "ProductName": string;
        "DataFormat"?: number;
        "Description"?: string;
        "AliyunCommodityCode"?: string;
        "Id2"?: boolean;
        "CategoryId"?: number;
        "ProtocolType"?: string;
        "NetType"?: string;
        "JoinPermissionId"?: string;
    }): Promise<{}>;
    CreateProductTopic(query: {
        "RegionId"?: string;
        "TopicShortName": string;
        "IotInstanceId"?: string;
        "ProductKey": string;
        "Operation"?: string;
        "Desc"?: string;
    }): Promise<{}>;
    DeleteDevice(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
    }): Promise<{}>;
    DeleteDeviceGroup(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "GroupId": string;
    }): Promise<{}>;
    DeleteProductTags(query: {
        "RegionId"?: string;
        "ProductTagKey": string[];
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    BatchRegisterDevice(query: {
        "RegionId"?: string;
        "Count": number;
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    BatchSetEdgeInstanceDeviceConfig(query: {
        "RegionId"?: string;
        "DeviceConfigs": string[];
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    CreateDataAPIService(query: {
        "RegionId"?: string;
        "ApiPath": string;
        "OriginSql": string;
        "TemplateSql": string;
        "DisplayName": string;
        "FolderId"?: string;
        "Desc"?: string;
        "RequestParam"?: string[];
        "ResponseParam"?: string[];
    }): Promise<{}>;
    CreateLoRaNodesTask(query: {
        "RegionId"?: string;
        "DeviceInfo": string[];
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    CreateProductTags(query: {
        "RegionId"?: string;
        "ProductTag": string[];
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    ListProductByTags(query: {
        "RegionId"?: string;
        "CurrentPage"?: number;
        "PageSize"?: number;
        "IotInstanceId"?: string;
        "ProductTag": string[];
    }): Promise<{}>;
    QueryDeviceDetail(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
    }): Promise<{}>;
    QueryDeviceEventData(query: {
        "RegionId"?: string;
        "EndTime": number;
        "IotInstanceId"?: string;
        "StartTime": number;
        "IotId"?: string;
        "ProductKey"?: string;
        "EventType"?: string;
        "DeviceName"?: string;
        "Identifier"?: string;
        "Asc"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    QueryDeviceStatistics(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey"?: string;
    }): Promise<{}>;
    QueryPageByApplyId(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ApplyId": number;
        "CurrentPage"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    SetEdgeInstanceDriverConfigs(query: {
        "RegionId"?: string;
        "DriverId": string;
        "Configs": string[];
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    CreateRule(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "Name": string;
        "Select"?: string;
        "ShortTopic"?: string;
        "Where"?: string;
        "ProductKey"?: string;
        "RuleDesc"?: string;
        "DataType"?: string;
        "TopicType"?: number;
    }): Promise<{}>;
    DeleteDeviceFile(query: {
        "RegionId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
        "IotInstanceId"?: string;
        "FileId": string;
        "IotId"?: string;
    }): Promise<{}>;
    DeleteDeviceProp(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "PropKey": string;
        "IotId"?: string;
        "DeviceName"?: string;
        "ProductKey"?: string;
    }): Promise<{}>;
    DeleteEdgeInstance(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    DeleteProduct(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    DeleteProductTopic(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "TopicId": string;
    }): Promise<{}>;
    DeleteRule(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "RuleId": number;
    }): Promise<{}>;
    DeleteRuleAction(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ActionId": number;
    }): Promise<{}>;
    DisableThing(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
    }): Promise<{}>;
    EnableThing(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
    }): Promise<{}>;
    GetDataAPIServiceDetail(query: {
        "RegionId"?: string;
        "ApiSrn": string;
    }): Promise<{}>;
    GetDeviceShadow(query: {
        "RegionId"?: string;
        "ProductKey": string;
        "IotInstanceId"?: string;
        "DeviceName": string;
        "ShadowMessage"?: string;
    }): Promise<{}>;
    GetDeviceStatus(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
    }): Promise<{}>;
    GetEdgeInstance(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    GetEdgeInstanceDeployment(query: {
        "RegionId"?: string;
        "DeploymentId": string;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    GetGatewayBySubDevice(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
        "IotId"?: string;
    }): Promise<{}>;
    GetLoraNodesTask(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "TaskId": string;
    }): Promise<{}>;
    GetNodesAddingTask(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "TaskId": string;
    }): Promise<{}>;
    GetRule(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "RuleId": number;
    }): Promise<{}>;
    GetRuleAction(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ActionId": number;
    }): Promise<{}>;
    GetThingTopo(query: {
        "RegionId"?: string;
        "PageSize": number;
        "IotInstanceId"?: string;
        "PageNo": number;
        "ProductKey"?: string;
        "DeviceName"?: string;
        "IotId"?: string;
    }): Promise<{}>;
    InvokeDataAPIService(query: {
        "RegionId"?: string;
        "ApiSrn": string;
        "Param"?: string[];
    }): Promise<{}>;
    InvokeThingService(query: {
        "RegionId"?: string;
        "Args": string;
        "IotInstanceId"?: string;
        "Identifier": string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
    }): Promise<{}>;
    InvokeThingsService(query: {
        "RegionId"?: string;
        "Identifier": string;
        "Args": string;
        "DeviceName": string[];
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    ListProductTags(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    ListRule(query: {
        "RegionId"?: string;
        "CurrentPage": number;
        "PageSize": number;
        "IotInstanceId"?: string;
        "SearchName"?: string;
    }): Promise<{}>;
    ListRuleActions(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "RuleId": number;
    }): Promise<{}>;
    NotifyAddThingTopo(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "DeviceListStr"?: string;
        "GwIotId"?: string;
        "GwProductKey"?: string;
        "GwDeviceName"?: string;
    }): Promise<{}>;
    Pub(query: {
        "RegionId"?: string;
        "TopicFullName": string;
        "MessageContent": string;
        "IotInstanceId"?: string;
        "ProductKey": string;
        "Qos"?: number;
    }): Promise<{}>;
    PubBroadcast(query: {
        "RegionId"?: string;
        "TopicFullName": string;
        "MessageContent": string;
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    QueryAppDeviceList(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "CurrentPage"?: number;
        "PageSize"?: number;
        "ProductKeyList"?: string[];
        "CategoryKeyList"?: string[];
        "TagList"?: string[];
        "AppKey"?: string;
    }): Promise<{}>;
    QueryBatchRegisterDeviceStatus(query: {
        "RegionId"?: string;
        "ApplyId": number;
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    QueryDevice(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey": string;
        "PageSize"?: number;
        "CurrentPage"?: number;
    }): Promise<{}>;
    QueryDeviceByDriver(query: {
        "RegionId"?: string;
        "DriverId": string;
        "CurrentPage": number;
        "PageSize": number;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    QueryDeviceByTags(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "Tag"?: string[];
        "CurrentPage"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    QueryDeviceDesiredProperty(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
        "Identifier"?: string[];
    }): Promise<{}>;
    QueryDeviceFile(query: {
        "RegionId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
        "IotInstanceId"?: string;
        "FileId": string;
        "IotId"?: string;
    }): Promise<{}>;
    QueryDeviceFileList(query: {
        "RegionId"?: string;
        "DeviceName"?: string;
        "IotInstanceId"?: string;
        "ProductKey"?: string;
        "CurrentPage"?: number;
        "PageSize"?: number;
        "IotId"?: string;
    }): Promise<{}>;
    QueryDeviceGroupByDevice(query: {
        "RegionId"?: string;
        "DeviceName": string;
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    QueryDeviceGroupByTags(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "Tag"?: string[];
        "CurrentPage"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    QueryDeviceGroupInfo(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "GroupId": string;
    }): Promise<{}>;
    QueryDeviceGroupList(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "SuperGroupId"?: string;
        "GroupName"?: string;
        "CurrentPage"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    QueryDeviceGroupTagList(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "GroupId": string;
    }): Promise<{}>;
    QueryDeviceListByDeviceGroup(query: {
        "RegionId"?: string;
        "CurrentPage"?: number;
        "PageSize"?: number;
        "IotInstanceId"?: string;
        "GroupId": string;
    }): Promise<{}>;
    QueryDeviceProp(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "IotId"?: string;
        "DeviceName"?: string;
        "ProductKey"?: string;
    }): Promise<{}>;
    QueryDevicePropertiesData(query: {
        "RegionId"?: string;
        "DeviceName": string;
        "StartTime": number;
        "EndTime": number;
        "Asc": number;
        "PageSize": number;
        "Identifier": string[];
        "IotInstanceId"?: string;
        "ProductKey": string;
        "IotId"?: string;
    }): Promise<{}>;
    QueryDevicePropertyData(query: {
        "RegionId"?: string;
        "StartTime": number;
        "EndTime": number;
        "Asc": number;
        "PageSize": number;
        "IotInstanceId"?: string;
        "Identifier": string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
    }): Promise<{}>;
    QueryDevicePropertyStatus(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
    }): Promise<{}>;
    QueryDeviceServiceData(query: {
        "RegionId"?: string;
        "EndTime": number;
        "IotInstanceId"?: string;
        "StartTime": number;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
        "Identifier"?: string;
        "Asc"?: number;
        "PageSize"?: number;
    }): Promise<{}>;
    QueryEdgeInstance(query: {
        "RegionId"?: string;
        "CurrentPage": number;
        "PageSize": number;
        "IotInstanceId"?: string;
        "Name"?: string;
    }): Promise<{}>;
    QueryEdgeInstanceDevice(query: {
        "RegionId"?: string;
        "CurrentPage": number;
        "PageSize": number;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    QueryEdgeInstanceDriver(query: {
        "RegionId"?: string;
        "CurrentPage": number;
        "PageSize": number;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    QueryEdgeInstanceGateway(query: {
        "RegionId"?: string;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    QueryEdgeInstanceHistoricDeployment(query: {
        "RegionId"?: string;
        "CurrentPage": number;
        "PageSize": number;
        "InstanceId": string;
        "IotInstanceId"?: string;
        "StartTime"?: number;
        "EndTime"?: number;
    }): Promise<{}>;
    QueryLoRaJoinPermissions(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    QueryProduct(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    QueryProductList(query: {
        "RegionId"?: string;
        "PageSize": number;
        "IotInstanceId"?: string;
        "CurrentPage": number;
        "AliyunCommodityCode"?: string;
    }): Promise<{}>;
    QueryProductTopic(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    QuerySuperDeviceGroup(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "GroupId": string;
    }): Promise<{}>;
    QueryTopicReverseRouteTable(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "Topic": string;
    }): Promise<{}>;
    QueryTopicRouteTable(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "Topic": string;
    }): Promise<{}>;
    RRpc(query: {
        "RegionId"?: string;
        "Timeout": number;
        "DeviceName": string;
        "RequestBase64Byte": string;
        "IotInstanceId"?: string;
        "ProductKey": string;
        "Topic"?: string;
    }): Promise<{}>;
    RegisterDevice(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "ProductKey": string;
        "DeviceName"?: string;
        "DevEui"?: string;
        "PinCode"?: string;
        "Nickname"?: string;
    }): Promise<{}>;
    RemoveThingTopo(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "IotId"?: string;
        "ProductKey"?: string;
        "DeviceName"?: string;
    }): Promise<{}>;
    SaveDeviceProp(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "Props": string;
        "IotId"?: string;
        "DeviceName"?: string;
        "ProductKey"?: string;
    }): Promise<{}>;
    SetDeviceDesiredProperty(query: {
        "RegionId"?: string;
        "Versions"?: string;
        "IotInstanceId"?: string;
        "Items": string;
        "IotId"?: string;
        "DeviceName"?: string;
        "ProductKey"?: string;
    }): Promise<{}>;
    SetDeviceGroupTags(query: {
        "RegionId"?: string;
        "TagString"?: string;
        "IotInstanceId"?: string;
        "GroupId": string;
    }): Promise<{}>;
    SetDeviceProperty(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "Items": string;
        "IotId"?: string;
        "DeviceName"?: string;
        "ProductKey"?: string;
    }): Promise<{}>;
    SetDevicesProperty(query: {
        "RegionId"?: string;
        "Items": string;
        "DeviceName": string[];
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    StartRule(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "RuleId": number;
    }): Promise<{}>;
    StopRule(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "RuleId": number;
    }): Promise<{}>;
    UnbindDriverFromEdgeInstance(query: {
        "RegionId"?: string;
        "DriverId": string;
        "InstanceId": string;
        "IotInstanceId"?: string;
    }): Promise<{}>;
    UpdateDeviceGroup(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "GroupId": string;
        "GroupDesc"?: string;
    }): Promise<{}>;
    UpdateDeviceShadow(query: {
        "RegionId"?: string;
        "ProductKey": string;
        "ShadowMessage": string;
        "IotInstanceId"?: string;
        "DeviceName": string;
    }): Promise<{}>;
    UpdateEdgeInstance(query: {
        "RegionId"?: string;
        "Name": string;
        "InstanceId": string;
        "IotInstanceId"?: string;
        "Tags"?: string;
        "Spec"?: number;
        "BizEnable"?: boolean;
    }): Promise<{}>;
    UpdateProduct(query: {
        "RegionId"?: string;
        "ProductName": string;
        "IotInstanceId"?: string;
        "ProductKey": string;
        "Description"?: string;
    }): Promise<{}>;
    UpdateProductTags(query: {
        "RegionId"?: string;
        "ProductTag": string[];
        "IotInstanceId"?: string;
        "ProductKey": string;
    }): Promise<{}>;
    UpdateProductTopic(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "Desc"?: string;
        "Operation"?: string;
        "TopicShortName"?: string;
        "TopicId"?: string;
    }): Promise<{}>;
    UpdateRule(query: {
        "RegionId"?: string;
        "IotInstanceId"?: string;
        "RuleId": number;
        "Select"?: string;
        "ShortTopic"?: string;
        "Where"?: string;
        "ProductKey"?: string;
        "Name"?: string;
        "RuleDesc"?: string;
        "TopicType"?: number;
    }): Promise<{}>;
    UpdateRuleAction(query: {
        "RegionId"?: string;
        "Type": string;
        "Configuration": string;
        "IotInstanceId"?: string;
        "ActionId": number;
    }): Promise<{}>;
}
export default IOT;
